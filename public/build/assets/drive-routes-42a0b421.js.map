{"version":3,"file":"drive-routes-42a0b421.js","sources":["../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs","../../../node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs","../../../resources/client/drive/drive-query-keys.ts","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.ts","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.ts","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.tsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.tsx","../../../resources/client/drive/drive-store.ts","../../../resources/client/drive/shareable-link/queries/create-shareable-link.ts","../../../resources/client/drive/files/queries/use-add-star-to-entries.ts","../../../resources/client/drive/files/queries/use-remove-star-from-entries.ts","../../../resources/client/drive/files/queries/use-duplicate-entries.ts","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/drive-page/drive-page.tsx","../../../resources/client/drive/files/queries/use-delete-entries.ts","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.ts","../../../resources/client/drive/files/queries/use-restore-entries.ts","../../../resources/client/drive/entry-actions/use-entry-actions.ts","../../../resources/client/drive/layout/sidebar/storage-summary/storage-summary.ts","../../../resources/client/drive/uploading/use-drive-upload-queue.ts","../../../resources/client/drive/entry-actions/use-drive-page-actions.ts","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.tsx","../../../resources/client/drive/file-view/file-table/file-table-columns.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.tsx","../../../common/resources/client/ui/layout/dashboard-content-header.tsx","../../../resources/client/drive/files/queries/use-folder-path.ts","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.tsx","../../../resources/client/drive/layout/sorting/available-sorts.ts","../../../resources/client/drive/layout/sorting/entries-sort-button.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.tsx","../../../common/resources/client/ui/progress/meter.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.tsx","../../../common/resources/client/workspace/requests/create-workspace.ts","../../../common/resources/client/workspace/new-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/workspace-with-members.ts","../../../common/resources/client/workspace/requests/invite-members.ts","../../../common/resources/client/workspace/requests/resend-invite.ts","../../../common/resources/client/utils/string/is-email.ts","../../../common/resources/client/workspace/requests/change-role.ts","../../../common/resources/client/workspace/requests/remove-member.ts","../../../common/resources/client/workspace/leave-workspace-confirmation.tsx","../../../common/resources/client/workspace/workspace-members-dialog.tsx","../../../common/resources/client/workspace/requests/update-workspace.ts","../../../common/resources/client/workspace/rename-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/delete-workspace.ts","../../../common/resources/client/workspace/workspace-selector.tsx","../../../resources/client/drive/menu-positions.ts","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.ts","../../../resources/client/drive/files/queries/use-move-entries.ts","../../../resources/client/drive/files/utils/can-move-entries-into.ts","../../../resources/client/drive/files/use-folder-drop-action.ts","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.ts","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.ts","../../../common/resources/client/ui/tree/tree-context.tsx","../../../common/resources/client/ui/tree/render-tree.ts","../../../common/resources/client/ui/tree/tree-label.tsx","../../../common/resources/client/ui/tree/tree-item.tsx","../../../common/resources/client/ui/tree/tree.tsx","../../../resources/client/drive/layout/sidebar/folder-tree.tsx","../../../resources/client/drive/layout/sidebar/sidebar-menu.tsx","../../../resources/client/drive/layout/create-new-button.tsx","../../../resources/client/drive/layout/sidebar/sidebar.tsx","../../../resources/client/drive/files/queries/use-paginated-entries.ts","../../../resources/client/drive/search/drive-search-filters.ts","../../../resources/client/drive/search/search-filter-list.tsx","../../../common/resources/client/ui/interactions/utils/restrict-resizable-within-boundary.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selectable.ts","../../../common/resources/client/ui/interactions/utils/rects-intersect.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selection-box.ts","../../../resources/client/drive/files/queries/use-entries.ts","../../../resources/client/drive/files/use-selected-entries.ts","../../../resources/client/drive/entry-actions/entry-action-list.tsx","../../../resources/client/drive/files/drive-context-menu.tsx","../../../common/resources/client/utils/hooks/is-touch-device.ts","../../../resources/client/drive/file-view/use-file-view-dnd.ts","../../../resources/client/drive/file-view/file-table/file-table-row.tsx","../../../resources/client/drive/file-view/use-view-item-action-handler.ts","../../../resources/client/drive/file-view/file-table/file-table.tsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid.tsx","../../../resources/client/drive/layout/sorting/drive-sort-button.tsx","../../../resources/client/drive/page-breadcrumbs.tsx","../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/drive/drop-target-mask.tsx","../../../resources/client/drive/file-view/file-view.tsx","../../../resources/client/drive/uploading/upload-queue-item.tsx","../../../resources/client/drive/uploading/upload-queue.tsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.tsx","../../../resources/client/drive/details-sidebar/requests/use-sync-entry-tags.ts","../../../resources/client/drive/details-sidebar/requests/use-file-entry-tags.ts","../../../resources/client/drive/details-sidebar/details-sidebar-tags.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.tsx","../../../resources/client/drive/details-sidebar/details-sidebar.tsx","../../../resources/client/drive/files/queries/use-rename-entry.ts","../../../resources/client/drive/files/dialogs/rename-entry-dialog.tsx","../../../resources/client/drive/files/queries/create-folder.ts","../../../resources/client/drive/files/dialogs/new-folder-dialog.tsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.tsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.ts","../../../resources/client/drive/files/drive-entry.ts","../../../resources/client/drive/share-dialog/permission-selector.tsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.ts","../../../common/resources/client/ui/images/user-avatar.tsx","../../../resources/client/drive/share-dialog/member-list.tsx","../../../resources/client/drive/share-dialog/share-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.ts","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.ts","../../../common/resources/client/utils/string/random-string.ts","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.tsx","../../../resources/client/drive/share-dialog/share-dialog.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.tsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.tsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.tsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.tsx","../../../resources/client/drive/search/navbar-search.tsx","../../../common/resources/client/ui/interactions/dnd/use-drag-monitor.ts","../../../resources/client/drive/file-view/entry-drag-preview.tsx","../../../resources/client/drive/layout/drive-content-header.tsx","../../../resources/client/drive/layout/drive-layout.tsx","../../../resources/client/drive/drive-routes.tsx"],"sourcesContent":["import { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\n\nclass InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\nexport { InfiniteQueryObserver };\n//# sourceMappingURL=infiniteQueryObserver.mjs.map\n","'use client';\nimport { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n","import type {DriveApiIndexParams} from './files/queries/use-paginated-entries';\nimport type {UserFoldersApiParams} from './files/queries/use-folders';\nimport {queryClient} from '@common/http/query-client';\nimport {Key} from 'react';\n\nexport const DriveQueryKeys = {\n  fetchEntries: (params?: DriveApiIndexParams) => {\n    const key: ('drive-entries' | DriveApiIndexParams)[] = ['drive-entries'];\n    if (params) key.push(params);\n    return key;\n  },\n  fetchUserFolders(params?: UserFoldersApiParams) {\n    const key: (string | UserFoldersApiParams)[] = ['user-folders'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchShareableLink: (params?: {hash?: string; sort?: string}) => {\n    const key: (string | object)[] = ['shareable-link'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchFolderPath(\n    hash?: string,\n    params?: Record<string, string | number | null>\n  ) {\n    const key: (string | any)[] = ['folder-path'];\n    if (hash) {\n      key.push(hash);\n    }\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchEntryShareableLink: (entryId: number) => {\n    return ['file-entries', entryId, 'shareable-link'];\n  },\n  fetchFileEntry: (id?: number) => {\n    const key: Key[] = ['drive/file-entries/model'];\n    if (id) key.push(id);\n    return key;\n  },\n  fetchStorageSummary: ['storage-summary'],\n};\n\nexport function invalidateEntryQueries() {\n  return Promise.all([\n    queryClient.invalidateQueries(DriveQueryKeys.fetchEntries()),\n    queryClient.invalidateQueries(DriveQueryKeys.fetchFolderPath()),\n    queryClient.invalidateQueries(DriveQueryKeys.fetchUserFolders()),\n    // fetching model for single file entry in \"useFileEntry\"\n    queryClient.invalidateQueries(DriveQueryKeys.fetchFileEntry()),\n  ]);\n}\n","import {create} from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport {DriveSortDescriptor} from '../../drive-store';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@common/utils/hooks/local-storage';\n\ninterface LinkPageState {\n  password: string | null;\n  setPassword: (value: string) => void;\n  isPasswordProtected: boolean;\n  setIsPasswordProtected: (value: boolean) => void;\n  activeSort: DriveSortDescriptor;\n  setActiveSort: (value: DriveSortDescriptor) => void;\n  viewMode: 'grid' | 'list';\n  setViewMode: (mode: 'grid' | 'list') => void;\n}\n\nexport const useLinkPageStore = create<LinkPageState>()(\n  immer(set => ({\n    password: null,\n    viewMode: getFromLocalStorage<'list' | 'grid'>('drive.viewMode'),\n    activeSort: {\n      orderBy: 'updated_at',\n      orderDir: 'desc',\n    },\n    setPassword: value => {\n      set(state => {\n        state.password = value;\n      });\n    },\n    isPasswordProtected: false,\n    setIsPasswordProtected: value => {\n      set(state => {\n        state.isPasswordProtected = value;\n      });\n    },\n\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setActiveSort: value => {\n      set(state => {\n        state.activeSort = value;\n      });\n    },\n  }))\n);\n\nexport function linkPageState() {\n  return useLinkPageStore.getState();\n}\n","import {\n  QueryFunctionContext,\n  QueryKey,\n  useInfiniteQuery,\n} from '@tanstack/react-query';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport type {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport type {DriveEntry} from '../../files/drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {\n  linkPageState,\n  useLinkPageStore,\n} from '../shareable-link-page/link-page-store';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface FetchShareableLinkPageResponse extends FetchShareableLinkResponse {\n  folderChildren: LengthAwarePaginationResponse<DriveEntry>;\n}\n\ninterface FetchShareableLinkPageErrorResponse extends BackendErrorResponse {\n  passwordInvalid: boolean;\n}\n\ninterface FetchLinkByHashParams {\n  hash: string;\n  page?: number;\n  order?: string;\n  password?: string | null;\n}\nfunction fetchLinkByHash({\n  hash,\n  page = 1,\n  order,\n  password,\n}: FetchLinkByHashParams): Promise<FetchShareableLinkPageResponse> {\n  return apiClient\n    .get(`shareable-links/${hash}`, {\n      params: {withEntries: true, page, order, password},\n    })\n    .then(response => response.data);\n}\n\nexport function useShareableLinkPage() {\n  const {hash} = useParams();\n  const {orderBy, orderDir} = useLinkPageStore(s => s.activeSort);\n  const order = `${orderBy}:${orderDir}`;\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  const query = useInfiniteQuery(\n    DriveQueryKeys.fetchShareableLink({hash, sort: order}),\n    ({pageParam = 1}: QueryFunctionContext<QueryKey, number>) => {\n      return fetchLinkByHash({hash: hash!, page: pageParam, order, password});\n    },\n    {\n      getNextPageParam: lastResponse => {\n        if (!lastResponse.folderChildren) return undefined;\n        const currentPage = lastResponse.folderChildren.current_page;\n        const lastPage = lastResponse.folderChildren.last_page;\n        if (currentPage >= lastPage) {\n          return undefined;\n        }\n        return currentPage + 1;\n      },\n      // disable query if link is password protected and correct\n      // password was not entered yet, to prevent unnecessary requests\n      enabled: (!!hash && !isPasswordProtected) || password != null,\n      keepPreviousData: true,\n      retry: (retryCount, e: unknown) => {\n        if (isPasswordInvalidResponse(e)) {\n          return false;\n        } else {\n          return retryCount <= 2;\n        }\n      },\n      onError: (e: unknown) => {\n        if (isPasswordInvalidResponse(e)) {\n          return linkPageState().setIsPasswordProtected(true);\n        }\n      },\n    }\n  );\n\n  return {\n    ...query,\n    link: query.data?.pages[0].link,\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data),\n  };\n}\n\nfunction isPasswordInvalidResponse(e: unknown) {\n  return (\n    axios.isAxiosError(e) &&\n    (e.response?.data as FetchShareableLinkPageErrorResponse)?.passwordInvalid\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {linkPageState} from '../link-page-store';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  matches: boolean;\n}\n\ninterface Props {\n  password: string;\n  linkHash: string;\n}\n\nfunction checkLinkPassword({password, linkHash}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkHash}/check-password`, {password})\n    .then(r => r.data);\n}\n\nexport function useCheckLinkPassword() {\n  return useMutation((props: Props) => checkLinkPassword(props), {\n    onSuccess: (response, props) => {\n      if (response.matches) {\n        linkPageState().setPassword(props.password);\n      }\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../../files/drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {useLinkPageStore} from '../link-page-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Props {\n  password: string | null;\n  linkId: number;\n}\n\nfunction importIntoOwnDrive({linkId, password}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkId}/import`, {password})\n    .then(r => r.data);\n}\n\nexport function useImportIntoOwnDrive() {\n  const password = useLinkPageStore(s => s.password);\n  return useMutation(\n    (props: Omit<Props, 'password'>) =>\n      importIntoOwnDrive({...props, password}),\n    {\n      onSuccess: async () => {\n        await queryClient.invalidateQueries(\n          DriveQueryKeys.fetchShareableLink()\n        );\n        toast(message('Item imported into your drive'));\n      },\n      onError: err => showHttpErrorToast(err, message('Could not create link')),\n    }\n  );\n}\n","import {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\nimport {useImportIntoOwnDrive} from './queries/import-into-own-drive';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {ImportExportIcon} from '@common/icons/material/ImportExport';\nimport React from 'react';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\n\nexport function ShareableLinkPageActionButtons() {\n  const {link} = useShareableLinkPage();\n  const {user, isLoggedIn} = useAuth();\n  const {downloadUrl} = useFileEntryUrls(link?.entry);\n  const importIntoOwnDrive = useImportIntoOwnDrive();\n  const alreadyImported = link?.entry?.users!.find(u => u.id === user?.id);\n\n  if (!link?.entry) return null;\n\n  return (\n    <div>\n      {link.allow_download && <DownloadButton downloadUrl={downloadUrl} />}\n      {!alreadyImported && isLoggedIn && link.allow_edit && (\n        <MenuTrigger\n          onItemSelected={key => {\n            if (key === 'import') {\n              importIntoOwnDrive.mutate({linkId: link.id});\n            } else if (key === 'download') {\n              if (downloadUrl) {\n                downloadFileFromUrl(downloadUrl);\n              }\n            }\n          }}\n        >\n          <IconButton className=\"ml-6\" disabled={importIntoOwnDrive.isLoading}>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          <Menu>\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\n              <Trans message=\"Download\" />\n            </MenuItem>\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\n              <Trans message=\"Save a copy to your own drive\" />\n            </MenuItem>\n          </Menu>\n        </MenuTrigger>\n      )}\n    </div>\n  );\n}\n\ninterface DownloadButtonProps {\n  downloadUrl: string | undefined;\n}\nfunction DownloadButton({downloadUrl}: DownloadButtonProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    return (\n      <Tooltip label={<Trans message=\"Download\" />}>\n        <IconButton\n          onClick={() => {\n            if (downloadUrl) {\n              downloadFileFromUrl(downloadUrl);\n            }\n          }}\n        >\n          <FileDownloadIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Button\n      size=\"sm\"\n      variant=\"flat\"\n      color=\"chip\"\n      startIcon={<FileDownloadIcon />}\n      onClick={() => {\n        if (downloadUrl) {\n          downloadFileFromUrl(downloadUrl);\n        }\n      }}\n    >\n      <Trans message=\"Download\" />\n    </Button>\n  );\n}\n","import React from 'react';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkPageActionButtons} from './shareable-link-page-action-buttons';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\nexport function ShareableLinkNavbar() {\n  const {link} = useShareableLinkPage();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <Navbar\n      size=\"md\"\n      color=\"bg\"\n      className=\"flex-shrink-0\"\n      rightChildren={link?.entry && <ShareableLinkPageActionButtons />}\n      menuPosition=\"shareable-link-page\"\n      hideLogo={isMobile}\n    >\n      {link?.entry && link.entry.type !== 'folder' && (\n        <div className=\"flex items-center gap-10\">\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\n          <div className=\"font-medium whitespace-nowrap overflow-hidden overflow-ellipsis flex-auto\">\n            {link.entry.name}\n          </div>\n        </div>\n      )}\n    </Navbar>\n  );\n}\n","import {useState} from 'react';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {useCheckLinkPassword} from './queries/check-link-password';\nimport {Trans} from '@common/i18n/trans';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {useParams} from 'react-router-dom';\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\n\nexport function PasswordPage() {\n  const {trans} = useTrans();\n  const {hash} = useParams();\n  const fieldLabel = trans({message: 'Password'});\n  const [password, setPassword] = useState<string>('');\n  const checkPassword = useCheckLinkPassword();\n  const linkHash = hash ? hash.split(':')[0] : null;\n\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\n\n  return (\n    <div className=\"bg-alt h-screen flex flex-col\">\n      <ShareableLinkNavbar />\n      <div className=\"px-10 md:px-20 mx-auto my-80\">\n        <div className=\"flex flex-col md:flex-row gap-40 md:gap-14 bg items-center max-w-[560px] border rounded p-24\">\n          <div className=\"h-132\">\n            <SvgImage src={secureFilesSvg} />\n          </div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              checkPassword.mutate({\n                linkHash: linkHash!,\n                password,\n              });\n            }}\n          >\n            <span className=\"text-sm\">\n              <Trans message=\"The link you are trying to access is password protected.\" />\n            </span>\n            <TextField\n              autoFocus\n              placeholder={fieldLabel}\n              aria-label={fieldLabel}\n              className=\"mt-10 mb-20\"\n              type=\"password\"\n              value={password}\n              required\n              errorMessage={\n                passwordIsInvalid && <Trans message=\"Password is not valid\" />\n              }\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n            <div className=\"text-right\">\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                className=\"w-full md:w-auto\"\n                disabled={checkPassword.isLoading}\n              >\n                <Trans message=\"Enter\" />\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface BaseFileGridItemProps extends ComponentPropsWithoutRef<'div'> {\n  entry: DriveEntry;\n  className?: string;\n  isSelected?: boolean;\n  isMobileMode?: boolean;\n  footerAdornment?: ReactNode;\n}\n\nexport const BaseFileGridItem = React.forwardRef<\n  HTMLDivElement,\n  BaseFileGridItemProps\n>(\n  (\n    {entry, className, isSelected, isMobileMode, footerAdornment, ...domProps},\n    ref\n  ) => {\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        className={clsx(\n          'shadow rounded border aspect-square flex flex-col grid-item transition-shadow-opacity select-none overflow-hidden outline-none dark:bg-alt',\n          isSelected && 'border-primary',\n          className\n        )}\n      >\n        <div className=\"flex-auto relative min-h-0\">\n          <FileThumbnail\n            className=\"h-full w-full\"\n            iconClassName=\"block w-70 h-70 absolute m-auto inset-0\"\n            file={entry}\n          />\n        </div>\n        <Footer\n          entry={entry}\n          isSelected={isSelected}\n          isMobile={isMobileMode}\n          adornment={footerAdornment}\n        />\n      </div>\n    );\n  }\n);\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n  isMobile?: boolean;\n  adornment?: ReactNode;\n}\nfunction Footer({entry, isSelected, isMobile, adornment}: FooterProps) {\n  return (\n    <div\n      className={clsx(\n        'text-sm h-48 flex-shrink-0 flex items-center',\n        isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16',\n        isSelected && 'bg-primary-light/20'\n      )}\n    >\n      <div className=\"min-w-0 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n        {entry.name}\n      </div>\n      {adornment}\n    </div>\n  );\n}\n","import {BaseFileGridItem} from '../../../file-view/file-grid/base-file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../../files/drive-entry';\n\nexport interface FolderPreviewGridProps {\n  entries: DriveEntry[];\n  onEntrySelected: (entry: DriveEntry, index: number) => void;\n}\nexport function FolderPreviewFileGrid({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  return (\n    <div className=\"file-grid\">\n      {entries.map((entry, index) => (\n        <BaseFileGridItem\n          tabIndex={-1}\n          className=\"hover:shadow-md cursor-pointer bg\"\n          entry={entry}\n          key={entry.id}\n          onContextMenu={e => {\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              onEntrySelected(entry, index);\n            }\n          }}\n          onClick={() => {\n            onEntrySelected(entry, index);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n","import {enableMapSet} from 'immer';\nimport {create} from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport type {DrivePage} from './drive-page/drive-page';\nimport {Key} from 'react';\nimport {DriveEntry} from './files/drive-entry';\nimport {SortColumn, SortDirection} from './layout/sorting/available-sorts';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@common/utils/hooks/local-storage';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nconst stableArray: DriveEntry[] = [];\nenableMapSet();\n\nexport type DriveDialog =\n  | 'rename'\n  | 'newFolder'\n  | 'preview'\n  | 'share'\n  | 'getLink'\n  | 'moveTo'\n  | 'confirmAndDeleteForever'\n  | 'trashFolderBlock';\n\nexport interface ActiveActionDialog {\n  name: DriveDialog;\n  entries: DriveEntry[];\n}\n\nexport interface DriveSortDescriptor {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n}\n\ninterface State {\n  uploadQueueIsOpen: boolean;\n  selectedEntries: Set<number>;\n  sidebarExpandedKeys: Key[];\n  activePage?: DrivePage;\n  activeActionDialog?: {\n    name: DriveDialog;\n    entries: DriveEntry[];\n  } | null;\n  entriesBeingDragged: number[];\n  viewMode: 'grid' | 'list';\n  sortDescriptor: DriveSortDescriptor;\n  contextMenuData: {x: number; y: number; entry?: DriveEntry} | null;\n}\n\ninterface Actions {\n  setUploadQueueIsOpen: (isOpen: boolean) => void;\n  setSidebarExpandedKeys: (keys: Key[]) => void;\n  expandSidebarItem: (key: Key) => void;\n  collapseSidebarItem: (key: Key) => void;\n  toggleSidebarItem: (key: Key) => void;\n  setActivePage: (page: DrivePage) => void;\n  setActiveActionDialog: (\n    name: DriveDialog | null,\n    entries?: DriveEntry[]\n  ) => void;\n  setViewMode: (mode: 'grid' | 'list') => void;\n  setSortDescriptor: (value: DriveSortDescriptor) => void;\n  setContextMenuData: (\n    position: {x: number; y: number; entry?: DriveEntry} | null\n  ) => void;\n  setEntriesBeingDragged: (value: number[]) => void;\n  selectEntries: (\n    entries: (number | undefined | null)[],\n    merge?: boolean\n  ) => void;\n  deselectEntries: (entries: number[] | 'all') => void;\n  reset: () => void;\n}\n\nconst initialState: State = {\n  uploadQueueIsOpen: false,\n  contextMenuData: null,\n  selectedEntries: new Set(),\n  entriesBeingDragged: [],\n  activeActionDialog: null,\n  sidebarExpandedKeys: [],\n  viewMode: getFromLocalStorage<'list' | 'grid'>(\n    'drive.viewMode',\n    getBootstrapData().settings?.drive?.default_view || 'grid'\n  ),\n  sortDescriptor: {\n    orderBy: 'updated_at',\n    orderDir: 'desc',\n  },\n};\n\nexport const useDriveStore = create<State & Actions>()(\n  immer((set, get) => ({\n    ...initialState,\n    setUploadQueueIsOpen: isOpen => {\n      set(state => {\n        state.uploadQueueIsOpen = isOpen;\n      });\n    },\n    setContextMenuData: data => {\n      set(state => {\n        state.contextMenuData = data;\n      });\n    },\n    setSortDescriptor: value => {\n      set(state => {\n        const activePageId = get().activePage?.id;\n        if (activePageId) {\n          setInLocalStorage('selectedSorting', {\n            ...getFromLocalStorage('selectedSorting'),\n            [activePageId]: value,\n          });\n        }\n        state.sortDescriptor = value;\n      });\n    },\n    setActivePage: value => {\n      set(state => {\n        state.activePage = value;\n\n        const storedDescriptor =\n          getFromLocalStorage('selectedSorting')?.[value.id];\n        state.sortDescriptor = storedDescriptor\n          ? storedDescriptor\n          : value.sortDescriptor;\n      });\n    },\n    setEntriesBeingDragged: value => {\n      set(state => {\n        state.entriesBeingDragged = value;\n      });\n    },\n    setActiveActionDialog: (name, entries = stableArray) => {\n      set(state => {\n        const current = get().activeActionDialog;\n        // prevent creating a new object, if neither name nor entries changed\n        if (current?.name !== name || current.entries !== entries) {\n          state.activeActionDialog = name ? {name, entries} : null;\n        }\n      });\n    },\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setSidebarExpandedKeys: value =>\n      set(state => {\n        state.sidebarExpandedKeys = value;\n      }),\n    expandSidebarItem: key =>\n      set(state => {\n        if (!state.sidebarExpandedKeys.includes(key)) {\n          state.sidebarExpandedKeys.push(key);\n        }\n      }),\n    collapseSidebarItem: key =>\n      set(state => {\n        const index = state.sidebarExpandedKeys.indexOf(key);\n        if (index > -1) {\n          state.sidebarExpandedKeys.splice(index, 1);\n        }\n      }),\n    toggleSidebarItem: key =>\n      set(state => {\n        if (state.sidebarExpandedKeys.includes(key)) {\n          state.expandSidebarItem(key);\n        } else {\n          state.collapseSidebarItem(key);\n        }\n      }),\n    selectEntries: (entries, merge) => {\n      set(state => {\n        if (!merge) {\n          state.selectedEntries.clear();\n        }\n        entries.forEach(e => e && state.selectedEntries.add(e));\n      });\n    },\n    deselectEntries: entries => {\n      set(state => {\n        if (!state.selectedEntries.size) return;\n        if (entries === 'all') {\n          state.selectedEntries = new Set();\n        } else {\n          entries.forEach(e => state.selectedEntries.delete(e));\n        }\n      });\n    },\n    reset: () => {\n      set(initialState);\n    },\n  }))\n);\n\nexport function driveState() {\n  return useDriveStore.getState();\n}\n\nexport function useActiveDialogEntry() {\n  const dialog = useDriveStore(s => s.activeActionDialog);\n  // this will only be used inside dialog, so entry will always be set in that case\n  return dialog?.entries[0]!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nfunction createShareableLink(\n  entryId?: number | null\n): Promise<FetchShareableLinkResponse> {\n  if (!entryId) {\n    return Promise.reject(new Error('Invalid entry id'));\n  }\n  return apiClient\n    .post(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useCreateShareableLink() {\n  return useMutation(({entryId}: Payload) => createShareableLink(entryId), {\n    onSuccess: (data, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        data\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction addStarToEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/star', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useAddStarToEntries() {\n  return useMutation((payload: Payload) => addStarToEntries(payload), {\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Starred [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not star items')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction removeStarFromEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/unstar', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useRemoveStarFromEntries() {\n  return useMutation((payload: Payload) => removeStarFromEntries(payload), {\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Removed star from [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not remove star')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number;\n}\n\nfunction duplicateEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/duplicate', payload)\n    .then(response => response.data);\n}\n\nexport function useDuplicateEntries() {\n  return useMutation(\n    (payload: Payload) => {\n      toast.loading(\n        message('Duplicating [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true}\n      );\n      return duplicateEntries(payload);\n    },\n    {\n      onSuccess: (r, p) => {\n        invalidateEntryQueries();\n        queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n        toast(\n          message('Duplicated [one 1 item|other :count items]', {\n            values: {count: p.entryIds.length},\n          }),\n          {disableEnterAnimation: true}\n        );\n      },\n      onError: err =>\n        showHttpErrorToast(err, message('Could not duplicate items'), null, {\n          disableEnterAnimation: true,\n        }),\n    }\n  );\n}\n","export default \"__VITE_ASSET__fdd45f16__\"","export default \"__VITE_ASSET__189838f6__\"","export default \"__VITE_ASSET__bc08ea77__\"","export default \"__VITE_ASSET__94ef2bf1__\"","export default \"__VITE_ASSET__291df933__\"","export default \"__VITE_ASSET__5cc493df__\"","import type {DriveFolder} from '../files/drive-entry';\nimport {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport addFilesSvg from './add-files.svg';\nimport timeManagement from './time-management.svg';\nimport fileSearching from './file-searching.svg';\nimport throwAwaySvg from './throw-away.svg';\nimport lovingItSvg from './loving-it.svg';\nimport shareSvg from './../shareable-link/shareable-link-page/folder-preview/share.svg';\nimport {DriveSortDescriptor} from '../drive-store';\nimport {BootstrapData} from '@common/core/bootstrap-data/bootstrap-data';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface NoContentMessage {\n  title: MessageDescriptor;\n  description: MessageDescriptor;\n  image: string;\n}\n\nexport interface DrivePage {\n  id: string;\n  label: MessageDescriptor | string;\n  path: string;\n  hasActions?: boolean;\n  canUpload?: boolean;\n  disableSort?: boolean;\n  sortDescriptor: DriveSortDescriptor;\n  queryParams?: Record<string, string | number | boolean>;\n  folder?: DriveFolder;\n  isFolderPage?: boolean;\n  noContentMessage: (isSearchingOrFiltering: boolean) => NoContentMessage;\n}\n\nconst defaultSortDescriptor: DriveSortDescriptor = {\n  orderBy: 'updated_at',\n  orderDir: 'desc',\n};\n\nexport function makeFolderPage(folder: DriveFolder): DrivePage {\n  return {\n    ...makePartialFolderPage(folder.hash),\n    canUpload:\n      folder.permissions['files.create'] || folder.permissions['files.update'],\n    label: folder.name,\n    folder,\n  };\n}\n\nexport function makePartialFolderPage(hash: string): DrivePage {\n  return {\n    id: hash,\n    label: '',\n    path: getPathForFolder(hash),\n    hasActions: true,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    isFolderPage: true,\n    noContentMessage: () => ({\n      title: message('Drop files or folders here'),\n      description: message('Or use the \"Upload\" button'),\n      image: addFilesSvg,\n    }),\n  };\n}\n\nexport function getPathForFolder(hash: string): string {\n  if (hash === '0') {\n    return '/drive';\n  }\n  return `/drive/folders/${hash}`;\n}\n\n// bootstrap data will always be available at this point\ninterface BootstrapDataWithRootFolder extends BootstrapData {\n  rootFolder: DriveFolder;\n}\nconst rootFolder = (getBootstrapData() as BootstrapDataWithRootFolder)\n  .rootFolder;\nexport const RootFolderPage = makeFolderPage(rootFolder) as Required<DrivePage>;\n\nexport const RecentPage: DrivePage = {\n  id: 'recent',\n  label: message('Recent'),\n  path: '/drive/recent',\n  disableSort: true,\n  sortDescriptor: {\n    orderBy: 'created_at',\n    orderDir: 'desc',\n  },\n  queryParams: {\n    recentOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('No recent entries'),\n    description: message('You have not uploaded any files or folders yet'),\n    image: timeManagement,\n  }),\n};\n\nexport const SearchPage: DrivePage = {\n  id: 'search',\n  label: message('Search results'),\n  path: '/drive/search',\n  sortDescriptor: defaultSortDescriptor,\n  noContentMessage: isSearchingOrFiltering => {\n    if (isSearchingOrFiltering) {\n      return {\n        title: message('No matching results'),\n        description: message('Try changing your search query or filters'),\n        image: fileSearching,\n      };\n    }\n    return {\n      title: message('Begin typing or select a filter to search'),\n      description: message('Search for files, folders and other content'),\n      image: fileSearching,\n    };\n  },\n};\n\nexport const SharesPage: DrivePage = {\n  id: 'shares',\n  label: message('Shared'),\n  path: '/drive/shares',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    sharedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Shared with me'),\n    description: message('Files and folders other people have shared with you'),\n    image: shareSvg,\n  }),\n};\n\nexport const TrashPage: DrivePage = {\n  id: 'trash',\n  label: message('Trash'),\n  path: '/drive/trash',\n  sortDescriptor: defaultSortDescriptor,\n  hasActions: true,\n  queryParams: {\n    deletedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Trash is empty'),\n    description: message(\n      'There are no files or folders in your trash currently'\n    ),\n    image: throwAwaySvg,\n  }),\n};\n\nexport const StarredPage: DrivePage = {\n  id: 'starred',\n  label: message('Starred'),\n  path: '/drive/starred',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    starredOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Nothing is starred'),\n    description: message(\n      'Add stars to files and folders that you want to easily find later'\n    ),\n    image: lovingItSvg,\n  }),\n};\n\nexport const DRIVE_PAGES = [\n  RootFolderPage,\n  RecentPage,\n  SearchPage,\n  SharesPage,\n  TrashPage,\n  StarredPage,\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {getAxiosErrorMessage} from '@common/utils/http/get-axios-error-message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n  emptyTrash?: boolean;\n  deleteForever?: boolean;\n}\n\nfunction deleteEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/delete', payload)\n    .then(response => response.data);\n}\n\nexport function useDeleteEntries() {\n  return useMutation(\n    (payload: Payload) => {\n      toast.loading(getLoaderMessage(payload), {disableExitAnimation: true});\n      return deleteEntries(payload);\n    },\n    {\n      onSuccess: (r, {entryIds, emptyTrash, deleteForever}) => {\n        invalidateEntryQueries();\n        queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n        if (emptyTrash) {\n          toast(message('Emptied trash'), {disableEnterAnimation: true});\n        } else if (deleteForever) {\n          toast(\n            message('Permanently deleted [one 1 item|other :count items]', {\n              values: {count: entryIds.length},\n            }),\n            {disableEnterAnimation: true}\n          );\n        } else {\n          toast(\n            message('Moved [one 1 item|other :count items] to trash', {\n              values: {count: entryIds.length},\n            }),\n            {disableEnterAnimation: true}\n          );\n        }\n      },\n      onError: (err, {emptyTrash}) => {\n        const backendError = getAxiosErrorMessage(err);\n        if (backendError) {\n          toast.danger(backendError, {disableEnterAnimation: true});\n        } else if (emptyTrash) {\n          toast.danger('could not empty trash', {disableEnterAnimation: true});\n        } else {\n          toast.danger('Could not delete items', {disableEnterAnimation: true});\n        }\n      },\n    }\n  );\n}\n\nfunction getLoaderMessage(payload: Payload): MessageDescriptor {\n  if (payload.emptyTrash) {\n    return message('Emptying trash...');\n  } else if (payload.deleteForever) {\n    return message('Deleting files...');\n  } else {\n    return message('Moving to trash...');\n  }\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Payload {\n  userId: number | 'me';\n  entryIds: number[];\n}\n\nexport function useUnshareEntries() {\n  return useMutation((payload: Payload) => unshareEntries(payload), {\n    onSuccess: () => {\n      return invalidateEntryQueries();\n    },\n  });\n}\n\nfunction unshareEntries({entryIds, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entryIds.join(',')}/unshare`, payload)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nexport function useRestoreEntries() {\n  return useMutation((payload: Payload) => restoreEntries(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Restored [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not restore items')),\n  });\n}\n\nfunction restoreEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/restore', payload)\n    .then(response => response.data);\n}\n","import {message} from '@common/i18n/message';\nimport {PersonAddIcon} from '@common/icons/material/PersonAdd';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {EntryAction} from './entry-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {RemoveRedEyeIcon} from '@common/icons/material/RemoveRedEye';\nimport {LinkIcon} from '@common/icons/material/Link';\nimport {useCreateShareableLink} from '../shareable-link/queries/create-shareable-link';\nimport {StarIcon} from '@common/icons/material/Star';\nimport {useAddStarToEntries} from '../files/queries/use-add-star-to-entries';\nimport {StarOutlineIcon} from '@common/icons/material/StarOutline';\nimport {useRemoveStarFromEntries} from '../files/queries/use-remove-star-from-entries';\nimport {DriveFileMoveIcon} from '@common/icons/material/DriveFileMove';\nimport {DriveFileRenameOutlineIcon} from '@common/icons/material/DriveFileRenameOutline';\nimport {ContentCopyIcon} from '@common/icons/material/ContentCopy';\nimport {useDuplicateEntries} from '../files/queries/use-duplicate-entries';\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {SharesPage, TrashPage} from '../drive-page/drive-page';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {useUnshareEntries} from '../share-dialog/queries/use-unshare-entries';\nimport {toast} from '@common/ui/toast/toast';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {useRestoreEntries} from '../files/queries/use-restore-entries';\nimport {RestoreIcon} from '@common/icons/material/Restore';\n\nexport function useEntryActions(entries: DriveEntry[]): EntryAction[] {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const getLink = useGetLinkAction(entries);\n  const addStar = useAddToStarredAction(entries);\n  const removeStar = useRemoveFromStarred(entries);\n  const moveTo = useMoveToAction(entries);\n  const rename = useRenameAction(entries);\n  const makeCopy = useMakeCopyAction(entries);\n  const download = useDownloadEntriesAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\n  const restoreEntries = useRestoreEntriesAction(entries);\n\n  return [\n    preview,\n    share,\n    getLink,\n    addStar,\n    removeStar,\n    moveTo,\n    rename,\n    makeCopy,\n    download,\n    deleteAction,\n    removeSharedEntries,\n    restoreEntries,\n  ].filter(action => !!action) as EntryAction[];\n}\n\nexport function usePreviewAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  if (!entries.some(e => e.type !== 'folder')) return;\n  return {\n    label: message('Preview'),\n    icon: RemoveRedEyeIcon,\n    key: 'preview',\n    execute: () => {\n      driveState().setActiveActionDialog('preview', entries);\n    },\n  };\n}\n\nexport function useShareAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n\n  return {\n    label: message('Share'),\n    icon: PersonAddIcon,\n    key: 'share',\n    execute: () => {\n      driveState().setActiveActionDialog('share', entries);\n    },\n  };\n}\n\nfunction useGetLinkAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const createLink = useCreateShareableLink();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Get link'),\n    icon: LinkIcon,\n    key: 'getLink',\n    execute: () => {\n      createLink.mutate({entryId: entries[0].id});\n      driveState().setActiveActionDialog('getLink', entries);\n    },\n  };\n}\n\nfunction useAddToStarredAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const starEntries = useAddStarToEntries();\n  if (\n    entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Add to starred'),\n    icon: StarIcon,\n    key: 'addToStarred',\n    execute: () => {\n      starEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useRemoveFromStarred(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const removeStar = useRemoveStarFromEntries();\n  if (\n    !entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Remove from starred'),\n    icon: StarOutlineIcon,\n    key: 'removeFromStarred',\n    execute: () => {\n      removeStar.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useMoveToAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === SharesPage ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n\n  return {\n    label: message('Move to'),\n    icon: DriveFileMoveIcon,\n    key: 'moveTo',\n    execute: () => {\n      driveState().setActiveActionDialog('moveTo', entries);\n    },\n  };\n}\n\nfunction useRenameAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Rename'),\n    icon: DriveFileRenameOutlineIcon,\n    key: 'rename',\n    execute: () => {\n      driveState().setActiveActionDialog('rename', entries);\n    },\n  };\n}\n\nfunction useMakeCopyAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const duplicateEntries = useDuplicateEntries();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Make a copy'),\n    icon: ContentCopyIcon,\n    key: 'makeCopy',\n    execute: () => {\n      duplicateEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useDownloadEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const {downloadUrl} = useFileEntryUrls(entries[0], {\n    downloadHashes: entries.map(e => e.hash),\n  });\n  if (!entries.every(e => e.permissions['files.download'])) return;\n  return {\n    label: message('Download'),\n    icon: FileDownloadIcon,\n    key: 'download',\n    execute: () => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useDeleteEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage === SharesPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label:\n      activePage === TrashPage ? message('Delete forever') : message('Remove'),\n    icon: DeleteIcon,\n    key: 'delete',\n    execute: () => {\n      if (activePage === TrashPage) {\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\n      } else {\n        deleteEntries.mutate({\n          entryIds: entries.map(e => e.id),\n          deleteForever: activePage === TrashPage,\n        });\n        driveState().selectEntries([]);\n      }\n    },\n  };\n}\n\nexport function useRestoreEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const restoreEntries = useRestoreEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage !== TrashPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label: message('Restore'),\n    icon: RestoreIcon,\n    key: 'restore',\n    execute: () => {\n      restoreEntries.mutate({\n        entryIds: entries.map(e => e.id),\n      });\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useRemoveSharedEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const unshareEntries = useUnshareEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== SharesPage) return;\n  return {\n    label: message('Remove'),\n    icon: DeleteIcon,\n    key: 'removeSharedEntry',\n    execute: () => {\n      unshareEntries.mutate(\n        {entryIds: entries.map(e => e.id), userId: 'me'},\n        {\n          onSuccess: (r, p) => {\n            toast(\n              message('Removed [one 1 item|other {count} items]', {\n                values: {count: p.entryIds.length},\n              })\n            );\n          },\n          onError: err =>\n            showHttpErrorToast(err, message('Could not remove items')),\n        }\n      );\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchStorageSummaryResponse extends BackendResponse {\n  used: number;\n  available: number;\n}\n\nexport function useStorageSummary() {\n  return useQuery(DriveQueryKeys.fetchStorageSummary, fetchStorageSummary, {\n    select: formatResponse,\n  });\n}\n\nfunction fetchStorageSummary(): Promise<FetchStorageSummaryResponse> {\n  return apiClient.get(`user/space-usage`).then(response => response.data);\n}\n\nfunction formatResponse(response: FetchStorageSummaryResponse) {\n  // null means that user has unlimited space available\n  const percentage =\n    response.available === null\n      ? 0\n      : (response.used * 100) / response.available;\n\n  return {\n    usedFormatted: prettyBytes(response.used),\n    availableFormatted: prettyBytes(response.available),\n    percentage,\n    used: response.used,\n    available: response.available,\n  };\n}\n","import {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {useCallback} from 'react';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\nimport {queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../drive-query-keys';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {useStorageSummary} from '../layout/sidebar/storage-summary/storage-summary';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport type UploadFilesFn = (\n  files: (File | UploadedFile)[] | FileList,\n  options?: UploadStrategyConfig\n) => void;\n\nconst EightMB = 8388608;\n\nexport function useDriveUploadQueue() {\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const activePage = useDriveStore(s => s.activePage);\n  const {data: usage} = useStorageSummary();\n  const {workspaceId} = useActiveWorkspaceId();\n  const parentId = activePage?.folder?.id || null;\n\n  const {uploads} = useSettings();\n\n  const maxFileSize = uploads.max_size || EightMB;\n  const allowedFileTypes = uploads.allowed_extensions;\n  const blockedFileTypes = uploads.blocked_extensions;\n\n  const uploadFiles: UploadFilesFn = useCallback(\n    (files, options = {}) => {\n      if (!options.metadata) {\n        options.metadata = {};\n      }\n      options.metadata.workspaceId = workspaceId;\n      if (!options.metadata.parentId) {\n        options.metadata.parentId = parentId;\n      }\n\n      files = [...files].map(file => {\n        return file instanceof UploadedFile ? file : new UploadedFile(file);\n      });\n\n      // check if this upload will not put user over their allowed storage space\n      if (usage) {\n        const sizeOfFiles = files.reduce((sum, file) => sum + file.size, 0);\n        const currentlyUsing = usage.used;\n        const availableSpace = usage.available;\n\n        if (sizeOfFiles + currentlyUsing > availableSpace) {\n          toast.danger(\n            message(\n              'You have exhausted your allowed space of :space. Delete some files or upgrade your plan.',\n              {values: {space: usage.availableFormatted}}\n            ),\n            {action: {action: '/pricing', label: message('Upgrade')}}\n          );\n          return;\n        }\n      }\n\n      uploadMultiple(files, {\n        ...options,\n        restrictions: {\n          maxFileSize,\n          allowedFileTypes,\n          blockedFileTypes,\n        },\n        onSuccess: (entry, file) => {\n          options?.onSuccess?.(entry, file);\n          invalidateEntryQueries();\n          queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n        },\n      });\n      driveState().setUploadQueueIsOpen(true);\n    },\n    [\n      uploadMultiple,\n      parentId,\n      workspaceId,\n      allowedFileTypes,\n      blockedFileTypes,\n      maxFileSize,\n      usage,\n    ]\n  );\n  return {uploadFiles};\n}\n","import {EntryAction} from './entry-action';\nimport {message} from '@common/i18n/message';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {DrivePage, TrashPage} from '../drive-page/drive-page';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {DeleteForeverIcon} from '@common/icons/material/DeleteForever';\n\nexport function useDrivePageActions(page: DrivePage): EntryAction[] {\n  const newFolder = useNewFolderAction(page);\n  const uploadFiles = useUploadFilesAction(page);\n  const uploadFolder = useUploadFolderAction(page);\n  const emptyTrash = useEmptyTrashAction(page);\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(\n    action => !!action\n  ) as EntryAction[];\n}\n\nfunction useNewFolderAction(page: DrivePage): EntryAction | undefined {\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('New folder'),\n    icon: CreateNewFolderIcon,\n    key: 'newFolder',\n    execute: () => {\n      if (page.folder) {\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\n      }\n    },\n  };\n}\n\nfunction useUploadFilesAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload files'),\n    icon: FileUploadIcon,\n    key: 'uploadFiles',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({multiple: true}));\n    },\n  };\n}\n\nfunction useUploadFolderAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload folder'),\n    icon: DriveFolderUploadIcon,\n    key: 'uploadFolder',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({directory: true}));\n    },\n  };\n}\n\nfunction useEmptyTrashAction(page: DrivePage): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage) return;\n  return {\n    label: message('Empty trash'),\n    icon: DeleteForeverIcon,\n    key: 'emptyTrash',\n    execute: () => {\n      deleteEntries.mutate({entryIds: [], emptyTrash: true});\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import React, {createElement, ReactElement} from 'react';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useEntryActions} from './use-entry-actions';\nimport {EntryAction} from './entry-action';\nimport {DrivePage, RootFolderPage, TrashPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from './use-drive-page-actions';\n\ninterface Props {\n  children: ReactElement;\n  entries?: DriveEntry[];\n  page?: DrivePage;\n}\nexport function EntryActionMenuTrigger({children, entries, page}: Props) {\n  if (page?.id === RootFolderPage.id) {\n    return <PageMenu page={RootFolderPage}>{children}</PageMenu>;\n  }\n\n  if (page === TrashPage) {\n    return <PageMenu page={TrashPage}>{children}</PageMenu>;\n  }\n\n  if (page?.folder) {\n    return <EntriesMenu entries={[page.folder]}>{children}</EntriesMenu>;\n  }\n\n  if (entries?.length) {\n    return <EntriesMenu entries={entries}>{children}</EntriesMenu>;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  entries: DriveEntry[];\n}\nfunction EntriesMenu({entries, children}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface PageContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  page: DrivePage;\n}\nfunction PageMenu({page, children}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface BaseMenuProps {\n  actions: EntryAction[];\n  children: ReactElement;\n}\nfunction BaseMenu({actions, children}: BaseMenuProps) {\n  return (\n    <MenuTrigger>\n      {children}\n      <Menu>\n        {actions.map(action => {\n          return (\n            <MenuItem\n              onSelected={() => {\n                action.execute();\n              }}\n              key={action.key}\n              value={action.key}\n              startIcon={createElement(action.icon)}\n            >\n              <Trans {...action.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {Trans} from '@common/i18n/trans';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport React, {useContext} from 'react';\nimport memoize from 'nano-memoize';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\nimport {EntryActionMenuTrigger} from '@app/drive/entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport clsx from 'clsx';\n\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\n\nexport const fileTableColumns: ColumnConfig<DriveEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    body: entry => <FileNameColumn entry={entry} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-184',\n    header: () => <Trans message=\"Last modified\" />,\n    body: user => <FormattedDate date={user.updated_at} />,\n  },\n  {\n    key: 'file_size',\n    allowsSorting: true,\n    header: () => <Trans message=\"Size\" />,\n    maxWidth: 'max-w-144',\n    body: entry => formatFileSize(entry.file_size) ?? '-',\n  },\n  {\n    key: 'actions',\n    hideHeader: true,\n    header: () => <Trans message=\"Actions\" />,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: entry => <ActionsColumn entry={entry} />,\n  },\n];\n\nfunction FileNameColumn({entry}: {entry: DriveEntry}) {\n  const {isCollapsedMode} = useContext(TableContext);\n  const sizeClassName = isCollapsedMode ? 'w-30 h-30' : 'w-24 h-24';\n  return (\n    <div className=\"flex items-center gap-14\">\n      <FileThumbnail\n        className={clsx('rounded', sizeClassName)}\n        iconClassName={sizeClassName}\n        file={entry}\n      />\n      <div className=\"min-w-0\">\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\n        {isCollapsedMode && (\n          <div className=\"text-muted text-xs flex items-center mt-4\">\n            <FormattedDate date={entry.updated_at} />\n            <div>·</div>\n            <div>{formatFileSize(entry.file_size)}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface ActionsBodyProps {\n  entry: DriveEntry;\n}\nfunction ActionsColumn({entry}: ActionsBodyProps) {\n  const {selectedRows} = useContext(TableContext);\n  return selectedRows.length ? (\n    <Checkbox\n      className=\"block mr-8\"\n      checked={selectedRows.includes(entry.id)}\n    />\n  ) : (\n    <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton className=\"text-muted\">\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>\n  );\n}\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {DriveSortDescriptor} from '../../../drive-store';\nimport React from 'react';\nimport {Table} from '@common/ui/tables/table';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport type {FolderPreviewGridProps} from './folder-preview-file-grid';\nimport {fileTableColumns} from '../../../file-view/file-table/file-table-columns';\n\nconst mobileColumns = fileTableColumns.filter(\n  config => config.key !== 'updated_at'\n);\n\nexport function FolderPreviewFileTable({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Table\n      columns={isMobile ? mobileColumns : fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        linkPageState().setActiveSort(value as DriveSortDescriptor);\n      }}\n      onAction={(item, index) => {\n        onEntrySelected(item, index);\n      }}\n      enableSelection={false}\n    />\n  );\n}\n","import {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {useNavigate} from 'react-router-dom';\nimport {ShareableLink} from '../../shareable-link';\n\nfunction buildFolderHash(link: ShareableLink, folderHash?: string) {\n  let hash = link.hash;\n  if (folderHash && link.entry?.hash !== folderHash) {\n    hash = `${hash}:${folderHash}`;\n  }\n  return hash;\n}\n\nexport function useNavigateToSubfolder() {\n  const {link} = useShareableLinkPage();\n  const navigate = useNavigate();\n  return (hash: string) => {\n    if (!link) return;\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\n  };\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport React, {Fragment, useEffect, useRef, useState} from 'react';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport {DriveEntry} from '../../../files/drive-entry';\nimport {FolderPreviewFileGrid} from './folder-preview-file-grid';\nimport {useLinkPageStore} from '../link-page-store';\nimport {FolderPreviewFileTable} from './folder-preview-file-table';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\nimport {useLocation} from 'react-router-dom';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\ninterface FolderPreviewChildrenProps {\n  className?: string;\n}\nexport function FolderPreviewFileView({className}: FolderPreviewChildrenProps) {\n  const {pathname} = useLocation();\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const [activePreviewIndex, setActivePreviewIndex] = useState<number>();\n  const viewMode = useLinkPageStore(s => s.viewMode);\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const {\n    link,\n    entries,\n    isFetchingNextPage,\n    hasNextPage,\n    fetchNextPage,\n    isPreviousData,\n  } = useShareableLinkPage();\n\n  // close preview modal on back/forward navigation\n  useEffect(() => {\n    setActivePreviewIndex(undefined);\n  }, [pathname]);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [hasNextPage, fetchNextPage]);\n\n  if (!link || isPreviousData) {\n    return (\n      <div className={clsx('flex justify-center', className)}>\n        <ProgressCircle isIndeterminate />\n      </div>\n    );\n  }\n\n  const handlePreview = (entry: DriveEntry, index: number) => {\n    if (entry.type === 'folder') {\n      navigateToSubfolder(entry.hash);\n    } else {\n      setActivePreviewIndex(index);\n    }\n  };\n\n  const folderEntries = entries || [];\n\n  return (\n    <Fragment>\n      <AdHost slot=\"file-preview\" className=\"mb-40\" />\n      <div\n        className={clsx(\n          'px-14 pb-14 md:px-24 md:pb-24 flex-auto overflow-auto file-grid-container',\n          className\n        )}\n      >\n        {viewMode === 'grid' ? (\n          <FolderPreviewFileGrid\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        ) : (\n          <FolderPreviewFileTable\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        )}\n        <span ref={sentinelRef} aria-hidden />\n        <AnimatePresence>\n          {isFetchingNextPage && (\n            <m.div\n              className=\"flex justify-center mt-24 w-full\"\n              {...opacityAnimation}\n            >\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={activePreviewIndex != undefined}\n        onClose={() => setActivePreviewIndex(undefined)}\n      >\n        <FilePreviewDialog\n          entries={folderEntries}\n          defaultActiveIndex={activePreviewIndex}\n          allowDownload={link.allow_download}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface DashboardContentHeaderProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function DashboardContentHeader({\n  children,\n  className,\n}: DashboardContentHeaderProps) {\n  return (\n    <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface FolderPathResponse extends BackendResponse {\n  path: DriveFolder[];\n}\n\ntype Params = Record<string, string | number | null>;\n\ninterface Props {\n  hash?: string;\n  params?: Params;\n  isEnabled?: boolean;\n}\nexport function useFolderPath({hash, params, isEnabled = true}: Props) {\n  return useQuery(\n    DriveQueryKeys.fetchFolderPath(hash!, params),\n    () => fetchFolderPath(hash!, params),\n    {enabled: !!hash && isEnabled}\n  );\n}\n\nfunction fetchFolderPath(\n  hash: string,\n  params?: Params\n): Promise<FolderPathResponse> {\n  return apiClient\n    .get(`folders/${hash}/path`, {params})\n    .then(response => response.data);\n}\n","import React, {ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {DriveFolder} from '../../../files/drive-entry';\nimport {useFolderPath} from '../../../files/queries/use-folder-path';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {ShareableLink} from '../../shareable-link';\nimport {useLinkPageStore} from '../link-page-store';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\n\ninterface Props {\n  className?: string;\n  folder?: DriveFolder;\n  link: ShareableLink;\n}\nexport function FolderPreviewBreadcrumb({className, folder, link}: Props) {\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const password = useLinkPageStore(s => s.password);\n  const query = useFolderPath({\n    hash: folder?.hash,\n    params: {\n      shareable_link: link.id,\n      password,\n    },\n  });\n\n  let content: ReactNode;\n\n  if (query.isLoading) {\n    content = null;\n  } else {\n    const items: {folder: DriveFolder; label: ReactElement}[] = [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          folder: parent,\n          label: <>{parent.name}</>,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb size=\"lg\" isNavigation>\n        {items.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                navigateToSubfolder(item.folder.hash);\n              }}\n              key={item.folder.hash}\n            >\n              {item.label}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\n}\n","import {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport const AVAILABLE_SORTS: DriveSortOption[] = [\n  {id: 'file_size', label: message('Size')},\n  {id: 'name', label: message('Name')},\n  {id: 'updated_at', label: message('Last modified')},\n  {id: 'created_at', label: message('Upload date')},\n  {id: 'type', label: message('Type')},\n  {id: 'extension', label: message('Extension')},\n];\n\nexport interface DriveSortOption {\n  id: SortColumn;\n  label: MessageDescriptor;\n}\n\nexport type SortColumn =\n  | 'file_size'\n  | 'name'\n  | 'updated_at'\n  | 'created_at'\n  | 'type'\n  | 'extension';\n\nexport type SortDirection = 'desc' | 'asc';\n\nexport interface SortValue {\n  column: SortColumn;\n  direction: SortDirection;\n}\n","import {AVAILABLE_SORTS, SortColumn} from './available-sorts';\nimport {Button} from '@common/ui/buttons/button';\nimport {SortIcon} from '@common/icons/material/Sort';\nimport {\n  Menu,\n  MenuItem,\n  MenuSection,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '@common/i18n/trans';\nimport type {DriveSortDescriptor} from '../../drive-store';\n\ninterface Props {\n  descriptor: DriveSortDescriptor;\n  onChange: (value: DriveSortDescriptor) => void;\n  isDisabled?: boolean;\n}\nexport function EntriesSortButton({\n  descriptor,\n  onChange,\n  isDisabled = false,\n}: Props) {\n  const column = descriptor.orderBy;\n  const direction = descriptor.orderDir;\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\n\n  return (\n    <MenuTrigger\n      showCheckmark\n      selectionMode=\"multiple\"\n      selectedValue={[direction || 'desc', column || '']}\n      onItemSelected={key => {\n        if (key === 'asc' || key === 'desc') {\n          onChange({\n            orderBy: column,\n            orderDir: key,\n          });\n        } else {\n          onChange({\n            orderBy: key as SortColumn,\n            orderDir: direction,\n          });\n        }\n      }}\n    >\n      <Button\n        className=\"text-muted\"\n        variant=\"text\"\n        size=\"sm\"\n        startIcon={<SortIcon />}\n        disabled={isDisabled}\n      >\n        {sort ? <Trans {...sort.label} /> : null}\n      </Button>\n      <Menu>\n        <MenuSection label={<Trans message=\"Direction\" />}>\n          <MenuItem value=\"asc\">\n            <Trans message=\"Ascending\" />\n          </MenuItem>\n          <MenuItem value=\"desc\">\n            <Trans message=\"Descending\" />\n          </MenuItem>\n        </MenuSection>\n        <MenuSection label={<Trans message=\"Sort By\" />}>\n          {AVAILABLE_SORTS.map(item => (\n            <MenuItem key={item.id} value={item.id}>\n              <Trans {...item.label} />\n            </MenuItem>\n          ))}\n        </MenuSection>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React from 'react';\nimport {FolderPreviewBreadcrumb} from './folder-preview-breadcrumb';\nimport {EntriesSortButton} from '../../../layout/sorting/entries-sort-button';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {GridViewIcon} from '@common/icons/material/GridView';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {DriveFolder} from '../../../files/drive-entry';\n\nexport function FolderPreviewHeader() {\n  const activeSort = useLinkPageStore(s => s.activeSort);\n  const {link, isFetching} = useShareableLinkPage();\n  const hasEntry = link && link.entry;\n\n  return (\n    <div className=\"md:flex-row flex flex-col md:items-center gap-14 justify-between p-14 md:p-24 md:h-90\">\n      {hasEntry && (\n        <FolderPreviewBreadcrumb\n          link={link}\n          folder={link.entry as DriveFolder}\n          className=\"flex-auto\"\n        />\n      )}\n      {hasEntry && (\n        <div className=\"flex items-center justify-between md:justify-start text-muted\">\n          <EntriesSortButton\n            isDisabled={isFetching}\n            descriptor={activeSort}\n            onChange={value => {\n              linkPageState().setActiveSort(value);\n            }}\n          />\n          <div className=\"md:border-l md:pl-10 ml-10\">\n            <IconButton\n              onClick={() => {\n                linkPageState().setViewMode(\n                  linkPageState().viewMode === 'grid' ? 'list' : 'grid'\n                );\n              }}\n            >\n              <GridViewIcon />\n            </IconButton>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {FolderPreviewFileView} from './folder-preview-file-view';\nimport {Trans} from '@common/i18n/trans';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\nimport {ShareableLinkPageActionButtons} from '../shareable-link-page-action-buttons';\nimport {FolderPreviewHeader} from './folder-preview-header';\nimport shareSvg from './share.svg';\nimport clsx from 'clsx';\n\nexport function FolderPreview() {\n  const {entries, isFetched} = useShareableLinkPage();\n  const showEmptyMessage = isFetched && !entries?.length;\n\n  return (\n    <DashboardLayout name=\"folder-preview\">\n      <DashboardNavbar\n        hideToggleButton\n        rightChildren={<ShareableLinkPageActionButtons />}\n        color=\"bg\"\n      />\n      <DashboardContentHeader>\n        <FolderPreviewHeader />\n      </DashboardContentHeader>\n      <FileUploadProvider>\n        <DashboardContent>\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\n        </DashboardContent>\n      </FileUploadProvider>\n    </DashboardLayout>\n  );\n}\n\ninterface EmptyMessageProps {\n  className?: string;\n}\nfunction EmptyMessage({className}: EmptyMessageProps) {\n  return (\n    <IllustratedMessage\n      className={clsx(className, 'mt-80')}\n      image={<SvgImage src={shareSvg} />}\n      title={<Trans message=\"Folder is empty\" />}\n      description={\n        <Trans message=\"No files have been uploaded to this folder yet\" />\n      }\n    />\n  );\n}\n","import React from 'react';\nimport {FilePreviewContainer} from '@common/uploads/preview/file-preview-container';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function ShareableLinkPageFilePreview() {\n  const {link} = useShareableLinkPage();\n\n  if (!link?.entry) return null;\n\n  return (\n    <div className=\"flex flex-col h-screen bg-alt\">\n      <ShareableLinkNavbar />\n      <AdHost slot=\"file-preview\" className=\"mt-24\" />\n      <FilePreviewContainer\n        entries={[link.entry]}\n        showHeader={false}\n        allowDownload={link.allow_download}\n      />\n    </div>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useLinkPageStore} from './link-page-store';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {PasswordPage} from './password-page';\nimport {FolderPreview} from './folder-preview/folder-preview';\nimport {ShareableLinkPageFilePreview} from './shareable-link-page-file-preview';\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\n\nexport function ShareableLinkPage() {\n  const {status, link} = useShareableLinkPage();\n  const {trans} = useTrans();\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  let content: ReactElement;\n\n  if (status === 'loading') {\n    content = (\n      <div className=\"flex-auto flex items-center justify-center h-screen\">\n        <ProgressCircle\n          aria-label={trans({message: 'Loading link'})}\n          isIndeterminate\n        />\n      </div>\n    );\n  } else if (!link && !isPasswordProtected) {\n    return <NotFoundPage />;\n  } else if (isPasswordProtected && !password) {\n    content = <PasswordPage />;\n  } else if (link?.entry?.type === 'folder') {\n    content = <FolderPreview />;\n  } else {\n    content = <ShareableLinkPageFilePreview />;\n  }\n\n  return (\n    <FileEntryUrlsContext.Provider value={{shareable_link: link?.id, password}}>\n      {content}\n    </FileEntryUrlsContext.Provider>\n  );\n}\n","import React from 'react';\nimport {ProgressBarBase, ProgressBarBaseProps} from './progress-bar-base';\n\nexport function Meter(props: ProgressBarBaseProps) {\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\n}\n","import React from 'react';\nimport {useStorageSummary} from './storage-summary';\nimport {StorageIcon} from '@common/icons/material/Storage';\nimport {Meter} from '@common/ui/progress/meter';\nimport {Trans} from '@common/i18n/trans';\nimport clsx from 'clsx';\n\nexport function StorageMeter() {\n  const {isLoading, data} = useStorageSummary();\n\n  // prevent translation placeholders from showing if summary is not loaded yet\n  const label = (\n    <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\n      <Trans\n        message=\":used of :available used\"\n        values={{\n          used: data?.usedFormatted,\n          available: data?.availableFormatted,\n        }}\n      />\n    </span>\n  );\n  return (\n    <div className=\"pl-24 pt-24 mt-24 border-t flex items-start gap-16\">\n      <StorageIcon className=\"icon-md -mt-4\" />\n      <Meter\n        className=\"flex-auto max-w-144\"\n        size=\"xs\"\n        value={data?.percentage}\n        label={label}\n        showValueLabel={false}\n        labelPosition=\"bottom\"\n      />\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\n  return useMutation((props: Props) => createWorkspace(props), {\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createWorkspace(props: Props): Promise<Response> {\n  return apiClient.post('workspace', props).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {useCreateWorkspace} from './requests/create-workspace';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\n\nexport function NewWorkspaceDialog() {\n  const form = useForm<{name: string}>();\n  const {formId, close} = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            createWorkspace.mutate(form.getValues(), {\n              onSuccess: response => {\n                close(response.workspace.id);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Workspace name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createWorkspace.isLoading}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\n  workspace: Workspace;\n}\n\nfunction fetchWorkspaceWithMembers(\n  workspaceId: number\n): Promise<FetchWorkspaceWithMembersResponse> {\n  return apiClient\n    .get(`workspace/${workspaceId}`)\n    .then(response => response.data);\n}\n\nexport function useWorkspaceWithMembers(workspaceId: number) {\n  return useQuery(WorkspaceQueryKeys.workspaceWithMembers(workspaceId), () =>\n    fetchWorkspaceWithMembers(workspaceId)\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invites: WorkspaceInvite[];\n}\n\ninterface Props {\n  workspaceId: number;\n  emails: string[];\n  roleId: number;\n}\n\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/invite`, other)\n    .then(r => r.data);\n}\n\nexport function useInviteMembers() {\n  return useMutation((props: Props) => InviteMembers(props), {\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient} from '../../http/query-client';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invite: WorkspaceInvite;\n}\n\ninterface Props {\n  workspaceId: number;\n  inviteId: string;\n}\n\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\n    .then(r => r.data);\n}\n\nexport function useResendInvite() {\n  return useMutation((props: Props) => ResendInvite(props), {\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","const matcher =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isEmail(string?: string): boolean {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {WorkspaceMember} from '../types/workspace-member';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  member: WorkspaceMember | WorkspaceInvite;\n  roleId: number;\n}\n\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\n  const modelType = member.model_type;\n  const memberId =\n    member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient\n    .post(\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\n      other\n    )\n    .then(r => r.data);\n}\n\nexport function useChangeRole() {\n  return useMutation((props: Props) => ChangeRole(props), {\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useAuth} from '../../auth/use-auth';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  memberId: number | string;\n  memberType: 'invite' | 'member';\n}\n\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType,\n}: Props): Promise<Response> {\n  const endpoint =\n    memberType === 'invite'\n      ? `workspace/invite/${memberId}`\n      : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\n\nexport function useRemoveMember() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const {user} = useAuth();\n  return useMutation((props: Props) => removeMember(props), {\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '../i18n/trans';\n\nexport function LeaveWorkspaceConfirmation() {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Leave workspace\" />}\n      body={\n        <div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"font-semibold mt-8\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Leave\" />}\n    />\n  );\n}\n","import {useEffect, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\nimport {ProgressCircle} from '../ui/progress/progress-circle';\nimport {Workspace} from './types/workspace';\nimport {GroupIcon} from '../icons/material/Group';\nimport {WorkspaceMember} from './types/workspace-member';\nimport {useAuth} from '../auth/use-auth';\nimport {\n  ChipField,\n  ChipValue,\n} from '../ui/forms/input-field/chip-field/chip-field';\nimport {useValueLists} from '../http/value-lists';\nimport {Button} from '../ui/buttons/button';\nimport {ArrowDropDownIcon} from '../icons/material/ArrowDropDown';\nimport {useInviteMembers} from './requests/invite-members';\nimport {WorkspaceInvite} from './types/workspace-invite';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useResendInvite} from './requests/resend-invite';\nimport {isEmail} from '../utils/string/is-email';\nimport {ButtonSize} from '../ui/buttons/button-size';\nimport {useChangeRole} from './requests/change-role';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {useRemoveMember} from './requests/remove-member';\nimport {CloseIcon} from '../icons/material/Close';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {toast} from '../ui/toast/toast';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\nimport {useTrans} from '../i18n/use-trans';\nimport {message} from '../i18n/message';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ninterface WorkspaceMembersDialogProps {\n  workspace: Workspace;\n}\nexport function WorkspaceMembersDialog({\n  workspace,\n}: WorkspaceMembersDialogProps) {\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? (\n          <div className=\"flex items-center justify-center min-h-[238px]\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div>\n        ) : (\n          <Manager workspace={data!.workspace} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ManagerProps {\n  workspace: Workspace;\n}\nfunction Manager({workspace}: ManagerProps) {\n  const can = usePermissions(workspace);\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\n    ...(workspace.members || []),\n    ...(workspace.invites || []),\n  ];\n\n  return (\n    <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"flex items-center gap-10 mb-14 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans\n          message=\"Members of `:workspace`\"\n          values={{workspace: workspace.name}}\n        />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => (\n          <MemberListItem\n            key={`${member.model_type}.${member.id}`}\n            workspace={workspace}\n            member={member}\n          />\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"flex items-start text-sm gap-14 mb-20\"\n      key={`${member.model_type}.${member.id}`}\n    >\n      <img\n        className=\"w-36 h-36 rounded flex-shrink-0\"\n        src={member.avatar}\n        alt=\"\"\n      />\n      <div className=\"md:flex flex-auto items-center justify-between gap-14 min-w-0\">\n        <div className=\"overflow-hidden mb-10 md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.display_name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>\n  );\n}\n\nfunction usePermissions(workspace: Workspace) {\n  const {user: authUser} = useAuth();\n  const response = {update: false, invite: false, delete: false};\n  const permissions = ['update', 'invite', 'delete'] as const;\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] =\n        authMember.is_owner ||\n        !!authMember.permissions?.find(\n          p => p.name === `workspace_members.${permission}`\n        );\n    });\n  }\n\n  return response;\n}\n\ninterface MemberActionsProps {\n  workspace: Workspace;\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction MemberActions({workspace, member}: MemberActionsProps) {\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\n  const changeRole = useChangeRole();\n  const {user} = useAuth();\n\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser =\n    member.model_type === 'member' && user?.id === member.id;\n\n  const roleSelector =\n    !can.update || isOwner || isCurrentUser ? (\n      <div className=\"text-muted ml-auto first:capitalize\">\n        <Trans message={member.role_name} />\n      </div>\n    ) : (\n      <RoleMenuTrigger\n        className=\"ml-auto flex-shrink-0\"\n        size=\"xs\"\n        value={selectedRole}\n        isDisabled={changeRole.isLoading}\n        onChange={roleId => {\n          setSelectedRole(roleId);\n          changeRole.mutate({\n            roleId,\n            workspaceId: workspace.id,\n            member,\n          });\n        }}\n      />\n    );\n\n  return (\n    <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && (\n        <RemoveMemberButton\n          type={isCurrentUser ? 'leave' : 'remove'}\n          member={member}\n          workspace={workspace}\n        />\n      )}\n    </>\n  );\n}\n\ninterface InviteChipFieldProps {\n  workspace: Workspace;\n}\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\n  const {trans} = useTrans();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState<number>();\n  const inviteMembers = useInviteMembers();\n  const {data} = useValueLists(['workspaceRoles']);\n\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n\n  return (\n    <div className=\"mb-30\">\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      />\n      <div className=\"flex items-center gap-14 justify-between mt-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={inviteMembers.isLoading || !allEmailsValid}\n            onClick={() => {\n              inviteMembers.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  roleId: selectedRole,\n                  workspaceId: workspace.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                }\n              );\n            }}\n          >\n            <Trans message=\"Invite\" />\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\ninterface RemoveMemberButtonProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n  type: 'leave' | 'remove';\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type,\n}: RemoveMemberButtonProps) {\n  const removeMember = useRemoveMember();\n  const {close} = useDialogContext();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeMember.mutate({\n            workspaceId: workspace.id,\n            memberId: member.id,\n            memberType: member.model_type,\n          });\n          if (type === 'leave') {\n            close();\n            toast(message('Left workspace'));\n          }\n        }\n      }}\n    >\n      <IconButton\n        size=\"md\"\n        className=\"text-muted flex-shrink-0\"\n        disabled={removeMember.isLoading}\n      >\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? (\n        <LeaveWorkspaceConfirmation />\n      ) : (\n        <RemoveMemberConfirmation member={member} />\n      )}\n    </DialogTrigger>\n  );\n}\n\ninterface RemoveMemberConfirmationProps {\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Remove member\" />}\n      body={\n        <div>\n          <Trans\n            message=\"Are you sure you want to remove `:name`?\"\n            values={{name: member.display_name}}\n          />\n          <div className=\"font-semibold mt-8\">\n            <Trans\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\n              values={{\n                name: member.display_name,\n              }}\n            />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Remove\" />}\n    />\n  );\n}\n\ninterface RoleMenuTriggerProps {\n  onChange: (value: number) => void;\n  value?: number;\n  size?: ButtonSize;\n  className?: string;\n  isDisabled?: boolean;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled,\n}: RoleMenuTriggerProps) {\n  const {data} = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newValue => {\n        onChange(newValue as number);\n      }}\n    >\n      <Button\n        className={className}\n        size={size}\n        variant=\"flat\"\n        color=\"chip\"\n        disabled={isDisabled}\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans message={role.name} />\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => (\n          <MenuItem value={r.id} key={r.id} description={r.description}>\n            <Trans message={r.name} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface MemberDisplayNameAppendProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n\n  if (user?.id === member.id) {\n    return (\n      <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>\n    );\n  }\n  if (member.model_type === 'invite') {\n    return (\n      <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? (\n          <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </>\n        ) : null}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const resendInvite = useResendInvite();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          resendInvite.mutate({\n            workspaceId: workspace.id,\n            inviteId: member.id as string,\n          });\n        }\n      }}\n    >\n      <Button\n        variant=\"link\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={resendInvite.isLoading}\n      >\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog\n        title={<Trans message=\"Resend invite\" />}\n        body={\n          <Trans message=\"Are you sure you want to send this invite again?\" />\n        }\n        confirm={<Trans message=\"Send\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\nexport interface UpdateWorkspacePayload {\n  id: number;\n  name: string;\n}\n\nfunction updateWorkspace({\n  id,\n  ...props\n}: UpdateWorkspacePayload): Promise<Response> {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\n\nexport function useUpdateWorkspace(\n  form: UseFormReturn<UpdateWorkspacePayload>\n) {\n  const {close} = useDialogContext();\n  return useMutation(\n    (props: UpdateWorkspacePayload) => updateWorkspace(props),\n    {\n      onSuccess: response => {\n        close();\n        toast(message('Updated workspace'));\n        queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n        queryClient.invalidateQueries(\n          WorkspaceQueryKeys.workspaceWithMembers(response.workspace.id)\n        );\n      },\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {\n  UpdateWorkspacePayload,\n  useUpdateWorkspace,\n} from './requests/update-workspace';\nimport {Workspace} from './types/workspace';\nimport {Trans} from '../i18n/trans';\n\ninterface Props {\n  workspace: Workspace;\n}\nexport function RenameWorkspaceDialog({workspace}: Props) {\n  const form = useForm<UpdateWorkspacePayload>({\n    defaultValues: {id: workspace.id, name: workspace.name},\n  });\n  const {formId, close} = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            updateWorkspace.mutate(form.getValues());\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateWorkspace.isLoading}\n        >\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport interface DeleteWorkspacePayload {\n  id: number;\n}\n\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\n\nexport function useDeleteWorkspace() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  return useMutation(\n    (props: DeleteWorkspacePayload) => deleteWorkspace(props),\n    {\n      onSuccess: (r, payload) => {\n        toast(message('Deleted workspace'));\n        queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n        queryClient.invalidateQueries(\n          WorkspaceQueryKeys.workspaceWithMembers(payload.id)\n        );\n\n        // if user deleted workspace that is currently active, switch to personal workspace\n        if (workspaceId === payload.id) {\n          setWorkspaceId(PersonalWorkspace.id);\n        }\n      },\n      onError: err => showHttpErrorToast(err),\n    }\n  );\n}\n","import clsx from 'clsx';\nimport {cloneElement, Fragment, ReactElement, useEffect, useState} from 'react';\nimport {ButtonBase} from '../ui/buttons/button-base';\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\nimport {UnfoldMoreIcon} from '../icons/material/UnfoldMore';\nimport {AddIcon} from '../icons/material/Add';\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\nimport {useActiveWorkspaceId} from './active-workspace-id-context';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Workspace} from './types/workspace';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Button, ButtonProps} from '../ui/buttons/button';\nimport {CheckIcon} from '../icons/material/Check';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '../icons/material/KeyboardArrowDown';\nimport {PersonAddIcon} from '../icons/material/PersonAdd';\nimport {DeleteIcon} from '../icons/material/Delete';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {EditIcon} from '../icons/material/Edit';\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteWorkspace} from './requests/delete-workspace';\nimport {useRemoveMember} from './requests/remove-member';\nimport {useAuth} from '../auth/use-auth';\nimport {Trans} from '../i18n/trans';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ntype ActiveDialogName =\n  | 'workspaceMembers'\n  | 'updateWorkspace'\n  | 'deleteWorkspace'\n  | 'leaveWorkspace';\ntype ActiveDialog =\n  | {name: ActiveDialogName; workspace: Workspace}\n  | {name: 'newWorkspace'}\n  | null;\n\ninterface WorkspaceSelectorProps {\n  className?: string;\n  onChange?: (id: number) => void;\n  trigger?: ReactElement<ButtonProps>;\n}\nexport function WorkspaceSelector({\n  onChange,\n  className,\n  trigger: propsTrigger,\n}: WorkspaceSelectorProps) {\n  const {data, isFetched, isFetching} = useUserWorkspaces();\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const activeWorkspace = data?.find(w => w.id === workspaceId);\n  const [dialog, setDialog] = useState<ActiveDialog>(null);\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n  const {hasPermission} = useAuth();\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, data, setWorkspaceId, isFetched, isFetching]);\n\n  if (!activeWorkspace || !hasPermission('workspaces.create')) return null;\n\n  const defaultTrigger = (\n    <ButtonBase\n      className={clsx(\n        'flex items-center gap-10 hover:bg-hover rounded ring-inset focus-visible:ring-2',\n        className\n      )}\n    >\n      <span className=\"block flex-auto mr-auto text-left overflow-hidden\">\n        <span className=\"block text-sm text-main font-medium overflow-hidden overflow-ellipsis\">\n          {activeWorkspace.default ? (\n            <Trans message={activeWorkspace.name} />\n          ) : (\n            activeWorkspace.name\n          )}\n        </span>\n        <span className=\"block text-muted text-xs\">\n          {activeWorkspace.default ? (\n            <Trans message=\"Personal workspace\" />\n          ) : (\n            <Trans\n              message=\":count members\"\n              values={{count: activeWorkspace.members_count}}\n            />\n          )}\n        </span>\n      </span>\n      <UnfoldMoreIcon className=\"icon-md shrink-0\" />\n    </ButtonBase>\n  );\n\n  const trigger = propsTrigger || defaultTrigger;\n\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"popover\"\n        isOpen={selectorIsOpen}\n        onClose={() => {\n          setSelectorIsOpen(false);\n        }}\n      >\n        {cloneElement(trigger, {\n          onClick: () => setSelectorIsOpen(!selectorIsOpen),\n        })}\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 pb-10 border-b\">\n              {data!.map(workspace => (\n                <WorkspaceItem\n                  key={workspace.id}\n                  workspace={workspace}\n                  setDialog={setDialog}\n                  setSelectorIsOpen={setSelectorIsOpen}\n                  onChange={onChange}\n                />\n              ))}\n            </div>\n            <div className=\"text-center mb-4 px-4\">\n              <Button\n                onClick={e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setDialog({name: 'newWorkspace'});\n                  setSelectorIsOpen(false);\n                }}\n                variant=\"outline\"\n                startIcon={<AddIcon />}\n                color=\"primary\"\n                className=\"w-full h-40\"\n              >\n                <Trans message=\"Create new workspace\" />\n              </Button>\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n      <DialogContainer\n        dialog={dialog}\n        setDialog={setDialog}\n        onChange={onChange}\n      />\n    </Fragment>\n  );\n}\n\ninterface WorkspaceItemProps {\n  workspace: Workspace;\n  onChange: WorkspaceSelectorProps['onChange'];\n  setSelectorIsOpen: (value: boolean) => void;\n  setDialog: (value: ActiveDialog) => void;\n}\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen,\n  setDialog,\n}: WorkspaceItemProps) {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n\n  return (\n    <div\n      onClick={() => {\n        setWorkspaceId(workspace.id);\n        onChange?.(workspace.id);\n        setSelectorIsOpen(false);\n      }}\n      className={clsx(\n        'p-10 mb-4 text-left flex items-center gap-12 rounded-lg cursor-pointer',\n        isActive && 'bg-primary/5',\n        !isActive && 'hover:bg-hover'\n      )}\n    >\n      <CheckIcon\n        size=\"sm\"\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\n      />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-muted text-sm\">\n          {workspace.default ? (\n            <Trans message=\"Personal workspace\" />\n          ) : (\n            <Trans\n              message=\":count members\"\n              values={{count: workspace.members_count}}\n            />\n          )}\n        </div>\n      </div>\n      {workspace.id !== 0 && (\n        <ManageButton\n          setSelectorIsOpen={setSelectorIsOpen}\n          workspace={workspace}\n          setDialog={setDialog}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface DialogContainerProps {\n  dialog: ActiveDialog;\n  setDialog: (value: ActiveDialog) => void;\n  onChange?: WorkspaceSelectorProps['onChange'];\n}\nfunction DialogContainer({dialog, setDialog, onChange}: DialogContainerProps) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const removeMember = useRemoveMember();\n  const {user} = useAuth();\n  const {setWorkspaceId} = useActiveWorkspaceId();\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog?.name}\n      onClose={value => {\n        if (dialog?.name === 'deleteWorkspace' && value) {\n          deleteWorkspace.mutate({id: dialog.workspace.id});\n        }\n        if (dialog?.name === 'leaveWorkspace' && value && user?.id) {\n          removeMember.mutate({\n            workspaceId: dialog.workspace.id,\n            memberId: user.id,\n            memberType: 'member',\n          });\n        }\n        if (dialog?.name === 'newWorkspace' && value) {\n          setWorkspaceId(value);\n          onChange?.(value);\n        }\n        setDialog(null);\n      }}\n    >\n      {dialog?.name === 'newWorkspace' && <NewWorkspaceDialog />}\n      {dialog?.name === 'updateWorkspace' && (\n        <RenameWorkspaceDialog workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'workspaceMembers' && (\n        <WorkspaceMembersDialog workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'deleteWorkspace' && (\n        <DeleteWorkspaceConfirmation workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'leaveWorkspace' && <LeaveWorkspaceConfirmation />}\n    </DialogTrigger>\n  );\n}\n\ninterface DeleteWorkspaceConfirmationProps {\n  workspace: Workspace;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n}: DeleteWorkspaceConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete workspace\" />}\n      body={\n        <Trans\n          message=\"Are you sure you want to delete “:name“?\"\n          values={{name: workspace.name}}\n        />\n      }\n      confirm={<Trans message=\"Delete\" />}\n    />\n  );\n}\n\ninterface ManageButtonProps {\n  setSelectorIsOpen: (value: boolean) => void;\n  setDialog: (dialog: ActiveDialog) => void;\n  workspace: Workspace;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  setDialog,\n  workspace,\n}: ManageButtonProps) {\n  const {user} = useAuth();\n\n  return (\n    <MenuTrigger\n      onItemSelected={value => {\n        setSelectorIsOpen(false);\n        setDialog({name: value as ActiveDialogName, workspace});\n      }}\n    >\n      <Button\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        color=\"primary\"\n        size=\"xs\"\n        variant=\"outline\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem\n          onClick={e => e.stopPropagation()}\n          value=\"workspaceMembers\"\n          startIcon={<PersonAddIcon />}\n        >\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"updateWorkspace\"\n            startIcon={<EditIcon />}\n          >\n            <Trans message=\"Rename\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id !== user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"leaveWorkspace\"\n            startIcon={<ExitToAppIcon />}\n          >\n            <Trans message=\"Leave\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"deleteWorkspace\"\n            startIcon={<DeleteIcon />}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        )}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","export enum MenuPositions {\n  DriveSidebar = 'drive-sidebar',\n}\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {useAuth} from '@common/auth/use-auth';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport interface UserFoldersApiParams {\n  userId: number;\n  workspaceId: number | null;\n}\n\ninterface UserFoldersResponse extends BackendResponse {\n  folders: DriveFolder[];\n  rootFolder: DriveFolder;\n}\n\nfunction fetchUserFolders(\n  params: UserFoldersApiParams\n): Promise<UserFoldersResponse> {\n  return apiClient\n    .get(`users/${params.userId}/folders`, {params})\n    .then(response => response.data);\n}\n\nexport function useFolders() {\n  const {user} = useAuth();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: UserFoldersApiParams = {\n    userId: user!.id,\n    workspaceId,\n  };\n  return useQuery(\n    DriveQueryKeys.fetchUserFolders(params),\n    () => fetchUserFolders(params),\n    {enabled: !!user}\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n  destination: FileEntry | null;\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number | null;\n}\n\nexport function useMoveEntries() {\n  return useMutation(\n    (payload: Payload) => {\n      toast.loading(\n        message('Moving [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true}\n      );\n      return moveEntries(payload);\n    },\n    {\n      onSuccess: (r, p) => {\n        invalidateEntryQueries();\n        toast(\n          message('Moved [one 1 item|other :count items] to \":destination\"', {\n            values: {\n              count: p.entryIds.length,\n              destination: (r.destination || RootFolderPage.folder).name,\n            },\n          }),\n          {disableEnterAnimation: true}\n        );\n      },\n      onError: err =>\n        showHttpErrorToast(err, message('Could not move items'), null, {\n          disableEnterAnimation: true,\n        }),\n    }\n  );\n}\n\nfunction moveEntries(payload: Payload): Promise<Response> {\n  // backend expects null for root folder, it might be zero or empty string on frontend\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\n  return apiClient\n    .post('file-entries/move', payload)\n    .then(response => response.data);\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport interface PartialFolder {\n  id: number;\n  name: string;\n  path: string;\n  parent_id: number | null;\n  type: string;\n}\n\nexport function canMoveEntriesInto(\n  targets: FileEntry[],\n  destination: PartialFolder\n) {\n  if (destination.type !== 'folder') return false;\n\n  // should not be able to move folder into its\n  // own child or folder it's already in\n  return targets.every(target => {\n    if (!target) return false;\n    // entry is already in this folder\n    if (\n      destination.id === target.parent_id ||\n      // root folder check\n      (!target.parent_id && destination.id === 0)\n    ) {\n      return false;\n    }\n\n    return !destinationIsInTarget(destination, target);\n  });\n}\n\nfunction destinationIsInTarget(destination: PartialFolder, target: FileEntry) {\n  const destinationPath = (destination.path || '').split('/');\n  const targetPath = (target.path || '').split('/');\n  return targetPath.every((part, index) => {\n    return destinationPath[index] === part;\n  });\n}\n","import {FileEntry} from '@common/uploads/file-entry';\nimport {useMoveEntries} from './queries/use-move-entries';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {canMoveEntriesInto} from './utils/can-move-entries-into';\nimport {\n  ConnectedDraggable,\n  MixedDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {NativeFileDraggable} from '@common/ui/interactions/dnd/use-droppable';\nimport {driveState} from '@app/drive/drive-store';\n\nexport function useFolderDropAction(folder: FileEntry) {\n  const moveEntries = useMoveEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const onDrop = async (target: ConnectedDraggable | NativeFileDraggable) => {\n    if (folder.type !== 'folder') return;\n    if (target.type === 'nativeFile') {\n      uploadFiles(await target.getData(), {\n        metadata: {parentId: folder.id},\n      });\n    } else if (target.type === 'fileEntry') {\n      const entries = target.getData() as FileEntry[];\n      if (entries?.length && canMoveEntriesInto(entries, folder)) {\n        moveEntries.mutate({\n          destinationId: folder.id,\n          entryIds: entries.map(e => e.id),\n        });\n        driveState().deselectEntries('all');\n      }\n    }\n  };\n\n  return {onDrop};\n}\n\nexport function folderAcceptsDrop(target: MixedDraggable, entry: FileEntry) {\n  if (target.type === 'fileEntry') {\n    const entries = target.getData() as FileEntry[];\n    return canMoveEntriesInto(entries, entry);\n  }\n  return true;\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport function makeFolderTreeDragId(entry: FileEntry) {\n  return `${entry.id}-tree`;\n}\n\nexport function isFolderTreeDragId(id: string | number): boolean {\n  return `${id}`.endsWith('-tree');\n}\n","import {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {driveState} from '../../drive-store';\nimport {RefObject, useState} from 'react';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../../files/use-folder-drop-action';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\n\ninterface Props {\n  folder: DriveFolder;\n  ref: RefObject<HTMLDivElement>;\n}\nexport function useSidebarTreeDropTarget({folder, ref}: Props) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {onDrop} = useFolderDropAction(folder);\n\n  const dropProps = useDroppable({\n    id: makeFolderTreeDragId(folder),\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\n    onDragEnter: draggable => {\n      if (folderAcceptsDrop(draggable, folder)) {\n        setIsDragOver(true);\n      }\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDropActivate: () => {\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\n        driveState().setSidebarExpandedKeys([\n          ...driveState().sidebarExpandedKeys,\n          folder.id,\n        ]);\n      }\n    },\n    onDrop,\n  });\n\n  return {...dropProps, isDragOver};\n}\n","import {createContext, Key} from 'react';\n\nexport interface TreeContextValue {\n  expandedKeys: Key[];\n  setExpandedKeys: (value: Key[]) => void;\n  selectedKeys: Key[];\n  setSelectedKeys: (value: Key[]) => void;\n  focusedNode?: Key;\n  setFocusedNode: (node?: Key) => void;\n}\n\nexport const TreeContext = createContext<TreeContextValue>(null!);\n","import {TreeItemRenderer} from './tree-item';\nimport {cloneElement} from 'react';\nimport {TreeNode} from './tree';\n\ninterface RenderTreeProps<T extends TreeNode> {\n  nodes: T[];\n  parentNode?: T;\n  itemRenderer: TreeItemRenderer<T>;\n  level?: number;\n}\nexport function renderTree<T extends TreeNode>({\n  nodes,\n  itemRenderer,\n  parentNode,\n  level,\n}: RenderTreeProps<T>) {\n  return nodes.map((node, index) => {\n    return cloneElement(itemRenderer(node), {\n      level: level == undefined ? 0 : level + 1,\n      index,\n      node,\n      parentNode,\n      key: node.id,\n      itemRenderer,\n    });\n  });\n}\n","import React, {\n  forwardRef,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n} from 'react';\nimport {TreeContext} from './tree-context';\nimport clsx from 'clsx';\nimport {ArrowRightIcon} from '../../icons/material/ArrowRight';\n\ninterface TreeLabelProps {\n  level?: number;\n  node: any;\n  icon?: ReactNode;\n  label?: ReactNode;\n  className?: string;\n}\nexport const TreeLabel = forwardRef<HTMLDivElement, TreeLabelProps>(\n  ({icon, label, level = 0, node, className, ...domProps}, ref) => {\n    const {expandedKeys, setExpandedKeys, selectedKeys, setSelectedKeys} =\n      useContext(TreeContext);\n    const isExpanded = expandedKeys.includes(node.id);\n    const isSelected = selectedKeys.includes(node.id);\n\n    const handleExpandIconClick: MouseEventHandler = e => {\n      e.stopPropagation();\n      const index = expandedKeys.indexOf(node.id);\n      const newExpandedKeys = [...expandedKeys];\n      if (index > -1) {\n        newExpandedKeys.splice(index, 1);\n      } else {\n        newExpandedKeys.push(node.id);\n      }\n      setExpandedKeys(newExpandedKeys);\n    };\n\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        onClick={e => {\n          e.stopPropagation();\n          setSelectedKeys([node.id]);\n        }}\n        className={clsx(\n          'flex flex-nowrap whitespace-nowrap items-center gap-4 py-6 rounded header cursor-pointer overflow-hidden text-ellipsis tree-label',\n          className,\n          isSelected && 'bg-primary/selected text-primary font-bold',\n          !isSelected && 'hover:bg-hover'\n        )}\n      >\n        {level > 0 && (\n          <div className=\"flex\">\n            {Array.from({length: level}).map((_, i) => {\n              return <div key={i} className=\"w-24 h-24\" />;\n            })}\n          </div>\n        )}\n        <div onClick={handleExpandIconClick}>\n          <ArrowRightIcon\n            className={clsx(\n              'icon-sm cursor-default transition-transform',\n              isExpanded && 'rotate-90'\n            )}\n          />\n        </div>\n        {icon}\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\n      </div>\n    );\n  }\n);\nTreeLabel.displayName = 'TreeLabel';\n","import React, {HTMLAttributes, ReactElement, ReactNode, Ref, useContext, useEffect} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TreeContext} from './tree-context';\nimport {createEventHandler} from '../../utils/dom/create-event-handler';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TreeNode} from './tree';\nimport {renderTree} from './render-tree';\nimport {TreeLabel} from './tree-label';\n\nexport type TreeItemRenderer<T extends TreeNode> = (\n  node: any\n) => ReactElement<TreeItemProps<T>>;\n\nexport interface TreeItemProps<T extends TreeNode>\n  extends HTMLAttributes<HTMLElement> {\n  label: ReactNode;\n  icon: ReactNode;\n  node?: T;\n  parentNode?: T;\n  level?: number;\n  index?: number;\n  itemRenderer?: TreeItemRenderer<T>;\n  labelRef?: Ref<HTMLDivElement>;\n  labelClassName?: string;\n  className?: string;\n}\nexport function TreeItem<T extends TreeNode>({\n  label,\n  icon,\n  node,\n  level,\n  index,\n  itemRenderer,\n  labelRef,\n  labelClassName,\n  className,\n  parentNode,\n  ...domProps\n}: TreeItemProps<T>) {\n  const focusManager = useFocusManager();\n  const {\n    expandedKeys,\n    selectedKeys,\n    focusedNode,\n    setFocusedNode,\n    setExpandedKeys,\n    setSelectedKeys,\n  } = useContext(TreeContext);\n\n  // clear focused node on unmount\n  useEffect(() => {\n    return () => {\n      if (focusedNode === node?.id) {\n        setFocusedNode(undefined);\n      }\n    };\n  }, [focusedNode, node?.id, setFocusedNode]);\n\n  if (!node || !itemRenderer) return null;\n\n  const hasChildren = node.children.length;\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const isFirstNode = level === 0 && index === 0;\n  const isFocused =\n    focusedNode == undefined ? isFirstNode : focusedNode === node.id;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLUListElement>) => {\n    if (focusedNode == null) return;\n    switch (e.key) {\n      // select the node\n      case 'Enter':\n      case ' ':\n        e.stopPropagation();\n        e.preventDefault();\n        setSelectedKeys([focusedNode]);\n        break;\n\n      // expand node, or move focus to first (and only first) child\n      case 'ArrowRight':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!hasChildren) return;\n\n        if (!isExpanded) {\n          setExpandedKeys([...expandedKeys, focusedNode]);\n        } else {\n          focusManager.focusNext();\n        }\n        break;\n\n      // collapse node, or move focus to parent node\n      case 'ArrowLeft':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (isExpanded) {\n          const index = expandedKeys.indexOf(focusedNode);\n          const newKeys = [...expandedKeys];\n          newKeys.splice(index, 1);\n          setExpandedKeys(newKeys);\n        } else if (parentNode) {\n          const parentEl =\n            document.activeElement?.parentElement?.closest('[tabindex]');\n          if (parentEl) {\n            (parentEl as HTMLElement).focus();\n          }\n        }\n        break;\n\n      // focus next visible node, recursively\n      case 'ArrowDown':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusNext();\n        break;\n\n      // focus previous visible node, recursively\n      case 'ArrowUp':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusPrevious();\n        break;\n\n      // focus first visible node\n      case 'Home':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusFirst();\n        break;\n\n      // focus last visible node\n      case 'End':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusLast();\n        break;\n\n      // expand all sibling nodes\n      case '*':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (parentNode?.children) {\n          const newKeys = [...expandedKeys];\n          parentNode.children.forEach(childNode => {\n            if (\n              childNode.children.length &&\n              !expandedKeys.includes(childNode.id)\n            ) {\n              newKeys.push(childNode.id);\n            }\n          });\n          if (newKeys.length !== expandedKeys.length) {\n            setExpandedKeys(newKeys);\n          }\n        }\n        break;\n    }\n  };\n\n  return (\n    <li\n      role=\"treeitem\"\n      aria-expanded={isExpanded ? 'true' : 'false'}\n      aria-selected={isSelected}\n      tabIndex={isFocused ? 0 : -1}\n      onKeyDown={createEventHandler(onKeyDown)}\n      onFocus={e => {\n        e.stopPropagation();\n        setFocusedNode(node.id);\n      }}\n      onBlur={e => {\n        e.stopPropagation();\n        // only clear focus state when focus moves outside the tree\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n          setFocusedNode(undefined);\n        }\n      }}\n      className={clsx(\n        'outline-none',\n        // focus direct .tree-label child when this element has :focus-visible\n        '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset',\n        className\n      )}\n    >\n      <TreeLabel\n        ref={labelRef}\n        className={labelClassName}\n        node={node}\n        level={level}\n        label={label}\n        icon={icon}\n        {...domProps}\n      />\n      <AnimatePresence initial={false}>\n        {isExpanded ? (\n          <m.ul\n            key={`${node.id}-group`}\n            role=\"group\"\n            initial=\"closed\"\n            animate=\"open\"\n            exit=\"closed\"\n            variants={{\n              open: {opacity: 1, height: 'auto'},\n              closed: {opacity: 0, height: 0, overflow: 'hidden'},\n            }}\n          >\n            {renderTree({\n              nodes: node.children,\n              parentNode: node,\n              itemRenderer,\n              level,\n            })}\n          </m.ul>\n        ) : null}\n      </AnimatePresence>\n    </li>\n  );\n}\n","import React, {Key, useState} from 'react';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope} from '@react-aria/focus';\nimport {TreeContext, TreeContextValue} from './tree-context';\nimport {TreeItemRenderer} from './tree-item';\nimport {renderTree} from './render-tree';\n\nexport interface TreeNode {\n  id: number | string;\n  children: TreeNode[];\n}\n\ninterface TreeProps<T extends TreeNode> {\n  children: TreeItemRenderer<T>;\n  nodes: T[];\n  selectedKeys?: Key[];\n  expandedKeys?: Key[];\n  defaultExpandedKeys?: Key[];\n  onExpandedKeysChange?: (value: Key[]) => void;\n  defaultSelectedKeys?: Key[];\n  onSelectedKeysChange?: (value: Key[]) => void;\n}\nexport function Tree<T extends TreeNode>({\n  children,\n  nodes,\n  ...props\n}: TreeProps<T>) {\n  const [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys,\n    props.defaultSelectedKeys,\n    props.onExpandedKeysChange\n  );\n  const [selectedKeys, setSelectedKeys] = useControlledState(\n    props.selectedKeys,\n    props.defaultSelectedKeys,\n    props.onSelectedKeysChange\n  );\n  const [focusedNode, setFocusedNode] = useState<Key | undefined>();\n\n  const value: TreeContextValue = {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys,\n    focusedNode,\n    setFocusedNode,\n  };\n\n  return (\n    <TreeContext.Provider value={value}>\n      <FocusScope>\n        <TreeRoot nodes={nodes} itemRenderer={children} />\n      </FocusScope>\n    </TreeContext.Provider>\n  );\n}\n\ninterface TreeRootProps<T extends TreeNode> {\n  nodes: TreeNode[];\n  itemRenderer: TreeItemRenderer<T>;\n}\nfunction TreeRoot<T extends TreeNode>(props: TreeRootProps<T>) {\n  return (\n    <ul className=\"overflow-hidden text-sm\" role=\"tree\">\n      {renderTree(props)}\n    </ul>\n  );\n}\n","import React, {useMemo, useRef} from 'react';\nimport {arrayToTree} from 'performant-array-to-tree';\nimport {useFolders} from '../../files/queries/use-folders';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {getPathForFolder, RootFolderPage} from '../../drive-page/drive-page';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ConnectedDraggable,\n  useDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {useSidebarTreeDropTarget} from './use-sidebar-tree-drop-target';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport clsx from 'clsx';\nimport {BackupIcon} from '@common/icons/material/Backup';\nimport {TreeItem, TreeItemProps} from '@common/ui/tree/tree-item';\nimport {Tree} from '@common/ui/tree/tree';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface TreeFolder extends DriveFolder {\n  children: TreeFolder[];\n}\n\nexport function FolderTree() {\n  const navigate = useNavigate();\n  const {data} = useFolders();\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\n\n  const activePage = useDriveStore(s => s.activePage);\n  let selectedKeys: number[] = [];\n  if (activePage?.isFolderPage) {\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\n  }\n\n  const tree = useMemo(() => {\n    const folders = arrayToTree(data?.folders || [], {\n      parentId: 'parent_id',\n      dataField: null,\n    }) as TreeFolder[];\n    const rootFolder = {\n      ...RootFolderPage.folder,\n      children: folders,\n    };\n    return [rootFolder];\n  }, [data?.folders]);\n\n  return (\n    <Tree\n      nodes={tree}\n      expandedKeys={expandedKeys}\n      onExpandedKeysChange={keys => {\n        driveState().setSidebarExpandedKeys(keys);\n      }}\n      selectedKeys={selectedKeys}\n      onSelectedKeysChange={([id]) => {\n        const entryHash = findHash(id as number, tree);\n        if (entryHash) {\n          navigate(getPathForFolder(entryHash));\n        } else {\n          navigate(RootFolderPage.path);\n        }\n      }}\n    >\n      {() => <FolderTreeItem />}\n    </Tree>\n  );\n}\n\n// props will be passed by tree via cloneElement\nfunction FolderTreeItem(props: Partial<TreeItemProps<TreeFolder>>) {\n  const {node} = props as Required<TreeItemProps<TreeFolder>>;\n  const labelRef = useRef<HTMLDivElement>(null);\n  const isRootFolder = node.id === 0;\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(node.id)\n  );\n\n  const {draggableProps} = useDraggable({\n    type: 'fileEntry',\n    id: makeFolderTreeDragId(node),\n    ref: labelRef,\n    disabled: isRootFolder,\n    hidePreview: true,\n    onDragStart: (e, draggable) => {\n      const d = draggable as ConnectedDraggable<FileEntry[]>;\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\n      driveState().selectEntries([]);\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => [node],\n  });\n\n  const {droppableProps, isDragOver} = useSidebarTreeDropTarget({\n    folder: node,\n    ref: labelRef,\n  });\n\n  return (\n    <TreeItem\n      {...mergeProps(draggableProps, droppableProps, props)}\n      onContextMenu={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        driveState().deselectEntries('all');\n        driveState().setContextMenuData({\n          x: e.clientX,\n          y: e.clientY,\n          entry: node,\n        });\n      }}\n      labelRef={labelRef}\n      className={isRootFolder ? 'focus-visible:ring-2' : undefined}\n      labelClassName={clsx(\n        isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary',\n        isDragging && 'opacity-30',\n        isRootFolder && 'h-40'\n      )}\n      icon={\n        isRootFolder ? (\n          <BackupIcon size=\"md\" className=\"mr-6\" />\n        ) : (\n          <FolderIcon size=\"sm\" className=\"mr-4\" />\n        )\n      }\n      label={node.name}\n    />\n  );\n}\n\nconst findHash = (id: number, nodes: FileEntry[]): string | undefined => {\n  for (const item of nodes) {\n    if (item.id === id) {\n      return item.hash;\n    } else if (item.children) {\n      const hash = findHash(id, item.children);\n      if (hash) {\n        return hash;\n      }\n    }\n  }\n};\n","import {CustomMenu, CustomMenuItem} from '@common/menus/custom-menu';\nimport {MenuPositions} from '../../menu-positions';\nimport React, {\n  ComponentPropsWithoutRef,\n  forwardRef,\n  useRef,\n  useState,\n} from 'react';\nimport {MenuItemConfig} from '@common/core/settings/settings';\nimport clsx from 'clsx';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FolderTree} from './folder-tree';\nimport {useDeleteEntries} from '../../files/queries/use-delete-entries';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport function SidebarMenu() {\n  const {workspaceId} = useActiveWorkspaceId();\n  return (\n    <div className=\"text-muted mt-26 px-12\">\n      <FolderTree />\n      <CustomMenu\n        menu={MenuPositions.DriveSidebar}\n        orientation=\"vertical\"\n        gap=\"gap-0\"\n      >\n        {item => {\n          if (item.action === '/drive/trash') {\n            return <TrashMenuItem key={item.id} item={item} />;\n          }\n          return <MenuItem key={item.id} item={item} />;\n        }}\n      </CustomMenu>\n    </div>\n  );\n}\n\ninterface MenuItemProps extends ComponentPropsWithoutRef<'a'> {\n  item: MenuItemConfig;\n  className?: string;\n}\nexport const MenuItem = forwardRef<HTMLAnchorElement, MenuItemProps>(\n  ({item, className, ...domProps}, ref) => {\n    return (\n      <CustomMenuItem\n        className={({isActive}) =>\n          clsx(\n            className,\n            'h-40 w-full my-4 px-24 rounded',\n            isActive\n              ? 'text-primary font-bold bg-primary/selected cursor-default'\n              : 'hover:bg-hover'\n          )\n        }\n        item={item}\n        ref={ref}\n        {...domProps}\n      />\n    );\n  }\n);\n\ninterface TrashMenuItemProps {\n  item: MenuItemConfig;\n}\nfunction TrashMenuItem({item}: TrashMenuItemProps) {\n  const deleteEntries = useDeleteEntries();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const ref = useRef<HTMLAnchorElement>(null);\n\n  const {droppableProps} = useDroppable({\n    id: 'trash',\n    types: ['fileEntry'],\n    ref,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: draggable => {\n      const entryIds = (draggable.getData() as FileEntry[]).map(e => e.id);\n      deleteEntries.mutate({entryIds, deleteForever: false});\n    },\n  });\n  return (\n    <MenuItem\n      className={clsx(isDragOver && 'bg-primary/selected')}\n      ref={ref}\n      {...droppableProps}\n      item={item}\n    />\n  );\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {Trans} from '@common/i18n/trans';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {UploadFileIcon} from '@common/icons/material/UploadFile';\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\nimport React from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {AddIcon} from '@common/icons/material/Add';\n\ninterface CreateNewButtonProps {\n  isCompact?: boolean;\n  className?: string;\n}\nexport function CreateNewButton({isCompact, className}: CreateNewButtonProps) {\n  const activePage = useDriveStore(s => s.activePage);\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const button = isCompact ? (\n    <IconButton size=\"md\">\n      <AddIcon />\n    </IconButton>\n  ) : (\n    <Button\n      className=\"min-w-160\"\n      color=\"primary\"\n      variant=\"flat\"\n      size=\"sm\"\n      startIcon={<FileUploadIcon />}\n      disabled={!activePage?.canUpload}\n    >\n      <Trans message=\"Upload\" />\n    </Button>\n  );\n\n  return (\n    <div className={className}>\n      <MenuTrigger\n        onItemSelected={async value => {\n          if (value === 'uploadFiles') {\n            uploadFiles(await openUploadWindow({multiple: true}));\n          } else if (value === 'uploadFolder') {\n            uploadFiles(await openUploadWindow({directory: true}));\n          } else if (value === 'newFolder') {\n            const activeFolder = driveState().activePage?.folder;\n            driveState().setActiveActionDialog(\n              'newFolder',\n              activeFolder ? [activeFolder] : []\n            );\n          }\n        }}\n      >\n        {button}\n        <Menu>\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\n            <Trans message=\"Upload files\" />\n          </MenuItem>\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\n            <Trans message=\"Upload folder\" />\n          </MenuItem>\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\n            <Trans message=\"Create folder\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </div>\n  );\n}\n","import React from 'react';\nimport {StorageMeter} from './storage-summary/storage-meter';\nimport {WorkspaceSelector} from '@common/workspace/workspace-selector';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {SidebarMenu} from './sidebar-menu';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {CreateNewButton} from '../create-new-button';\nimport {Button} from '@common/ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {Trans} from '@common/i18n/trans';\nimport {useAuth} from '@common/auth/use-auth';\nimport clsx from 'clsx';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface SidebarProps {\n  className?: string;\n}\nexport function Sidebar({className}: SidebarProps) {\n  const {isSubscribed} = useAuth();\n  const {billing} = useSettings();\n  return (\n    <div\n      className={clsx(\n        className,\n        'text-sm text-muted font-medium bg-alt border-r flex flex-col gap-20'\n      )}\n    >\n      <div className=\"flex-auto\">\n        <CreateNewButton className=\"text-center px-12 pt-28\" />\n        <SidebarMenu />\n        <StorageMeter />\n        {billing.enable && (\n          <div className=\"pl-60 mt-14\">\n            <Button\n              elementType={Link}\n              to={isSubscribed ? '/billing/change-plan' : '/pricing'}\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n            >\n              <Trans message=\"Upgrade\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      <WorkspaceSwitcher />\n    </div>\n  );\n}\n\nfunction WorkspaceSwitcher() {\n  const navigate = useNavigate();\n  return (\n    <WorkspaceSelector\n      onChange={() => {\n        navigate(RootFolderPage.path);\n      }}\n      className=\"w-full px-24 py-18 border-t flex-shrink-0 mt-auto\"\n    />\n  );\n}\n","import {InfiniteData, useInfiniteQuery} from '@tanstack/react-query';\nimport {useSearchParams} from 'react-router-dom';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {DriveEntry, DriveFolder} from '../drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {SortColumn, SortDirection} from '../../layout/sorting/available-sorts';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {makeFolderPage, SearchPage} from '../../drive-page/drive-page';\nimport {useEffect} from 'react';\nimport {shallowEqual} from '@common/utils/shallow-equal';\n\nexport interface DriveApiIndexParams {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n  folderId?: string | number | null;\n  query?: string;\n  filters?: string;\n  deletedOnly?: boolean;\n  starredOnly?: boolean;\n  sharedOnly?: boolean;\n  perPage?: number;\n  page?: number;\n  recentOnly?: boolean;\n  workspaceId?: number | null;\n  pageId?: number | string;\n}\n\ninterface EntriesPaginationResponse\n  extends LengthAwarePaginationResponse<DriveEntry> {\n  folder?: DriveFolder;\n}\n\nfunction fetchEntries(\n  params: DriveApiIndexParams\n): Promise<EntriesPaginationResponse> {\n  return apiClient\n    .get('drive/file-entries', {\n      params,\n    })\n    .then(response => response.data);\n}\n\nconst setActiveFolder = (response: InfiniteData<EntriesPaginationResponse>) => {\n  const firstPage = response.pages[0];\n  const newFolder = firstPage.folder;\n  const currentPage = driveState().activePage;\n\n  if (\n    newFolder &&\n    currentPage &&\n    currentPage.id === newFolder.hash &&\n    // only update page if once to set the folder or if permissions change, to keep page reference as stable as possible\n    (!currentPage.folder ||\n      !shallowEqual(newFolder.permissions, currentPage.folder?.permissions))\n  ) {\n    driveState().setActivePage(makeFolderPage(newFolder));\n  }\n  return response;\n};\n\nexport function usePaginatedEntries() {\n  const page = useDriveStore(s => s.activePage);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const [searchParams] = useSearchParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: DriveApiIndexParams = {\n    pageId: page?.id,\n    ...page?.queryParams,\n    ...Object.fromEntries(searchParams),\n    folderId: page?.isFolderPage ? page.id : null,\n    workspaceId,\n    ...sortDescriptor,\n  };\n\n  // if we have no search query, there's no need to call the API, show no results message instead\n  const isDisabledInSearch =\n    page === SearchPage && !params.query && !params.filters;\n\n  const query = useInfiniteQuery(\n    DriveQueryKeys.fetchEntries(params),\n    ({pageParam = 1}) => {\n      return fetchEntries({...params, page: pageParam});\n    },\n    {\n      getNextPageParam: lastResponse => {\n        const currentPage = lastResponse.current_page;\n        const lastPage = lastResponse.last_page;\n        if (currentPage >= lastPage) {\n          return undefined;\n        }\n        return currentPage + 1;\n      },\n      enabled: page != null && !isDisabledInSearch,\n    }\n  );\n\n  // need to do this in effect, to avoid react errors about\n  // multiple components re-rendering at the same time\n  useEffect(() => {\n    if (query.data?.pages[0].folder) {\n      setActiveFolder(query.data);\n    }\n  }, [query.data]);\n\n  return query;\n}\n\nexport function getAllEntries() {\n  const caches = queryClient.getQueriesData<\n    InfiniteData<EntriesPaginationResponse>\n  >(DriveQueryKeys.fetchEntries());\n  return caches.reduce<DriveEntry[]>((all, cache) => {\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\n    return [...all, ...current];\n  }, []);\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {FILE_ENTRY_TYPE_FILTER} from '@common/admin/file-entry/file-entry-index-filters';\nimport {message} from '@common/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const driveSearchFilters: BackendFilter[] = [\n  FILE_ENTRY_TYPE_FILTER,\n  {\n    key: 'owner_id',\n    label: message('Owner'),\n    description: message('User file was uploaded by'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '02',\n      options: [\n        {\n          key: '01',\n          label: message('anyone'),\n          value: {value: null, operator: '!='},\n        },\n        {\n          key: '02',\n          label: message('me'),\n          value: '{authId}',\n        },\n        {\n          key: '03',\n          label: message('not me'),\n          value: {value: '{authId}', operator: '!='},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date file was uploaded'),\n  }),\n  updatedAtFilter({\n    description: message('Date file was last changed'),\n  }),\n  {\n    key: 'deleted_at',\n    label: message('In trash'),\n    description: message('Only show files that are in the trash'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: null,\n    },\n  },\n  {\n    key: 'shareableLink',\n    label: message('Has shareable link'),\n    description: message('Only show files that have a shareable link'),\n    defaultOperator: FilterOperator.has,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: '*',\n    },\n  },\n  {\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: true,\n    },\n    key: 'sharedByMe',\n    label: message('Shared by me'),\n    description: message('Only show files that are shared with someone'),\n    defaultOperator: FilterOperator.eq,\n  },\n];\n","import React, {useContext, useState} from 'react';\nimport {driveSearchFilters} from './drive-search-filters';\nimport {useDriveStore} from '../drive-store';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useSearchParams} from 'react-router-dom';\nimport {message} from '@common/i18n/message';\nimport {IconButton} from '@common/ui/buttons/icon-button';\n\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\n\nexport function SearchFilterList() {\n  const activePage = useDriveStore(s => s.activePage);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  if (activePage !== SearchPage) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-10 mb-30 px-10 md:px-26\">\n      {isMobileMode && (\n        <form\n          className=\"contents\"\n          onSubmit={e => {\n            e.preventDefault();\n            // blur input so mobile keyboard is hidden\n            if (document.activeElement?.tagName === 'INPUT') {\n              (document.activeElement as HTMLInputElement).blur();\n            }\n            navigate(\n              {\n                pathname: SearchPage.path,\n                search: `?query=${inputValue}`,\n              },\n              {replace: true}\n            );\n          }}\n        >\n          <TextField\n            autoFocus\n            className=\"mb-20\"\n            startAdornment={\n              <IconButton type=\"submit\" radius=\"rounded\">\n                <SearchIcon />\n              </IconButton>\n            }\n            placeholder={trans(message('Type to search'))}\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n          />\n        </form>\n      )}\n      <FilterList\n        filters={driveSearchFilters}\n        pinnedFilters={alwaysShownFilters}\n      />\n    </div>\n  );\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function restrictResizableWithinBoundary(\n  rect: InteractableRect,\n  boundaryRect: InteractableRect\n) {\n  const boundedRect = {...rect};\n\n  // restrict to left edge of boundary\n  boundedRect.left = Math.max(0, boundedRect.left);\n  // compensate width when left is bounded\n  const leftRestriction = boundedRect.left - rect.left;\n  if (leftRestriction > 0) {\n    boundedRect.width -= leftRestriction;\n  }\n\n  // restrict to top edge of boundary\n  boundedRect.top = Math.max(0, boundedRect.top);\n  // compensate height when top is bounded\n  const topRestriction = boundedRect.top - rect.top;\n  if (topRestriction > 0) {\n    boundedRect.height -= topRestriction;\n  }\n\n  // restrict to right edge of boundary\n  boundedRect.width = Math.min(\n    boundedRect.width,\n    boundaryRect.width - boundedRect.left\n  );\n\n  // restrict to bottom edge of boundary\n  boundedRect.height = Math.min(\n    boundedRect.height,\n    boundaryRect.height - boundedRect.top\n  );\n\n  return boundedRect;\n}\n","import {RefObject, useLayoutEffect, useRef} from 'react';\nimport {droppables} from '../drag-state';\nimport {InteractableRect} from '../../interactable-event';\nimport {DraggableId} from '../use-draggable';\n\nexport interface ConnectedMouseSelectable {\n  id: DraggableId;\n  onSelected?: () => void;\n  onDeselected?: () => void;\n  ref: RefObject<HTMLElement>;\n  rect?: InteractableRect;\n}\n\nexport const mouseSelectables = new Map<\n  DraggableId,\n  ConnectedMouseSelectable\n>();\n\nexport function useMouseSelectable(options: ConnectedMouseSelectable) {\n  const {id, ref} = options;\n  const optionsRef = useRef(options);\n  optionsRef.current = options;\n\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\n    mouseSelectables.set(id, {\n      ...mouseSelectables.get(id),\n      id,\n      ref,\n      // avoid stale closures\n      onSelected: () => {\n        optionsRef.current.onSelected?.();\n      },\n      onDeselected: () => optionsRef.current.onDeselected?.(),\n    });\n    return () => {\n      droppables.delete(id);\n    };\n  }, [id, optionsRef, ref]);\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function rectsIntersect(\n  rectA?: InteractableRect,\n  rectB?: InteractableRect\n) {\n  if (!rectA || !rectB) return false;\n  return (\n    rectA.left <= rectB.left + rectB.width &&\n    rectA.left + rectA.width >= rectB.left &&\n    rectA.top <= rectB.top + rectB.height &&\n    rectA.top + rectA.height >= rectB.top\n  );\n}\n","import React, {RefObject, useRef} from 'react';\nimport {usePointerEvents} from '../../use-pointer-events';\nimport {InteractableRect} from '../../interactable-event';\nimport {restrictResizableWithinBoundary} from '../../utils/restrict-resizable-within-boundary';\nimport {activeInteraction} from '../../active-interaction';\nimport {updateRects} from '../update-rects';\nimport {mouseSelectables} from './use-mouse-selectable';\nimport {rectsIntersect} from '../../utils/rects-intersect';\nimport {DraggableId} from '../use-draggable';\n\ninterface SelectionState {\n  startPoint?: {x: number; y: number; scrollTop: number};\n  endPoint?: {x: number; y: number};\n  boundaryRect?: InteractableRect & {heightWithoutScroll: number};\n  scrollListener?: EventListener;\n  rafId?: number;\n  selectedIds?: Set<DraggableId>;\n}\n\ninterface Props {\n  onPointerDown?: (e: React.PointerEvent) => void;\n  containerRef?: RefObject<HTMLDivElement>;\n}\nexport function useMouseSelectionBox({onPointerDown, ...props}: Props = {}) {\n  const defaultRef = useRef<HTMLDivElement>(null);\n  const containerRef = props.containerRef || defaultRef;\n  const boxRef = useRef<HTMLDivElement>(null);\n\n  let state = useRef<SelectionState>({}).current;\n\n  const drawSelectionBox = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n    }\n\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\n\n    const startPoint = state.startPoint;\n    const endPoint = state.endPoint;\n    const initialScrollTop = startPoint.scrollTop || 0;\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\n\n    const newRect = {\n      left: Math.min(startPoint.x, endPoint.x),\n      top: Math.min(startPoint.y, endPoint.y),\n      width: Math.abs(startPoint.x - endPoint.x),\n      height: Math.abs(startPoint.y - endPoint.y),\n    };\n\n    // convert box coords to be relative to container and not viewport\n    newRect.left -= state.boundaryRect.left;\n    newRect.top -= state.boundaryRect.top;\n\n    // take initial scroll of container into account\n    newRect.top += initialScrollTop;\n\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\n    const scrollDiff = currentScrollTop - initialScrollTop;\n    const scrollValue = Math.abs(scrollDiff);\n\n    // top needs to be changed only if scroll direction is top\n    if (scrollDiff < 0) {\n      newRect.top -= scrollValue;\n    }\n\n    // height needs to be changed regardless of direction and method\n    newRect.height += scrollValue;\n\n    const boundedRect = state.boundaryRect\n      ? restrictResizableWithinBoundary(newRect, state.boundaryRect)\n      : {...newRect};\n\n    if (boxRef.current) {\n      state.rafId = requestAnimationFrame(() => {\n        if (boxRef.current) {\n          boxRef.current.style.display = `block`;\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\n          boxRef.current.style.width = `${boundedRect.width}px`;\n          boxRef.current.style.height = `${boundedRect.height}px`;\n        }\n        state.rafId = undefined;\n      });\n    }\n\n    // convert rect back to absolute for intersection testing\n    const absoluteRect = {\n      ...boundedRect,\n      left: boundedRect.left + state.boundaryRect.left,\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop,\n    };\n\n    for (const [, selectable] of mouseSelectables) {\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.add(selectable.id);\n        selectable.onSelected?.();\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.delete(selectable.id);\n        selectable.onDeselected?.();\n      }\n    }\n  };\n\n  const pointerEvents = usePointerEvents({\n    minimumMovement: 4,\n    onPointerDown,\n    onMoveStart: e => {\n      if (activeInteraction) {\n        return false;\n      }\n      updateRects(mouseSelectables);\n      state = {\n        selectedIds: new Set(),\n      };\n      const el = containerRef.current;\n      state.startPoint = {\n        x: e.clientX,\n        y: e.clientY,\n        scrollTop: el?.scrollTop || 0,\n      };\n\n      state.scrollListener = e => {\n        if (!state.startPoint) return;\n        // update rects on scroll, because we are using relative position\n        updateRects(mouseSelectables);\n        if (state.boundaryRect?.height) {\n          state.boundaryRect.height = (e.target as HTMLElement).scrollHeight;\n        }\n        // draw selection box (for autoscroll and mousewheel)\n        drawSelectionBox();\n      };\n\n      if (el) {\n        const rect = el.getBoundingClientRect();\n        el.addEventListener('scroll', state.scrollListener);\n        state.boundaryRect = {\n          top: rect.top,\n          left: rect.left,\n          height: el.scrollHeight,\n          heightWithoutScroll: rect.height,\n          width: el.scrollWidth,\n        };\n      }\n    },\n    onMove: e => {\n      state.endPoint = {x: e.clientX, y: e.clientY};\n\n      if (state.boundaryRect && containerRef.current) {\n        const reachedBottomEdge =\n          e.clientY + 20 >\n          state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\n\n        if (reachedBottomEdge) {\n          containerRef.current.scrollBy({top: 10});\n        } else if (reachedTopEdge) {\n          containerRef.current.scrollBy({top: -10});\n        }\n      }\n\n      drawSelectionBox();\n    },\n    onMoveEnd: () => {\n      if (state.rafId) {\n        cancelAnimationFrame(state.rafId);\n      }\n      if (containerRef.current && state.scrollListener) {\n        containerRef.current.removeEventListener(\n          'scroll',\n          state.scrollListener\n        );\n      }\n      if (boxRef.current) {\n        boxRef.current.style.display = `none`;\n        boxRef.current.style.transform = '';\n        boxRef.current.style.width = '';\n        boxRef.current.style.height = '';\n      }\n      state = {};\n    },\n  });\n\n  return {\n    containerProps: {\n      ...pointerEvents.domProps,\n      ref: containerRef,\n    },\n    boxProps: {ref: boxRef},\n  };\n}\n","import {DriveEntry} from '../drive-entry';\nimport {usePaginatedEntries} from './use-paginated-entries';\n\nexport function useEntries(): DriveEntry[] {\n  const query = usePaginatedEntries();\n  if (!query.data) return [];\n  return query.data.pages.flatMap(p => p.data);\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {getAllEntries} from './queries/use-paginated-entries';\nimport {DriveEntry, DriveFolder} from './drive-entry';\nimport {useEntries} from './queries/use-entries';\nimport {useFolders} from './queries/use-folders';\n\nexport function useSelectedEntries(): DriveEntry[] {\n  const ids = useDriveStore(s => s.selectedEntries);\n  const entries = useEntries();\n  return Array.from(ids)\n    .map(id => entries.find(entry => entry.id === id))\n    .filter(e => !!e) as DriveEntry[];\n}\n\nexport function useSelectedEntry(): DriveEntry | null {\n  const entries = useSelectedEntries();\n  return entries[0];\n}\n\nexport function useSelectedEntryParent(): DriveFolder | null | undefined {\n  const entry = useSelectedEntry();\n  const {data} = useFolders();\n  if (!entry || !data) return;\n  return data.folders.find(e => e.id === entry.parent_id) as DriveFolder;\n}\n\nexport function getSelectedEntries(): DriveEntry[] {\n  const ids = Array.from(driveState().selectedEntries);\n  const allEntries = getAllEntries();\n  return ids\n    .map(id => allEntries.find(entry => entry.id === id))\n    .filter(e => !!e) as DriveEntry[];\n}\n","import React, {createElement} from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {EntryActionMenuTrigger} from './entry-action-menu-trigger';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\nimport {useSelectedEntries} from '../files/use-selected-entries';\nimport {\n  useDeleteEntriesAction,\n  usePreviewAction,\n  useRemoveSharedEntriesAction,\n  useShareAction,\n} from './use-entry-actions';\nimport {DriveEntry} from '../files/drive-entry';\nimport {EntryAction} from './entry-action';\n\ninterface EntryActionListProps {\n  className?: string;\n}\nexport function EntryActionList({className}: EntryActionListProps) {\n  const selectedEntries = useSelectedEntries();\n\n  if (!selectedEntries.length) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <ActionList entries={selectedEntries} />\n    </div>\n  );\n}\n\ninterface ActionListProps {\n  entries: DriveEntry[];\n}\nfunction ActionList({entries}: ActionListProps) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeShared = useRemoveSharedEntriesAction(entries);\n\n  const actions = [preview, share, deleteAction, removeShared].filter(\n    action => !!action\n  ) as EntryAction[];\n\n  return (\n    <div className=\"entry-action-list\">\n      {actions.map(action => (\n        <Tooltip key={action.key} label={<Trans {...action.label} />}>\n          <IconButton\n            size=\"sm\"\n            onClick={() => {\n              action.execute();\n            }}\n          >\n            {createElement(action.icon)}\n          </IconButton>\n        </Tooltip>\n      ))}\n      <EntryActionMenuTrigger entries={entries}>\n        <Tooltip label={<Trans message=\"More actions\" />}>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </Tooltip>\n      </EntryActionMenuTrigger>\n    </div>\n  );\n}\n","import {useSelectedEntries} from './use-selected-entries';\nimport {DriveEntry} from './drive-entry';\nimport {useEntryActions} from '../entry-actions/use-entry-actions';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {ContextMenu} from '@common/ui/navigation/menu/context-menu';\nimport {MenuItem} from '@common/ui/navigation/menu/menu-trigger';\nimport React, {createElement} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {EntryAction} from '../entry-actions/entry-action';\nimport {DrivePage, RootFolderPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from '../entry-actions/use-drive-page-actions';\n\nexport function DriveContextMenu() {\n  const selectedEntries = useSelectedEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const data = useDriveStore(s => s.contextMenuData);\n  const entries = data?.entry ? [data.entry] : selectedEntries;\n\n  // right-clicked root folder\n  if (data?.entry?.id === 0) {\n    return <PageContextMenu position={data} page={RootFolderPage} />;\n  }\n\n  if (data && entries.length) {\n    return <EntriesContextMenu entries={entries} position={data} />;\n  }\n\n  if (data && activePage) {\n    return <PageContextMenu position={data} page={activePage} />;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps {\n  position: {x: number; y: number};\n  entries: DriveEntry[];\n}\nfunction EntriesContextMenu({entries, position}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface PageContextMenuProps {\n  position: {x: number; y: number};\n  page: DrivePage;\n}\nfunction PageContextMenu({page, position}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface BaseContextMenuProps {\n  position: {x: number; y: number};\n  actions: EntryAction[];\n}\nfunction BaseContextMenu({position, actions}: BaseContextMenuProps) {\n  return (\n    <ContextMenu\n      position={position}\n      onOpenChange={isOpen => {\n        if (!isOpen) {\n          driveState().setContextMenuData(null);\n        }\n      }}\n    >\n      {actions.map(action => (\n        <MenuItem\n          value={action.key}\n          key={action.key}\n          onSelected={action.execute}\n          startIcon={createElement(action.icon)}\n        >\n          <Trans {...action.label} />\n        </MenuItem>\n      ))}\n    </ContextMenu>\n  );\n}\n","import {useMediaQuery} from './use-media-query';\n\nexport function useIsTouchDevice() {\n  return useMediaQuery('((pointer: coarse))');\n}\n","import {\n  ConnectedDraggable,\n  useDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../files/use-folder-drop-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {useIsTouchDevice} from '@common/utils/hooks/is-touch-device';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {useMouseSelectable} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selectable';\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\n\nexport function useFileViewDnd<T extends HTMLElement = HTMLElement>(\n  entry: DriveEntry\n) {\n  const isTouchDevice = useIsTouchDevice();\n  const ref = useRef<T>(null);\n  const {onDrop} = useFolderDropAction(entry);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(entry.id)\n  );\n  const activePage = useDriveStore(s => s.activePage);\n\n  const {draggableProps} = useDraggable({\n    disabled: !!isTouchDevice || activePage === TrashPage,\n    id: entry.id,\n    type: 'fileEntry',\n    ref,\n    hidePreview: true,\n    onDragStart: (e, target: ConnectedDraggable<FileEntry[]>) => {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => getSelectedEntries(),\n  });\n\n  const {droppableProps} = useDroppable<T>({\n    id: entry.id,\n    disabled: isTouchDevice || entry.type !== 'folder',\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: target => folderAcceptsDrop(target, entry),\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop,\n  });\n\n  useMouseSelectable({\n    id: entry.id,\n    ref,\n    onSelected: () => {\n      driveState().selectEntries([entry.id], true);\n    },\n    onDeselected: () => {\n      driveState().deselectEntries([entry.id]);\n    },\n  });\n\n  const itemClassName = clsx(\n    isDragging && 'opacity-20',\n    isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded'\n  );\n\n  return {\n    draggableProps,\n    droppableProps,\n    isDragOver,\n    isDragging,\n    itemClassName,\n    ref,\n  };\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport clsx from 'clsx';\nimport React, {useContext} from 'react';\nimport {driveState} from '../../drive-store';\nimport {TableContext} from '@common/ui/tables/table-context';\n\nexport function FileTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}: RowElementProps<DriveEntry>) {\n  const {isCollapsedMode} = useContext(TableContext);\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLDivElement>(item);\n\n  return (\n    <div\n      className={clsx(className, itemClassName)}\n      ref={ref}\n      {...mergeProps(draggableProps, droppableProps, domProps, {\n        onContextMenu: (e: React.MouseEvent) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (!isCollapsedMode) {\n            if (!driveState().selectedEntries.has(item.id)) {\n              driveState().selectEntries([item.id]);\n            }\n            driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n          }\n        },\n      })}\n    >\n      {children}\n    </div>\n  );\n}\n","import {useCallback} from 'react';\nimport {getPathForFolder, TrashPage} from '../drive-page/drive-page';\nimport {driveState} from '../drive-store';\nimport {DriveEntry} from '../files/drive-entry';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\nexport function useViewItemActionHandler() {\n  const navigate = useNavigate();\n\n  const performViewItemAction = useCallback(\n    (entry: DriveEntry) => {\n      if (entry && entry.type === 'folder') {\n        if (driveState().activePage === TrashPage) {\n          driveState().setActiveActionDialog('trashFolderBlock', [entry]);\n        } else {\n          navigate(getPathForFolder(entry.hash));\n        }\n      } else {\n        const selectedEntries = getSelectedEntries();\n        driveState().setActiveActionDialog(\n          'preview',\n          selectedEntries.length ? selectedEntries : [entry]\n        );\n      }\n    },\n    [navigate]\n  );\n\n  return {performViewItemAction};\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport React, {useMemo} from 'react';\nimport {Table} from '@common/ui/tables/table';\nimport {\n  DriveSortDescriptor,\n  driveState,\n  useDriveStore,\n} from '../../drive-store';\nimport {FileTableRow} from './file-table-row';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {fileTableColumns} from './file-table-columns';\n\ninterface Props {\n  entries: DriveEntry[];\n}\nexport function FileTable({entries}: Props) {\n  const {performViewItemAction} = useViewItemActionHandler();\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n\n  const selectedRows = useMemo(() => {\n    return [...selectedEntries];\n  }, [selectedEntries]);\n\n  return (\n    <Table\n      columns={fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        driveState().setSortDescriptor(value as DriveSortDescriptor);\n      }}\n      onAction={performViewItemAction}\n      selectedRows={selectedRows}\n      selectionStyle=\"highlight\"\n      renderRowAs={FileTableRow}\n      onSelectionChange={value => {\n        driveState().selectEntries(value as number[]);\n      }}\n    />\n  );\n}\n","import React, {useContext} from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {usePointerEvents} from '@common/ui/interactions/use-pointer-events';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {BaseFileGridItem} from './base-file-grid-item';\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\nimport {isCtrlOrShiftPressed} from '@common/utils/keybinds/is-ctrl-or-shift-pressed';\n\ninterface FileGridItemProps {\n  entry: DriveEntry;\n}\nexport function FileGridItem({entry}: FileGridItemProps) {\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\n  const {performViewItemAction} = useViewItemActionHandler();\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLDivElement>(entry);\n\n  const toggleEntry = () => {\n    if (isSelected) {\n      driveState().deselectEntries([entry.id]);\n    } else {\n      driveState().selectEntries([entry.id], true);\n    }\n  };\n\n  const pressHandler = (e: PointerEvent, el: HTMLElement) => {\n    if (isMobileMode) {\n      if (driveState().selectedEntries.size) {\n        toggleEntry();\n      } else {\n        performViewItemAction(entry);\n      }\n    } else {\n      if (isCtrlOrShiftPressed(e)) {\n        toggleEntry();\n      } else {\n        driveState().selectEntries([entry.id]);\n      }\n    }\n  };\n\n  const {domProps: pressProps} = usePointerEvents({\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\n    onPress: pressHandler,\n  });\n\n  const keyboardHandler: React.KeyboardEventHandler = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n      performViewItemAction(entry);\n    }\n  };\n\n  const contextMenuHandler: React.MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n    }\n  };\n\n  return (\n    <BaseFileGridItem\n      {...mergeProps(draggableProps, droppableProps, pressProps, {\n        onKeyDown: createEventHandler(keyboardHandler),\n      })}\n      ref={ref}\n      entry={entry}\n      isSelected={isSelected}\n      isMobileMode={!!isMobileMode}\n      tabIndex={-1}\n      onDoubleClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!isMobileMode) {\n          performViewItemAction(entry);\n        }\n      }}\n      footerAdornment={\n        isMobileMode && (\n          <FooterAdornment entry={entry} isSelected={isSelected} />\n        )\n      }\n      onContextMenu={createEventHandler(contextMenuHandler)}\n      className={itemClassName}\n    />\n  );\n}\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n}\nfunction FooterAdornment({entry, isSelected}: FooterProps) {\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\n\n  if (anySelected) {\n    return <Checkbox className=\"block mr-8\" checked={isSelected} />;\n  }\n\n  return (\n    <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton\n        className=\"text-muted\"\n        onPointerDown={e => {\n          e.stopPropagation();\n        }}\n      >\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>\n  );\n}\n","import {FileGridItem} from './file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface FileGridProps {\n  entries: DriveEntry[];\n}\nexport function FileGrid({entries}: FileGridProps) {\n  return (\n    <div className=\"file-grid-container\">\n      <div className=\"file-grid\">\n        {entries.map(entry => {\n          return <FileGridItem key={entry.id} entry={entry} />;\n        })}\n      </div>\n    </div>\n  );\n}\n","import {driveState, useDriveStore} from '../../drive-store';\nimport {EntriesSortButton} from './entries-sort-button';\nimport React from 'react';\n\ninterface DriveSortButtonProps {\n  isDisabled?: boolean;\n}\nexport function DriveSortButton({isDisabled}: DriveSortButtonProps) {\n  const descriptor = useDriveStore(s => s.sortDescriptor);\n  return (\n    <EntriesSortButton\n      isDisabled={isDisabled}\n      descriptor={descriptor}\n      onChange={value => {\n        driveState().setSortDescriptor(value);\n      }}\n    />\n  );\n}\n","import React, {ReactNode, useContext} from 'react';\nimport {useDriveStore} from './drive-store';\nimport {\n  DrivePage,\n  makeFolderPage,\n  RootFolderPage,\n  SharesPage,\n  TrashPage,\n} from './drive-page/drive-page';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useFolderPath} from './files/queries/use-folder-path';\nimport {EntryActionMenuTrigger} from './entry-actions/entry-action-menu-trigger';\nimport {useActiveWorkspace} from '@common/workspace/active-workspace-id-context';\nimport {ButtonBase} from '@common/ui/buttons/button-base';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\n\ninterface ItemConfig {\n  page: DrivePage;\n  label: MessageDescriptor | string;\n}\n\ninterface PageBreadcrumbsProps {\n  className?: string;\n}\nexport function PageBreadcrumbs({className}: PageBreadcrumbsProps) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const navigate = useNavigate();\n  const page = useDriveStore(s => s.activePage);\n  const folder = page?.folder;\n  const query = useFolderPath({\n    hash: folder?.hash,\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash,\n  });\n  const workspace = useActiveWorkspace();\n  const rootItem = useRootItem();\n  // wait until path, folder and workspace load fully\n  const isLoading =\n    !page ||\n    !workspace ||\n    (page.isFolderPage && !folder) ||\n    query.fetchStatus !== 'idle';\n\n  let content: ReactNode;\n\n  if (isLoading) {\n    content = null;\n  } else {\n    const items: ItemConfig[] = rootItem ? [rootItem] : [];\n\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          page: makeFolderPage(parent),\n          label: parent.name,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb\n        className={className}\n        size={isMobileMode ? 'md' : 'lg'}\n        currentIsClickable\n      >\n        {items.map((item, index) => {\n          const isLast = index === items.length - 1;\n          if (!isLast) {\n            return (\n              <BreadcrumbItem\n                key={item.page.id}\n                onSelected={() => {\n                  navigate(item.page.path);\n                }}\n              >\n                <MixedText value={item.label} />\n              </BreadcrumbItem>\n            );\n          }\n\n          return (\n            <BreadcrumbItem key={item.page.id}>\n              {({isMenuItem}) => {\n                if (\n                  isMenuItem ||\n                  (!item.page.folder && item.page !== TrashPage)\n                )\n                  return <MixedText value={item.label} />;\n                return (\n                  <EntryActionMenuTrigger page={item.page}>\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\n                      <MixedText value={item.label} />\n                      <ArrowDropDownIcon className=\"icon-md text-muted\" />\n                    </ButtonBase>\n                  </EntryActionMenuTrigger>\n                );\n              }}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return content;\n}\n\nfunction useRootItem(): ItemConfig | null {\n  const page = useDriveStore(s => s.activePage);\n  const workspace = useActiveWorkspace();\n  const {user} = useAuth();\n\n  if (!page) return null;\n\n  // in workspace\n  if (workspace && !workspace.default) {\n    if (\n      page?.isFolderPage &&\n      (page?.id === RootFolderPage.id ||\n        page.folder?.workspace_id === workspace.id)\n    ) {\n      return {label: workspace.name, page: RootFolderPage};\n    }\n  }\n\n  if (page?.isFolderPage) {\n    const owner = page.folder?.users.find(u => u.owns_entry);\n    // inside shared folder\n    if (owner?.id !== user?.id) {\n      return {label: SharesPage.label, page: SharesPage};\n    }\n    // if folder is currently active, root item will always be root folder page\n    return {label: RootFolderPage.label, page: RootFolderPage};\n  }\n\n  // if folder page is not active, we are already at the root\n  return {label: page.label, page};\n}\n","import React, {ReactNode, useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\n\nexport interface InfiniteScrollSentinelProps {\n  loaderMarginTop?: string;\n  children?: ReactNode;\n  loadMoreExtraContent?: ReactNode;\n  query: UseInfiniteQueryResult;\n  style?: React.CSSProperties;\n  className?: string;\n  variant?: 'infiniteScroll' | 'loadMore';\n  size?: 'sm' | 'md';\n}\nexport function InfiniteScrollSentinel({\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\n  children,\n  loaderMarginTop = 'mt-24',\n  style,\n  className,\n  variant: _variant = 'infiniteScroll',\n  loadMoreExtraContent,\n  size = 'md',\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const isLoading = isFetchingNextPage || isInitialLoading;\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\n  const innerVariant =\n    _variant === 'loadMore' && loadMoreClickCount < 3\n      ? 'loadMore'\n      : 'infiniteScroll';\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl || innerVariant === 'loadMore') return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage && !isLoading) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\n\n  let content: ReactNode;\n\n  if (children) {\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\n    content = isFetchingNextPage ? children : null;\n  } else if (innerVariant === 'loadMore') {\n    content = !isInitialLoading && hasNextPage && (\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\n        {loadMoreExtraContent}\n        <Button\n          size={size === 'md' ? 'sm' : 'xs'}\n          className={clsx(\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112'\n          )}\n          variant=\"outline\"\n          color=\"primary\"\n          onClick={() => {\n            fetchNextPage();\n            setLoadMoreClickCount(loadMoreClickCount + 1);\n          }}\n          disabled={isLoading}\n        >\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\n            <Trans message=\"Load all\" />\n          ) : (\n            <Trans message=\"Show more\" />\n          )}\n        </Button>\n      </div>\n    );\n  } else {\n    content = (\n      <AnimatePresence>\n        {isFetchingNextPage && (\n          <m.div\n            className={clsx('flex justify-center w-full', loaderMarginTop)}\n            {...opacityAnimation}\n          >\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\n          </m.div>\n        )}\n      </AnimatePresence>\n    );\n  }\n\n  return (\n    <div\n      style={style}\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\n      role=\"presentation\"\n    >\n      <div ref={sentinelRef} aria-hidden />\n      {content}\n    </div>\n  );\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\n      >\n        <Trans message=\"Drop files to upload them to this folder.\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import React, {\n  KeyboardEventHandler,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport {usePaginatedEntries} from '../files/queries/use-paginated-entries';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {SearchFilterList} from '../search/search-filter-list';\nimport {Trans} from '@common/i18n/trans';\nimport {useMouseSelectionBox} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {mergeProps} from '@react-aria/utils';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {DriveContextMenu} from '../files/drive-context-menu';\nimport {FileTable} from './file-table/file-table';\nimport {FileGrid} from './file-grid/file-grid';\nimport {DriveSortButton} from '../layout/sorting/drive-sort-button';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useEntries} from '../files/queries/use-entries';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {DropTargetMask} from '../drop-target-mask';\nimport {useSearchParams} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {MixedDraggable} from '@common/ui/interactions/dnd/use-draggable';\nimport {isCtrlKeyPressed} from '@common/utils/keybinds/is-ctrl-key-pressed';\nimport {useDeleteEntries} from '@app/drive/files/queries/use-delete-entries';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\nimport {getSelectedEntries} from '@app/drive/files/use-selected-entries';\n\ninterface FileViewProps {\n  className?: string;\n}\nexport function FileView({className}: FileViewProps) {\n  const [params] = useSearchParams();\n  const isSearchingOrFiltering =\n    !!params.get('query') || !!params.get('filters');\n  const containerRef = useRef<HTMLDivElement>(null);\n  const query = usePaginatedEntries();\n  const entries = useEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const viewMode = useDriveStore(s => s.viewMode);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {containerProps, boxProps} = useMouseSelectionBox({\n    containerRef,\n    onPointerDown: e => {\n      if (!(e.target as HTMLElement).closest('.entry-action-list')) {\n        driveState().deselectEntries('all');\n      }\n    },\n  });\n\n  const {droppableProps} = useDroppable({\n    id: 'driveRoot',\n    ref: containerRef,\n    types: ['nativeFile'],\n    disabled: !activePage?.canUpload,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: async (draggable: MixedDraggable) => {\n      if (draggable.type === 'nativeFile') {\n        uploadFiles(await draggable.getData());\n      }\n    },\n  });\n\n  if (!activePage) return null;\n\n  let content: ReactNode;\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\n    const noContentMessage = activePage.noContentMessage(\n      isSearchingOrFiltering\n    );\n    content = (\n      <IllustratedMessage\n        className=\"mt-40\"\n        image={<SvgImage src={noContentMessage.image} />}\n        title={<Trans {...noContentMessage.title} />}\n        description={<Trans {...noContentMessage.description} />}\n      />\n    );\n  } else if (!query.isLoading) {\n    content =\n      viewMode === 'list' ? (\n        <FileTable entries={entries} />\n      ) : (\n        <FileGrid entries={entries} />\n      );\n  }\n\n  const handleContextMenu: MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n  };\n\n  const handleKeybinds: KeyboardEventHandler = e => {\n    if (e.key === 'a' && isCtrlKeyPressed(e)) {\n      e.preventDefault();\n      e.stopPropagation();\n      driveState().selectEntries(entries.map(entry => entry.id));\n    }\n    if (e.key === 'Delete') {\n      e.preventDefault();\n      e.stopPropagation();\n      if (driveState().selectedEntries.size && !deleteEntries.isLoading) {\n        if (activePage === TrashPage) {\n          driveState().setActiveActionDialog(\n            'confirmAndDeleteForever',\n            getSelectedEntries()\n          );\n        } else {\n          deleteEntries.mutate({\n            entryIds: [...driveState().selectedEntries],\n            deleteForever: activePage === TrashPage,\n          });\n          driveState().selectEntries([]);\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx('relative outline-none', className)}\n      tabIndex={-1}\n      {...mergeProps(containerProps, droppableProps, {\n        onKeyDown: createEventHandler(handleKeybinds),\n      })}\n      onContextMenu={handleContextMenu}\n    >\n      <div className=\"flex flex-col relative pt-10 min-h-full\">\n        {isMobileMode ? (\n          <PageBreadcrumbs className=\"px-14 mb-10\" />\n        ) : (\n          <Toolbar />\n        )}\n        <SearchFilterList />\n        <div className=\"px-18 md:px-24 pb-18 flex-auto relative\">\n          <AdHost slot=\"drive\" className=\"mb-24\" />\n          {content}\n          <InfiniteScrollSentinel query={query} />\n        </div>\n        <div\n          {...boxProps}\n          className=\"absolute bg-primary-light/20 border border-primary-light z-10 pointer-events-none shadow-md left-0 top-0 hidden\"\n        />\n        <DriveContextMenu />\n        <DropTargetMask isVisible={isDragOver} />\n      </div>\n    </div>\n  );\n}\n\nfunction Toolbar() {\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <div className=\"px-10 md:px-18 my-10 flex items-center gap-40 justify-between text-muted min-h-42\">\n      <DriveSortButton isDisabled={activePage?.disableSort} />\n      <EntryActionList className=\"text-muted\" />\n    </div>\n  );\n}\n","import {\n  ComponentPropsWithoutRef,\n  CSSProperties,\n  memo,\n  ReactElement,\n  useMemo,\n  useState,\n} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {ErrorIcon} from '@common/icons/material/Error';\nimport {WarningIcon} from '@common/icons/material/Warning';\nimport {message} from '@common/i18n/message';\n\ninterface UploadQueueProps {\n  file: UploadedFile;\n  style: CSSProperties;\n}\nexport const UploadQueueItem = memo(({file, style}: UploadQueueProps) => {\n  return (\n    <div\n      className=\"p-10 flex items-center gap-14 w-full absolute top-0 left-0\"\n      style={style}\n    >\n      <div className=\"shrink-0 border rounded p-8\">\n        <FileTypeIcon className=\"w-22 h-22\" mime={file.mime} />\n      </div>\n      <div className=\"flex-auto min-w-0 pr-10\">\n        <div className=\"mb-2 flex items-center min-w-0 gap-10\">\n          <div className=\"flex-auto font-medium whitespace-nowrap min-w-0 overflow-hidden overflow-ellipsis\">\n            {file.name}\n          </div>\n        </div>\n        <SizeInfo file={file} />\n      </div>\n      <div className=\"mr-10\">\n        <FileStatus file={file} />\n      </div>\n    </div>\n  );\n});\n\ninterface SizeInfoProps {\n  file: UploadedFile;\n}\nfunction SizeInfo({file}: SizeInfoProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded]\n  );\n\n  let statusMessage: ReactElement;\n  if (fileUpload?.status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (fileUpload?.status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (fileUpload?.status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return <div className=\"text-muted text-xs\">{statusMessage}</div>;\n}\n\ninterface FileStatusProps {\n  file: UploadedFile;\n}\nfunction FileStatus({file}: FileStatusProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const percentage = fileUpload?.percentage || 0;\n  const status = fileUpload?.status;\n  const errorMessage = fileUpload?.errorMessage;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const abortButton = (\n    <IconButton\n      size=\"sm\"\n      onClick={() => {\n        abortUpload(file.id);\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n\n  const progressButton = (\n    <ProgressCircle aria-label=\"Upload progress\" size=\"sm\" value={percentage} />\n  );\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"md\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"md\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\n      </AnimatedStatus>\n    );\n  } else {\n    statusButton = (\n      <AnimatedStatus\n        onPointerEnter={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(true);\n          }\n        }}\n        onPointerLeave={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(false);\n          }\n        }}\n      >\n        {isHovered ? abortButton : progressButton}\n      </AnimatedStatus>\n    );\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {ReactElement, useRef} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {UploadQueueItem} from './upload-queue-item';\nimport {useVirtualizer} from '@tanstack/react-virtual';\n\nexport function UploadQueue() {\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <m.div\n          key=\"upload-queue\"\n          className=\"shadow-xl rounded fixed bottom-16 right-16 bg z-modal border w-375 text-sm\"\n          initial={{y: '100%', opacity: 0}}\n          animate={{y: 0, opacity: 1}}\n          exit={{y: '100%', opacity: 0}}\n        >\n          <Header />\n          <UploadList />\n        </m.div>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport function Header() {\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\n  const completedUploadsCount = useFileUploadStore(\n    s => s.completedUploadsCount\n  );\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n\n  let message: ReactElement;\n  if (inProgressUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploading :count files\"\n        values={{count: inProgressUploadsCount}}\n      />\n    );\n  } else if (completedUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploaded :count files\"\n        values={{count: completedUploadsCount}}\n      />\n    );\n  } else {\n    message = <Trans message=\"No active uploads\" />;\n  }\n\n  // only allow closing upload queue if there are no active uploads\n  return (\n    <div className=\"px-10 py-4 bg-alt flex items-center gap-10 justify-between border-b min-h-[45px]\">\n      {message}\n      {inProgressUploadsCount === 0 ? (\n        <IconButton\n          size=\"sm\"\n          onClick={() => {\n            driveState().setUploadQueueIsOpen(false);\n            // wait for upload queue panel animation to complete, then clear inactive uploads\n            setTimeout(() => {\n              clearInactive();\n            }, 200);\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : undefined}\n    </div>\n  );\n}\n\nfunction UploadList() {\n  const uploads = useFileUploadStore(s => s.fileUploads);\n  const uploadsArray = [...uploads.values()];\n  const ref = useRef<HTMLDivElement>(null);\n  const virtualizer = useVirtualizer({\n    count: uploads.size,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 60,\n    overscan: 4,\n  });\n\n  return (\n    <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\n      <div\n        className=\"relative w-full\"\n        style={{\n          height: `${virtualizer.getTotalSize()}px`,\n        }}\n      >\n        {virtualizer.getVirtualItems().map(virtualItem => {\n          const upload = uploadsArray[virtualItem.index];\n          return (\n            <UploadQueueItem\n              style={{\n                height: `${virtualItem.size}px`,\n                transform: `translateY(${virtualItem.start}px)`,\n              }}\n              key={upload.file.id}\n              file={upload.file}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__6b065fb0__\"","import React, {ReactNode, useContext} from 'react';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\n\ninterface HeaderProps {\n  entryType: string;\n  entryName: ReactNode;\n}\nexport function DetailsSidebarHeader({entryType, entryName}: HeaderProps) {\n  const {setRightSidenavStatus} = useContext(DashboardLayoutContext);\n  return (\n    <div className=\"flex items-center gap-16 text-text-main mb-38\">\n      <FileTypeIcon className=\"w-24 h-24\" type={entryType} />\n      <div className=\"text-xl font-normal text-ellipsis flex-auto mr-auto min-w-0 break-words\">\n        {entryName}\n      </div>\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0\"\n        onClick={() => {\n          setRightSidenavStatus('closed');\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: ReactNode;\n  margin?: string;\n}\nexport function DetailsSidebarSectionHeader({\n  children,\n  margin = 'mb-20',\n}: Props) {\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\nimport {ChipValue} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {invalidateEntryQueries} from '@app/drive/drive-query-keys';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  entry: DriveEntry;\n  tags: ChipValue[];\n}\n\nexport function useSyncEntryTags() {\n  return useMutation((props: Payload) => createComment(props), {\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => showHttpErrorToast(err, message('Failed to save tags.')),\n  });\n}\n\nfunction createComment({entry, tags}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entry.id}/sync-tags`, {\n      tags: tags.map(tag => tag.name),\n    })\n    .then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\nexport function useFileEntryTags(query?: string) {\n  return useQuery(['file-entry-tags', query], () => fetchTags(query), {\n    keepPreviousData: true,\n  });\n}\n\nasync function fetchTags(query?: string) {\n  return apiClient\n    .get<Response>('file-entry-tags', {params: {query}})\n    .then(r => r.data);\n}\n","import {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {\n  ChipField,\n  ChipValue,\n} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport React, {useState} from 'react';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {useSyncEntryTags} from '@app/drive/details-sidebar/requests/use-sync-entry-tags';\nimport {useFileEntryTags} from '@app/drive/details-sidebar/requests/use-file-entry-tags';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Props {\n  entry: DriveEntry;\n}\nexport function DetailsSidebarTags({entry}: Props) {\n  // use key={entry.id} to force re-render tag chip field when entry changes\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\n        <Trans message=\"Tags\" />\n      </DetailsSidebarSectionHeader>\n      <TagChipField entry={entry} key={entry.id} />\n    </div>\n  );\n}\n\nfunction TagChipField({entry}: Props) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const syncTags = useSyncEntryTags();\n  const [inputValue, setInputValue] = useState('');\n  const [value, setValue] = useState<ChipValue[]>(entry.tags || []);\n  const {data, isLoading} = useFileEntryTags(inputValue);\n\n  const handleChange = (newTags: ChipValue[]) => {\n    setValue(newTags);\n    if (!syncTags.isLoading) {\n      syncTags.mutate({tags: newTags, entry});\n    }\n  };\n\n  return (\n    <ChipField\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={trans(message('+Add tag'))}\n      isLoading={isLoading}\n      chipSize=\"sm\"\n      value={value}\n      onChange={handleChange}\n      onChipClick={chip => {\n        navigate(`/drive/search?query=${chip.name}`);\n      }}\n    >\n      {data?.results.map(result => (\n        <Item value={result} key={result.id}>\n          {result.name}\n        </Item>\n      ))}\n    </ChipField>\n  );\n}\n","import {useSelectedEntryParent} from '@app/drive/files/use-selected-entries';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport React, {ReactNode, useMemo} from 'react';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {\n  getPathForFolder,\n  RootFolderPage,\n} from '@app/drive/drive-page/drive-page';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {GroupsIcon} from '@common/icons/material/Groups';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {driveState} from '@app/drive/drive-store';\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\nimport {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport {DetailsSidebarTags} from '@app/drive/details-sidebar/details-sidebar-tags';\n\ninterface EntryPropertiesProps {\n  entry: DriveEntry;\n}\nexport function DetailsSidebarProperties({entry}: EntryPropertiesProps) {\n  return (\n    <div>\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\n      {entry.type === 'image' && (\n        <FileThumbnail className=\"mb-20\" file={entry} />\n      )}\n      <div>\n        <DetailsSidebarSectionHeader>\n          <Trans message=\"Who has access\" />\n        </DetailsSidebarSectionHeader>\n        <div className=\"flex items-center gap-14\">\n          {entry.workspace_id ? (\n            <div className=\"rounded-full border w-32 h-32 flex items-center justify-center\">\n              <GroupsIcon className=\"icon-md\" />\n            </div>\n          ) : null}\n          {entry.users.map(user => (\n            <Tooltip label={user.display_name} key={user.id}>\n              <Avatar src={user.avatar} size=\"md\" circle />\n            </Tooltip>\n          ))}\n        </div>\n        {entry.permissions['files.update'] && (\n          <Button\n            className=\"block mt-20\"\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              driveState().setActiveActionDialog('share', [entry]);\n            }}\n          >\n            <Trans message=\"Manage Access\" />\n          </Button>\n        )}\n      </div>\n      <PropertyList entry={entry} />\n      <DetailsSidebarTags entry={entry} />\n    </div>\n  );\n}\n\ninterface Props {\n  entry: DriveEntry;\n}\nfunction PropertyList({entry}: Props) {\n  const parent = useSelectedEntryParent();\n  const navigate = useNavigate();\n  const owner = entry.users.find(user => user.owns_entry);\n  const prettySize = useMemo(\n    () => prettyBytes(entry.file_size),\n    [entry.file_size]\n  );\n\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader>\n        <Trans message=\"Properties\" />\n      </DetailsSidebarSectionHeader>\n      <PropertyItem\n        label={<Trans message=\"Type\" />}\n        value={\n          <span className=\"capitalize\">\n            <Trans message={entry.type} />\n          </span>\n        }\n      />\n      <PropertyItem\n        label={<Trans message=\"Size\" />}\n        value={entry.file_size ? prettySize : '-'}\n      />\n      <PropertyItem\n        label={<Trans message=\"Location\" />}\n        value={\n          <Button\n            variant=\"link\"\n            startIcon={<FolderIcon />}\n            onClick={() => {\n              navigate(\n                parent ? getPathForFolder(parent.hash) : RootFolderPage.path\n              );\n            }}\n          >\n            {parent ? parent.name : <Trans message=\"Root\" />}\n          </Button>\n        }\n      />\n      {owner && (\n        <PropertyItem\n          label={<Trans message=\"Owner\" />}\n          value={owner.display_name}\n        />\n      )}\n      <PropertyItem\n        label={<Trans message=\"Modified\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n      <PropertyItem\n        label={<Trans message=\"Created\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n    </div>\n  );\n}\n\ninterface PropertyItemProps {\n  label: ReactNode;\n  value: ReactNode;\n}\nfunction PropertyItem({label, value}: PropertyItemProps) {\n  return (\n    <div className=\"flex items-center mb-14\">\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {useSelectedEntry} from '../files/use-selected-entries';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {Trans} from '@common/i18n/trans';\nimport detailedExamination from './detailed-examination.svg';\nimport clsx from 'clsx';\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\nimport {DetailsSidebarProperties} from '@app/drive/details-sidebar/details-sidebar-properties';\n\ninterface DetailsSidebarProps {\n  className?: string;\n}\nexport function DetailsSidebar({className}: DetailsSidebarProps) {\n  const selectedEntry = useSelectedEntry();\n  return (\n    <div\n      className={clsx(\n        className,\n        'bg p-18 text-sm text-muted border-l h-full overflow-y-auto'\n      )}\n    >\n      {selectedEntry ? (\n        <DetailsSidebarProperties entry={selectedEntry} />\n      ) : (\n        <NothingSelected />\n      )}\n    </div>\n  );\n}\n\nfunction NothingSelected() {\n  return (\n    <Fragment>\n      <DetailsSidebarHeader\n        entryType=\"folder\"\n        entryName={<Trans message=\"All files\" />}\n      />\n      <IllustratedMessage\n        image={<SvgImage src={detailedExamination} />}\n        description={\n          <Trans message=\"Select file or folder to see details here\" />\n        }\n      />\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  fileEntry: FileEntry;\n}\n\ninterface Payload {\n  entryId: number;\n  name: string;\n  initialName: string;\n}\n\nexport function useRenameEntry(form: UseFormReturn<any>) {\n  return useMutation((payload: Payload) => renameEntry(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message(':oldName renamed to :newName', {\n          values: {oldName: p.initialName, newName: r.fileEntry.name},\n        })\n      );\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction renameEntry({entryId, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .put(`file-entries/${entryId}`, payload)\n    .then(response => response.data);\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useRenameEntry} from '../queries/use-rename-entry';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {Form} from '@common/ui/forms/form';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../drive-entry';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface RenameEntryDialogProps {\n  entries: DriveEntry[];\n}\nexport function RenameEntryDialog({entries}: RenameEntryDialogProps) {\n  const {close, formId} = useDialogContext();\n  const initialName = entries[0]?.name;\n  const form = useForm({defaultValues: {name: initialName}});\n  const renameEntry = useRenameEntry(form);\n\n  const onSubmit = (e: Required<FormValue>) => {\n    renameEntry.mutate(\n      {\n        entryId: entries[0].id,\n        name: e.name,\n        initialName,\n      },\n      {onSuccess: close}\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder=\"Enter a name...\"\n            aria-label=\"Entry name\"\n            autoFocus\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={renameEntry.isLoading || !form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveFolder} from '../drive-entry';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  folder: DriveFolder;\n}\n\ninterface CreateFolderProps {\n  name: string;\n  parentId?: number | null;\n}\n\nfunction createFolder({name, parentId}: CreateFolderProps): Promise<Response> {\n  return apiClient\n    .post('folders', {\n      name,\n      parentId: parentId === 0 ? null : parentId,\n    })\n    .then(response => response.data);\n}\n\nexport function useCreateFolder(form: UseFormReturn<any>) {\n  return useMutation(\n    ({name, parentId}: CreateFolderProps) => {\n      return createFolder({name, parentId});\n    },\n    {\n      onSuccess: () => invalidateEntryQueries(),\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {toast} from '@common/ui/toast/toast';\nimport {Form} from '@common/ui/forms/form';\nimport {useCreateFolder} from '../queries/create-folder';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface NewFolderDialogProps {\n  parentId: number;\n}\nexport function NewFolderDialog({parentId}: NewFolderDialogProps) {\n  const {close, formId} = useDialogContext();\n  const {trans} = useTrans();\n  const form = useForm({\n    defaultValues: {\n      name: trans({message: 'Untitled Folder'}),\n    },\n  });\n  const createFolder = useCreateFolder(form);\n\n  const onSubmit = (value: Required<FormValue>) => {\n    createFolder.mutate(\n      {...value, parentId},\n      {\n        onSuccess: response => {\n          close(response.folder);\n          toast(message('Folder created'));\n        },\n      }\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"New Folder\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder={trans({\n              message: 'Enter a name...',\n            })}\n            aria-label=\"Entry name\"\n            autoFocus\n            autoSelectText\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createFolder.isLoading}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\nimport {DriveEntry} from '../drive-entry';\nimport {createElement, useState} from 'react';\nimport {useShareAction} from '../../entry-actions/use-entry-actions';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {useEntries} from '../queries/use-entries';\n\ninterface EntryPreviewDialogProps {\n  selectedEntry: DriveEntry;\n}\nexport function EntryPreviewDialog({selectedEntry}: EntryPreviewDialogProps) {\n  const files = useEntries().filter(entry => entry.type !== 'folder');\n  const defaultActiveIndex = files.findIndex(\n    file => file.id === selectedEntry?.id\n  );\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\n  return (\n    <FilePreviewDialog\n      allowDownload={selectedEntry.permissions['files.download']}\n      headerActionsLeft={\n        <DriveActions activeIndex={activeIndex} entries={files} />\n      }\n      activeIndex={activeIndex}\n      onActiveIndexChange={setActiveIndex}\n      entries={files}\n    />\n  );\n}\n\ninterface DriveActionsProps {\n  activeIndex: number;\n  entries: DriveEntry[];\n}\nfunction DriveActions({activeIndex, entries}: DriveActionsProps) {\n  const selectedEntry = entries[activeIndex];\n  const share = useShareAction([selectedEntry]);\n  const isMobile = useIsMobileMediaQuery();\n  if (!selectedEntry || !share) return null;\n\n  if (isMobile) {\n    return (\n      <IconButton\n        onClick={() => {\n          share.execute();\n        }}\n      >\n        {createElement(share.icon)}\n      </IconButton>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"text\"\n      startIcon={createElement(share.icon)}\n      onClick={() => {\n        share.execute();\n      }}\n    >\n      <Trans {...share.label} />\n    </Button>\n  );\n}\n","import axios from 'axios';\nimport {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nexport interface ShareEntryPayload {\n  emails: string[];\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nfunction shareEntry({\n  entryId,\n  ...payload\n}: ShareEntryPayload): Promise<BackendResponse> {\n  return apiClient\n    .post(`file-entries/${entryId}/share`, payload)\n    .then(response => response.data);\n}\n\nexport function useShareEntry() {\n  return useMutation((payload: ShareEntryPayload) => shareEntry(payload), {\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => {\n      if (axios.isAxiosError(err) && err.response) {\n        const response = err.response.data as BackendErrorResponse;\n        if (response.errors?.emails) {\n          toast.danger(response.errors?.emails[0]);\n        } else {\n          showHttpErrorToast(err);\n        }\n      }\n    },\n  });\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport interface DriveEntry extends FileEntry {\n  users: DriveEntryUser[];\n  workspace_id?: number;\n  permissions: {\n    'files.create': boolean;\n    'files.update': boolean;\n    'files.delete': boolean;\n    'files.download': boolean;\n  };\n}\n\nexport interface DriveFolder extends DriveEntry {\n  type: 'folder';\n  model_type?: string;\n}\n\nexport interface DriveEntryUser {\n  id: number;\n  email: string;\n  display_name: string;\n  avatar?: string;\n  owns_entry: boolean;\n  entry_permissions: DriveEntryPermissions;\n}\n\nexport interface DriveEntryPermissions {\n  edit?: boolean;\n  view?: boolean;\n  download?: boolean;\n}\n\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\n  edit: true,\n  view: true,\n  download: true,\n};\n","import {Button} from '@common/ui/buttons/button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {\n  DRIVE_ENTRY_FULL_PERMISSIONS,\n  DriveEntryPermissions,\n  DriveEntryUser,\n} from '../files/drive-entry';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {message} from '@common/i18n/message';\nimport {Trans} from '@common/i18n/trans';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport interface PermissionSelectorItem {\n  key: keyof DriveEntryPermissions;\n  value: DriveEntryPermissions;\n  label: MessageDescriptor;\n}\n\nexport const PermissionSelectorItems: PermissionSelectorItem[] = [\n  {\n    key: 'view',\n    value: {view: true},\n    label: message('Can view'),\n  },\n  {\n    key: 'download',\n    value: {view: true, download: true},\n    label: message('Can Download'),\n  },\n  {\n    key: 'edit',\n    value: DRIVE_ENTRY_FULL_PERMISSIONS,\n    label: message('Can edit'),\n  },\n];\n\ninterface Props {\n  onChange: (value: PermissionSelectorItem) => void;\n  value: PermissionSelectorItem;\n}\nexport function PermissionSelector({value, onChange}: Props) {\n  return (\n    <MenuTrigger\n      selectedValue={value.key}\n      selectionMode=\"single\"\n      onSelectionChange={key => {\n        if (key !== value.key) {\n          onChange(PermissionSelectorItems.find(p => p.key === key)!);\n        }\n      }}\n    >\n      <Button\n        variant=\"flat\"\n        color=\"chip\"\n        size=\"xs\"\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans {...value.label} />\n      </Button>\n      <Menu>\n        {PermissionSelectorItems.map(item => {\n          return (\n            <MenuItem key={item.key} value={item.key}>\n              <Trans {...item.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nexport function getPermissionItemForUser(\n  user: DriveEntryUser\n): PermissionSelectorItem {\n  const {download, edit} = user.entry_permissions;\n  if (edit) {\n    return PermissionSelectorItems.find(item => item.key === 'edit')!;\n  }\n  if (download) {\n    return PermissionSelectorItems.find(item => item.key === 'download')!;\n  }\n  return PermissionSelectorItems.find(item => item.key === 'view')!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nexport interface ChangePermissionsPayload {\n  userId: number;\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nexport function useChangePermission() {\n  return useMutation(\n    (payload: ChangePermissionsPayload) => changePermission(payload),\n    {\n      onSuccess: () => {\n        invalidateEntryQueries();\n        toast(message('Updated user permissions'));\n      },\n      onError: err =>\n        showHttpErrorToast(err, message('Could not update permissions')),\n    }\n  );\n}\n\nfunction changePermission({\n  entryId,\n  ...payload\n}: ChangePermissionsPayload): Promise<BackendResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/change-permissions`, payload)\n    .then(response => response.data);\n}\n","import {Avatar, AvatarProps} from '@common/ui/images/avatar';\nimport {User} from '@common/auth/user';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\n\ninterface UserAvatarProps extends Omit<AvatarProps, 'label' | 'src' | 'link'> {\n  user?: User;\n}\nexport function UserAvatar({user, ...props}: UserAvatarProps) {\n  const {auth} = useContext(SiteConfigContext);\n  return (\n    <Avatar\n      {...props}\n      label={user?.display_name}\n      src={user?.avatar}\n      link={user?.id && auth.getUserProfileLink?.(user)}\n    />\n  );\n}\n","import {useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {DriveEntry, DriveEntryUser} from '../files/drive-entry';\nimport {\n  getPermissionItemForUser,\n  PermissionSelector,\n  PermissionSelectorItem,\n} from './permission-selector';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useChangePermission} from './queries/use-change-permission';\nimport {useUnshareEntries} from './queries/use-unshare-entries';\nimport {Trans} from '@common/i18n/trans';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\n\ninterface MemberListProps {\n  className?: string;\n  entry: DriveEntry;\n}\n\nexport function MemberList({className, entry}: MemberListProps) {\n  if (!entry) return null;\n\n  const users = entry.users;\n\n  return (\n    <div className={clsx(className, 'overflow-hidden')}>\n      <div className=\"mb-14 text-sm\">\n        <Trans message=\"Who has access\" />\n      </div>\n      <AnimatePresence initial={false}>\n        {users.map(user => {\n          return <MemberListItem key={user.id} user={user} entry={entry} />;\n        })}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction MemberListItem({user, entry}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"flex items-center text-sm gap-14 mb-20\"\n      key={user.id}\n    >\n      <UserAvatar user={user as any} circle size=\"w-44 h-44\" />\n      <div>\n        <div>{user.display_name}</div>\n        <div className=\"text-muted\">{user.email}</div>\n      </div>\n      <div className=\"ml-auto\">\n        {user.owns_entry ? (\n          <span className=\"text-muted\">\n            <Trans message=\"Owner\" />\n          </span>\n        ) : (\n          <ActionButtons user={user} entry={entry} />\n        )}\n      </div>\n    </m.div>\n  );\n}\n\ninterface ActionButtonsProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction ActionButtons({user, entry}: ActionButtonsProps) {\n  const changePermissions = useChangePermission();\n  const unshareEntry = useUnshareEntries();\n  const [activePermission, setActivePermission] =\n    useState<PermissionSelectorItem>(() => {\n      return getPermissionItemForUser(user);\n    });\n\n  return (\n    <div className=\"flex items-center gap-10\">\n      <PermissionSelector\n        onChange={item => {\n          changePermissions.mutate({\n            userId: user.id,\n            permissions: item.value,\n            entryId: entry.id,\n          });\n          setActivePermission(item);\n        }}\n        value={activePermission}\n      />\n      <IconButton\n        onClick={() => {\n          unshareEntry.mutate(\n            {userId: user.id, entryIds: [entry.id]},\n            {\n              onSuccess: () => {\n                toast(message('Member removed'));\n              },\n              onError: err =>\n                showHttpErrorToast(err, message('Could not remove member')),\n            }\n          );\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import {useState} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {useShareEntry} from './queries/use-share-entry';\nimport {\n  PermissionSelector,\n  PermissionSelectorItem,\n  PermissionSelectorItems,\n} from './permission-selector';\nimport {MemberList} from './member-list';\nimport {\n  ChipField,\n  ChipValue,\n} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {isEmail} from '@common/utils/string/is-email';\nimport {USER_MODEL} from '@common/auth/user';\nimport {useNormalizedModels} from '@common/users/queries/use-normalized-models';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface SharePanelProps {\n  className?: string;\n  entry: DriveEntry;\n}\nexport function SharePanel({className, entry}: SharePanelProps) {\n  const {trans} = useTrans();\n  const {share} = useSettings();\n  const shareEntry = useShareEntry();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const [isSharing, setIsSharing] = useState(false);\n  const [selectedPermission, setSelectedPermission] =\n    useState<PermissionSelectorItem>(PermissionSelectorItems[0]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const [inputValue, setInputValue] = useState('');\n  const query = useNormalizedModels(\n    USER_MODEL,\n    {perPage: 7, query: inputValue},\n    {enabled: share.suggest_emails}\n  );\n\n  // show user's email, instead of name in the chip\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n\n  return (\n    <div className={className}>\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        isAsync\n        isLoading={query.fetchStatus === 'fetching'}\n        inputValue={inputValue}\n        onInputValueChange={setInputValue}\n        suggestions={query.data?.results}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      >\n        {user => (\n          <Item\n            value={user.id}\n            startIcon={<Avatar circle src={user.image} alt=\"\" />}\n            description={user.description}\n          >\n            {user.name}\n          </Item>\n        )}\n      </ChipField>\n      <div className=\"flex items-center gap-14 justify-between mt-14\">\n        <PermissionSelector\n          onChange={setSelectedPermission}\n          value={selectedPermission}\n        />\n        {chips.length ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={isSharing || !allEmailsValid}\n            onClick={() => {\n              setIsSharing(true);\n              shareEntry.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  permissions: selectedPermission.value,\n                  entryId: entry.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                  onSettled: () => {\n                    setIsSharing(false);\n                  },\n                }\n              );\n            }}\n          >\n            <Trans message=\"Share\" />\n          </Button>\n        ) : null}\n      </div>\n      <MemberList className=\"mt-30\" entry={entry} />\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {ShareableLink} from '../shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchShareableLinkResponse extends BackendResponse {\n  link: ShareableLink | null;\n}\n\nexport function useEntryShareableLink(entryId: number) {\n  return useQuery(\n    DriveQueryKeys.fetchEntryShareableLink(entryId!),\n    () => fetchLinkByEntryId(entryId!),\n    {enabled: !!entryId}\n  );\n}\n\nfunction fetchLinkByEntryId(\n  entryId: number\n): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .get(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface DeleteLinkParams {\n  entryId: number;\n}\n\nfunction deleteShareableLink({\n  entryId,\n}: DeleteLinkParams): Promise<BackendResponse> {\n  return apiClient\n    .delete(`file-entries/${entryId}/shareable-link`)\n    .then(r => r.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useDeleteShareableLink() {\n  return useMutation(({entryId}: Payload) => deleteShareableLink({entryId}), {\n    onSuccess: (response, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        {...response, link: null}\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not delete link')),\n  });\n}\n","export function randomString(length: number = 36) {\n  let random = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i += 1) {\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return random;\n}\n","import useClipboard from 'react-use-clipboard';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {useCreateShareableLink} from '../../shareable-link/queries/create-shareable-link';\nimport {useDeleteShareableLink} from '../../shareable-link/queries/use-delete-shareable-link';\nimport {Button} from '@common/ui/buttons/button';\nimport {ShareableLink} from '../../shareable-link/shareable-link';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {randomString} from '@common/utils/string/random-string';\nimport {Trans} from '@common/i18n/trans';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useActiveDialogEntry} from '../../drive-store';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface ShareableLinkPanelProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusInput?: boolean;\n}\nexport function ShareableLinkPanel({\n  setActivePanel,\n  entry,\n  focusInput,\n}: ShareableLinkPanelProps) {\n  const query = useEntryShareableLink(entry.id);\n  const linkExists = !!query.data?.link;\n  const createLink = useCreateShareableLink();\n  const deleteLink = useDeleteShareableLink();\n  const isLoading =\n    query.isLoading || createLink.isLoading || deleteLink.isLoading;\n  return (\n    <div>\n      <div className=\"mb-10\">\n        <Trans message=\"Share link\" />\n      </div>\n      <div className=\"flex items-center gap-14 justify-between pb-4 px-2\">\n        <Switch\n          checked={linkExists}\n          disabled={isLoading}\n          onChange={() => {\n            if (linkExists) {\n              deleteLink.mutate({entryId: entry.id});\n            } else {\n              createLink.mutate({entryId: entry.id});\n            }\n          }}\n        >\n          {linkExists ? (\n            <Trans message=\"Shareable link is created\" />\n          ) : (\n            <Trans message=\"Create shareable link\" />\n          )}\n        </Switch>\n        {linkExists && (\n          <Button\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              setActivePanel('linkSettings');\n            }}\n          >\n            <Trans message=\"Link settings\" />\n          </Button>\n        )}\n      </div>\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\n    </div>\n  );\n}\n\ninterface ShareableLinkInputProps {\n  link?: ShareableLink | null;\n  autoFocus?: boolean;\n}\nfunction ShareableLinkInput({link, autoFocus}: ShareableLinkInputProps) {\n  const {base_url} = useSettings();\n  const {trans} = useTrans();\n  const entry = useActiveDialogEntry();\n  const hash = link?.hash || entry?.hash || randomString();\n  const linkUrl = `${base_url}/drive/s/${hash}`;\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\n    successDuration: 1000,\n  });\n  return (\n    <TextField\n      autoFocus={autoFocus}\n      disabled={!link}\n      className=\"mt-10\"\n      readOnly\n      value={linkUrl}\n      aria-label={trans({message: 'Shareable link'})}\n      onFocus={e => {\n        (e.target as HTMLInputElement).select();\n      }}\n      endAppend={\n        <Button\n          className=\"min-w-100\"\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={setCopied}\n        >\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n        </Button>\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {DriveQueryKeys} from '../../drive-query-keys';\n\nexport interface UpdateShareableLinkPayload {\n  allowEdit: boolean;\n  allowDownload: boolean;\n  expiresAt: string;\n  password: string;\n  entryId: number;\n}\n\nfunction updateShareableLink({\n  entryId,\n  ...payload\n}: UpdateShareableLinkPayload): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/shareable-link`, payload)\n    .then(response => response.data);\n}\n\nexport function useUpdateShareableLink(\n  form: UseFormReturn<UpdateShareableLinkPayload>\n) {\n  return useMutation(\n    (payload: UpdateShareableLinkPayload) => updateShareableLink(payload),\n    {\n      onSuccess: (data, {entryId}) => {\n        queryClient.setQueryData<FetchShareableLinkResponse>(\n          DriveQueryKeys.fetchEntryShareableLink(entryId),\n          data\n        );\n      },\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {Fragment, ReactElement, useState} from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {getLocalTimeZone, now} from '@internationalized/date';\nimport {Button} from '@common/ui/buttons/button';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {Form} from '@common/ui/forms/form';\nimport {\n  UpdateShareableLinkPayload,\n  useUpdateShareableLink,\n} from '../../shareable-link/queries/use-update-shareable-link';\nimport {FormSwitch, Switch} from '@common/ui/forms/toggle/switch';\nimport {toast} from '@common/ui/toast/toast';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {Trans} from '@common/i18n/trans';\nimport {message} from '@common/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface LinkSettingsDialogProps {\n  className?: string;\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: FileEntry;\n}\nexport function LinkSettingsDialog({\n  className,\n  setActivePanel,\n  entry,\n}: LinkSettingsDialogProps) {\n  const {formId} = useDialogContext();\n  const {data} = useEntryShareableLink(entry.id);\n  const link = data?.link;\n  const form = useForm<UpdateShareableLinkPayload>({\n    defaultValues: {\n      allowDownload: link?.allow_download,\n      allowEdit: link?.allow_edit,\n      expiresAt: link?.expires_at,\n      entryId: entry.id,\n    },\n  });\n  const updateLink = useUpdateShareableLink(form);\n\n  return (\n    <Fragment>\n      <DialogHeader\n        onDismiss={() => {\n          setActivePanel('main');\n        }}\n      >\n        <Trans message=\"Shareable Link Settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <m.div\n          key=\"link-settings-content\"\n          className=\"min-h-[335px]\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <Form\n            id={formId}\n            className={className}\n            form={form}\n            onSubmit={value => {\n              updateLink.mutate(value, {\n                onSuccess: () => {\n                  setActivePanel('main');\n                  toast(message('Link settings saved'));\n                },\n              });\n            }}\n          >\n            <LinkExpirationOption showField={!!link?.expires_at} />\n            <LinkPasswordOption showField={!!link?.password} />\n            <LinkOption>\n              <Trans message=\"Allow download\" />\n              <FormSwitch name=\"allowDownload\">\n                <Trans message=\"Users with link can download this item\" />\n              </FormSwitch>\n            </LinkOption>\n            <LinkOption showBorder={false}>\n              <Trans message=\"Allow import\" />\n              <FormSwitch name=\"allowEdit\">\n                <Trans message=\"Users with link can import this item into their own drive\" />\n              </FormSwitch>\n            </LinkOption>\n          </Form>\n        </m.div>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setActivePanel('main');\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateLink.isLoading}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Fragment>\n  );\n}\n\nconst minDate = now(getLocalTimeZone());\n\ninterface LinkExpirationOptionProps {\n  showField: boolean;\n}\nfunction LinkExpirationOption({\n  showField: showFieldDefault,\n}: LinkExpirationOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Link expiration\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Link is valid until\" />\n        </Switch>\n        {showField && (\n          <FormDatePicker\n            min={minDate}\n            name=\"expiresAt\"\n            granularity=\"minute\"\n            className=\"mt-20\"\n            aria-label={trans({\n              message: 'Link expiration date and time',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkPasswordOptionProps {\n  showField: boolean;\n}\nfunction LinkPasswordOption({\n  showField: showFieldDefault,\n}: LinkPasswordOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Password protect\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Users will need to enter password in order to view this link\" />\n        </Switch>\n        {showField && (\n          <FormTextField\n            type=\"password\"\n            autoFocus\n            name=\"password\"\n            className=\"mt-20\"\n            aria-label={trans({message: 'Link password'})}\n            description={\n              <Trans message=\"Password will not be requested when viewing the link as file owner.\" />\n            }\n            placeholder={trans({\n              message: 'Enter new password...',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkOptionProps {\n  children: [ReactElement, ReactElement];\n  showBorder?: boolean;\n}\nfunction LinkOption({children, showBorder = true}: LinkOptionProps) {\n  const [title, content] = children;\n  return (\n    <div className={clsx(showBorder && 'border-b mb-20 pb-20')}>\n      <div className=\"text-sm font-medium mb-8\">{title}</div>\n      {content}\n    </div>\n  );\n}\n","import {Fragment, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {SharePanel} from './share-panel';\nimport {ShareableLinkPanel} from './link-panel/shareable-link-panel';\nimport {LinkSettingsDialog} from './link-panel/link-settings-dialog';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../drive-query-keys';\n\nexport type ShareDialogActivePanel = 'main' | 'linkSettings';\n\ninterface ShareDialogProps {\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nexport function ShareDialog({\n  entry: initialEntry,\n  focusLinkInput,\n}: ShareDialogProps) {\n  const {\n    data: {fileEntry},\n  } = useQuery(\n    DriveQueryKeys.fetchFileEntry(initialEntry.id),\n    () => {\n      return apiClient\n        .get(`drive/file-entries/${initialEntry.id}/model`)\n        .then(response => response.data as {fileEntry: DriveEntry});\n    },\n    {\n      initialData: {fileEntry: initialEntry},\n    }\n  );\n\n  const [activePanel, setActivePanel] =\n    useState<ShareDialogActivePanel>('main');\n\n  return (\n    <Dialog size=\"lg\">\n      <AnimatePresence initial={false} mode=\"wait\">\n        {activePanel === 'linkSettings' ? (\n          <LinkSettingsDialog\n            key=\"one\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n          />\n        ) : (\n          <MainDialog\n            key=\"two\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n            focusLinkInput={focusLinkInput}\n          />\n        )}\n      </AnimatePresence>\n    </Dialog>\n  );\n}\n\ninterface MainDialogProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nfunction MainDialog({setActivePanel, entry, focusLinkInput}: MainDialogProps) {\n  return (\n    <Fragment>\n      <DialogHeader>\n        <Trans message=\"Share ‘:name’\" values={{name: entry.name}} />\n      </DialogHeader>\n      <DialogBody className=\"relative\">\n        <m.div\n          key=\"share-content\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <SharePanel className=\"border-b pb-30 mb-30\" entry={entry} />\n          <ShareableLinkPanel\n            setActivePanel={setActivePanel}\n            entry={entry}\n            focusInput={!!focusLinkInput}\n          />\n        </m.div>\n      </DialogBody>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface SearchComboBoxProps {\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogSearch({\n  allFolders,\n  onFolderSelected,\n}: SearchComboBoxProps) {\n  const {trans} = useTrans();\n  const searchLabel = trans({message: 'Search folders'});\n  return (\n    <ComboBox\n      size=\"sm\"\n      maxItems={10}\n      placeholder={searchLabel}\n      aria-label={searchLabel}\n      className=\"pt-20\"\n      endAdornmentIcon={<SearchIcon />}\n      items={allFolders}\n      clearInputOnItemSelection\n      onItemSelected={value => {\n        const folderId = parseInt(value as string);\n        const folder = allFolders.find(f => f.id === folderId);\n        if (folder) {\n          onFolderSelected(folder);\n        }\n      }}\n    >\n      {item => (\n        <Item key={item.id} value={item.id}>\n          {item.name}\n        </Item>\n      )}\n    </ComboBox>\n  );\n}\n","import React from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderBreadCrumbsProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  rootFolder: PartialFolder;\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogBreadcrumbs({\n  selectedFolder,\n  allFolders,\n  rootFolder,\n  onFolderSelected,\n}: FolderBreadCrumbsProps) {\n  const path: PartialFolder[] = selectedFolder.path\n    .split('/')\n    .map(part => {\n      const folderId = parseInt(part);\n      return allFolders.find(folder => folderId === folder.id);\n    })\n    .filter(f => !!f) as PartialFolder[];\n  const fullPath: PartialFolder[] = [rootFolder, ...path];\n\n  const previous = path[path.length - 2];\n\n  return (\n    <div className=\"flex items-center border-b pb-10 gap-6\">\n      <IconButton\n        className=\"flex-shrink-0\"\n        variant=\"outline\"\n        size=\"xs\"\n        radius=\"rounded\"\n        disabled={!previous && !selectedFolder.id}\n        onClick={() => {\n          onFolderSelected(previous || rootFolder);\n        }}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\n        {fullPath.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                onFolderSelected(item);\n              }}\n              key={item.id || 'root'}\n              className=\"flex items-center gap-8\"\n            >\n              {!item.id && <FolderIcon className=\"icon-sm\" />}\n              {item.name}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__b64d6dd2__\"","import React, {useMemo} from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {ChevronRightIcon} from '@common/icons/material/ChevronRight';\nimport {Trans} from '@common/i18n/trans';\nimport {List, ListItem} from '@common/ui/list/list';\nimport myFilesSvg from './my-files.svg';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderListProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\n\nexport function MoveEntriesDialogFolderList(props: FolderListProps) {\n  const {onFolderSelected, selectedFolder, allFolders} = props;\n\n  const subFolders = useMemo(() => {\n    const parentId = selectedFolder.id || null;\n    return allFolders.filter(f => f.parent_id === parentId);\n  }, [selectedFolder.id, allFolders]);\n\n  if (!subFolders.length) {\n    return (\n      <IllustratedMessage\n        size=\"xs\"\n        className=\"pt-64 pb-20 min-h-288\"\n        image={<SvgImage src={myFilesSvg} />}\n        title={\n          <Trans\n            message={`There are no subfolders in \":folder\"`}\n            values={{folder: selectedFolder.name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <List className=\"h-288 overflow-y-auto\">\n      {subFolders.map(folder => {\n        return (\n          <ListItem\n            className=\"border-b min-h-48\"\n            key={folder.id}\n            onSelected={() => {\n              onFolderSelected(folder);\n            }}\n            startIcon={<FileTypeIcon type=\"folder\" />}\n            endIcon={<ChevronRightIcon size=\"md\" />}\n          >\n            {folder.name}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import React, {useState} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {useFolders} from '../../queries/use-folders';\nimport {useMoveEntries} from '../../queries/use-move-entries';\nimport {NewFolderDialog} from '../new-folder-dialog';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {MoveEntriesDialogSearch} from './move-entries-dialog-search';\nimport {MoveEntriesDialogBreadcrumbs} from './move-entries-dialog-breadcrumbs';\nimport {MoveEntriesDialogFolderList} from './move-entries-dialog-folder-list';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {RootFolderPage} from '../../../drive-page/drive-page';\nimport {DriveEntry} from '../../drive-entry';\nimport {useDriveStore} from '../../../drive-store';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {\n  canMoveEntriesInto,\n  PartialFolder,\n} from '../../utils/can-move-entries-into';\n\ninterface MoveEntriesDialogProps {\n  entries: DriveEntry[];\n}\nexport function MoveEntriesDialog({entries}: MoveEntriesDialogProps) {\n  const {data} = useFolders();\n  const allFolders = data?.folders || [];\n  const activePage = useDriveStore(s => s.activePage);\n  const [selectedFolder, setSelectedFolder] = useState<PartialFolder>(\n    activePage?.folder || RootFolderPage.folder\n  );\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans\n          message=\"Move [one ‘:name‘|other :count items]\"\n          values={{\n            count: entries.length,\n            name: entries[0].name,\n          }}\n        />\n      </DialogHeader>\n      <DialogBody>\n        <div className=\"text-sm\">\n          <Trans message=\"Select a destination folder.\" />\n        </div>\n        <MoveEntriesDialogSearch\n          allFolders={allFolders}\n          onFolderSelected={setSelectedFolder}\n        />\n        <div className=\"mt-40 mb-20\">\n          <MoveEntriesDialogBreadcrumbs\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            rootFolder={RootFolderPage.folder}\n            onFolderSelected={setSelectedFolder}\n          />\n          <MoveEntriesDialogFolderList\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            onFolderSelected={setSelectedFolder}\n          />\n        </div>\n      </DialogBody>\n      <Footer\n        selectedFolder={selectedFolder}\n        setSelectedFolder={setSelectedFolder}\n        entries={entries}\n      />\n    </Dialog>\n  );\n}\n\ninterface FooterProps {\n  selectedFolder: PartialFolder;\n  setSelectedFolder: (folder: PartialFolder) => void;\n  entries: DriveEntry[];\n}\nfunction Footer({selectedFolder, setSelectedFolder, entries}: FooterProps) {\n  const {close} = useDialogContext();\n  const isMobile = useIsMobileMediaQuery();\n  const moveEntries = useMoveEntries();\n  return (\n    <DialogFooter\n      className=\"border-t\"\n      startAction={\n        <DialogTrigger\n          type=\"modal\"\n          onClose={folder => {\n            if (folder) {\n              setSelectedFolder(folder);\n            }\n          }}\n        >\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\n            <Trans message=\"New Folder\" />\n          </Button>\n          <NewFolderDialog parentId={selectedFolder.id} />\n        </DialogTrigger>\n      }\n    >\n      {!isMobile && (\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n      )}\n      <Button\n        type=\"submit\"\n        variant=\"flat\"\n        color=\"primary\"\n        disabled={\n          !canMoveEntriesInto(entries, selectedFolder) || moveEntries.isLoading\n        }\n        onClick={() => {\n          moveEntries.mutate(\n            {\n              destinationId: selectedFolder.id,\n              entryIds: entries.map(e => e.id),\n            },\n            {onSuccess: close}\n          );\n        }}\n      >\n        <Trans message=\"Move here\" />\n      </Button>\n    </DialogFooter>\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {useDeleteEntries} from '../queries/use-delete-entries';\nimport {driveState} from '../../drive-store';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function DeleteEntriesForeverDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const deleteEntries = useDeleteEntries();\n  const {close} = useDialogContext();\n\n  const message =\n    entries.length === 1 ? (\n      <Trans\n        message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\"\n        values={{name: entries[0].name}}\n      />\n    ) : (\n      <Trans\n        message=\":count items will be deleted forever and you won't be able to restore them.\"\n        values={{count: entries.length}}\n      />\n    );\n\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete forever?\" />}\n      body={message}\n      confirm={<Trans message=\"Delete forever\" />}\n      isLoading={deleteEntries.isLoading}\n      onConfirm={() => {\n        deleteEntries.mutate(\n          {\n            entryIds: entries.map(e => e.id),\n            deleteForever: true,\n          },\n          {\n            onSuccess: () => {\n              close();\n              driveState().selectEntries([]);\n            },\n          }\n        );\n      }}\n    />\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {driveState} from '../../drive-store';\nimport {useRestoreEntries} from '../queries/use-restore-entries';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function BlockTrashFolderViewDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const restoreEntries = useRestoreEntries();\n  const {close} = useDialogContext();\n\n  return (\n    <ConfirmationDialog\n      title={<Trans message=\"This folder is in your trash\" />}\n      body={<Trans message=\"To view this folder, restore it from the trash.\" />}\n      confirm={<Trans message=\"Restore\" />}\n      isLoading={restoreEntries.isLoading}\n      onConfirm={() => {\n        restoreEntries.mutate(\n          {\n            entryIds: entries.map(e => e.id),\n          },\n          {\n            onSuccess: () => {\n              close();\n              driveState().selectEntries([]);\n            },\n          }\n        );\n      }}\n    />\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {ActiveActionDialog, driveState, useDriveStore} from '../../drive-store';\nimport {RenameEntryDialog} from './rename-entry-dialog';\nimport {NewFolderDialog} from './new-folder-dialog';\nimport {EntryPreviewDialog} from './entry-preview-dialog';\nimport {ShareDialog} from '../../share-dialog/share-dialog';\nimport {MoveEntriesDialog} from './move-entries-dialog/move-entries-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DeleteEntriesForeverDialog} from './delete-entries-forever-dialog';\nimport {BlockTrashFolderViewDialog} from './block-trash-folder-view-dialog';\n\nexport function DriveDialogsContainer() {\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\n  const dialog = getDialog(activeDialog);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog}\n      onClose={() => {\n        driveState().setActiveActionDialog(null);\n      }}\n    >\n      {dialog}\n    </DialogTrigger>\n  );\n}\n\nfunction getDialog(dialog?: ActiveActionDialog | null): ReactElement | null {\n  switch (dialog?.name) {\n    case 'rename':\n      return <RenameEntryDialog entries={dialog.entries} />;\n    case 'newFolder':\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\n    case 'preview':\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\n    case 'share':\n      return <ShareDialog entry={dialog.entries[0]} />;\n    case 'getLink':\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\n    case 'moveTo':\n      return <MoveEntriesDialog entries={dialog.entries} />;\n    case 'confirmAndDeleteForever':\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\n    case 'trashFolderBlock':\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\n    default:\n      return null;\n  }\n}\n","import React, {useState} from 'react';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useDriveStore} from '../drive-store';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useSearchParams} from 'react-router-dom';\nimport {IconButton} from '@common/ui/buttons/icon-button';\n\nexport function NavbarSearch() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  return (\n    <form\n      className=\"flex-auto max-w-620\"\n      onSubmit={e => {\n        e.preventDefault();\n        navigate(\n          {\n            pathname: SearchPage.path,\n            search: `?query=${inputValue}`,\n          },\n          {replace: true}\n        );\n      }}\n    >\n      <TextField\n        size=\"sm\"\n        background=\"bg-paper\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        onFocus={() => {\n          if (activePage !== SearchPage) {\n            navigate(SearchPage.path);\n          }\n        }}\n        startAdornment={\n          <IconButton type=\"submit\" radius=\"rounded\">\n            <SearchIcon />\n          </IconButton>\n        }\n        className=\"flex-auto max-w-620\"\n        placeholder={trans({message: 'Search'})}\n        aria-label={trans({message: 'Search files and folders'})}\n      />\n    </form>\n  );\n}\n","import {InteractableEvent} from '../interactable-event';\nimport {useEffect, useId, useRef} from 'react';\nimport {dragMonitors, DragSessionStatus} from './drag-state';\nimport {ConnectedDraggable} from './use-draggable';\n\nexport interface DragMonitor {\n  type: string;\n  onDragStart?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragMove?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragEnd?: (\n    e: InteractableEvent,\n    dragTarget: ConnectedDraggable,\n    status: DragSessionStatus\n  ) => void;\n}\n\nexport function useDragMonitor(monitor: DragMonitor) {\n  const monitorRef = useRef(monitor);\n  const id = useId();\n\n  useEffect(() => {\n    dragMonitors.set(id, monitorRef.current);\n    return () => {\n      dragMonitors.delete(id);\n    };\n  }, [id]);\n}\n","import {useDragMonitor} from '@common/ui/interactions/dnd/use-drag-monitor';\nimport React, {memo, useRef, useState} from 'react';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {\n  DragSessionStatus,\n  droppables,\n} from '@common/ui/interactions/dnd/drag-state';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {\n  isFolderTreeDragId,\n  makeFolderTreeDragId,\n} from '../layout/sidebar/folder-tree-drag-id';\nimport {InteractableEvent} from '@common/ui/interactions/interactable-event';\nimport {useDriveStore} from '../drive-store';\nimport {ConnectedDraggable} from '@common/ui/interactions/dnd/use-draggable';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface DragPreviewState {\n  entries?: FileEntry[];\n  e?: InteractableEvent;\n  status?: DragSessionStatus;\n  draggingTreeItem?: boolean;\n}\n\nexport function EntryDragPreview() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [points, setPoints] = useState<{start?: Point; end?: Point}>();\n  const [state, setState] = useState<DragPreviewState>({});\n\n  useDragMonitor({\n    type: 'fileEntry',\n    onDragStart: (e, dragTarget) => {\n      const target = dragTarget as ConnectedDraggable<FileEntry[]>;\n      if (target) {\n        setState({\n          entries: target.getData(),\n          e,\n          draggingTreeItem: isFolderTreeDragId(target.id as number),\n        });\n        setPoints({start: e});\n      }\n    },\n    onDragMove: e => {\n      setState(prev => {\n        return {...prev, e: e};\n      });\n      setPoints(prev => {\n        return {...prev, end: e};\n      });\n    },\n    onDragEnd: (e, dragTarget, status) => {\n      setState({status});\n    },\n  });\n\n  let preview = null;\n\n  if (state.entries && state.e) {\n    preview = (\n      <div\n        ref={ref}\n        style={\n          state.e\n            ? {\n                transform: `translate(${state.e.x}px, ${state.e.y}px)`,\n                width: `${state.e.rect.width}px`,\n              }\n            : undefined\n        }\n        className=\"fixed isolate left-0 top-0 pointer-events-none\"\n      >\n        {state.entries.map((item, index) => (\n          <EntryPreview\n            key={item.id}\n            index={index}\n            entry={item}\n            points={points}\n            state={state}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\n}\n\ninterface EntryPreviewProps {\n  entry: FileEntry;\n  index: number;\n  points?: {start?: Point; end?: Point};\n  state: DragPreviewState;\n}\nconst EntryPreview = memo(\n  ({entry, points, index, state}: EntryPreviewProps) => {\n    const viewMode = useDriveStore(s => s.viewMode);\n    const droppableId = state.draggingTreeItem\n      ? makeFolderTreeDragId(entry)\n      : entry.id;\n    const target = droppables.get(droppableId);\n    if (!target?.rect || !points?.start) return null;\n    const rect = target.rect;\n    const itemCount = state.entries?.length || 0;\n\n    const exitVariant = (status: DragSessionStatus) => {\n      if (status === 'dropSuccess') {\n        return {\n          x: 0,\n          y: 0,\n          opacity: 0,\n          transition: {duration: 0.1, delay: 0},\n        };\n      }\n      return {\n        x: rect.left - (points.end?.x || 0),\n        y: rect.top - (points.end?.y || 0),\n        width: `${state.e?.rect.width}px`,\n      };\n    };\n\n    return (\n      <m.div\n        key={entry.id}\n        transition={{delay: 0.01 * index, bounce: 0, duration: 0.2}}\n        initial={{\n          x: rect.left - points.start.x,\n          y: rect.top - points.start.y,\n          width: `${state.e?.rect.width}px`,\n        }}\n        animate={{\n          x: 0,\n          y: 0,\n          // in list/table mode limit preview size to 288px, but start and end the animation\n          // at full width, so it returns to original position at original size smoothly\n          width: viewMode === 'list' ? 288 : undefined,\n        }}\n        exit={exitVariant as any}\n        style={{\n          // in grid mode simply use the width of the draggable item\n          width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\n          height: `${state.e?.rect.height}px`,\n        }}\n        className={clsx(\n          'absolute bg-paper whitespace-nowrap rounded border border-primary-light max-h-48',\n          index < 2 && 'shadow',\n          index === 0 && 'z-10 top-0 left-0',\n          index > 0 && 'top-6 left-6'\n        )}\n      >\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\n        <div className=\"text-sm h-full flex justify-center items-center px-16 gap-10 bg-primary-light/20 overflow-hidden\">\n          <FileTypeIcon type={entry.type} />\n          <div className=\"flex-auto text-ellipsis overflow-hidden\">\n            {entry.name}\n          </div>\n        </div>\n      </m.div>\n    );\n  }\n);\n\ninterface EntryCountProps {\n  count: number;\n}\nconst EntryCount = memo(({count}: EntryCountProps) => {\n  return (\n    <m.div\n      key=\"entryCount\"\n      initial={{opacity: 0}}\n      animate={{opacity: 1, transition: {delay: 0.1}}}\n      exit={{opacity: 0}}\n      transition={{duration: 0.1}}\n      className=\"absolute -top-6 shadow-lg -right-6 z-30 rounded-full bg-danger text-white w-20 h-20 flex items-center justify-center text-sm font-bold z-10\"\n    >\n      {count}\n    </m.div>\n  );\n});\n","import {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\nimport React, {useContext} from 'react';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {Trans} from '@common/i18n/trans';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ViewListIcon} from '@common/icons/material/ViewList';\nimport {ViewModuleIcon} from '@common/icons/material/ViewModule';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {InfoIcon} from '@common/icons/material/Info';\nimport {DriveSortButton} from './sorting/drive-sort-button';\n\nexport function DriveContentHeader() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <DashboardContentHeader className=\"px-8 md:px-26 py-4 flex items-center gap-20 border-b h-60\">\n      {isMobileMode ? (\n        <DriveSortButton isDisabled={activePage?.disableSort} />\n      ) : (\n        <PageBreadcrumbs />\n      )}\n      <div className=\"text-muted ml-auto flex-shrink-0\">\n        <ToggleViewModeButton />\n        <ToggleDetailsButton />\n      </div>\n    </DashboardContentHeader>\n  );\n}\n\nfunction ToggleViewModeButton() {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const tooltip =\n    viewMode === 'grid' ? (\n      <Trans message=\"List view\" />\n    ) : (\n      <Trans message=\"Grid view\" />\n    );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        onClick={() => {\n          driveState().setViewMode(\n            driveState().viewMode === 'list' ? 'grid' : 'list'\n          );\n        }}\n      >\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nfunction ToggleDetailsButton() {\n  const {rightSidenavStatus: status, setRightSidenavStatus} = useContext(\n    DashboardLayoutContext\n  );\n  const tooltip = status ? (\n    <Trans message=\"Hide details\" />\n  ) : (\n    <Trans message=\"Show details\" />\n  );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        color={status === 'open' ? 'primary' : null}\n        onClick={() => {\n          setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\n        }}\n      >\n        <InfoIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import React, {Fragment, useContext, useEffect, useMemo} from 'react';\nimport {Link, useLocation, useParams} from 'react-router-dom';\nimport {Sidebar} from './sidebar/sidebar';\nimport {FileView} from '../file-view/file-view';\nimport {UploadQueue} from '../uploading/upload-queue';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {\n  DRIVE_PAGES,\n  makePartialFolderPage,\n  SearchPage,\n} from '../drive-page/drive-page';\nimport {DetailsSidebar} from '../details-sidebar/details-sidebar';\nimport {DriveDialogsContainer} from '../files/dialogs/drive-dialogs-container';\nimport {NavbarSearch} from '../search/navbar-search';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {EntryDragPreview} from '../file-view/entry-drag-preview';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DriveContentHeader} from './drive-content-header';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {Trans} from '@common/i18n/trans';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {CreateNewButton} from './create-new-button';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\n\nexport function DriveLayout() {\n  const {pathname} = useLocation();\n  const {hash} = useParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const activePage = useDriveStore(s => s.activePage);\n\n  useEffect(() => {\n    driveState().setActivePage(\n      DRIVE_PAGES.find(p => p.path === pathname) || makePartialFolderPage(hash!)\n    );\n  }, [pathname, hash]);\n\n  const urlsContextValue = useMemo(() => {\n    return {workspaceId};\n  }, [workspaceId]);\n\n  useEffect(() => {\n    return () => {\n      driveState().reset();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      {activePage?.label && (\n        <StaticPageTitle>{activePage.label}</StaticPageTitle>\n      )}\n      <FileUploadProvider>\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\n          <DashboardLayout\n            name=\"drive\"\n            onDragOver={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.dataTransfer.dropEffect = 'none';\n            }}\n            onDrop={e => {\n              // prevent files from desktop from blowing away the document\n              e.preventDefault();\n            }}\n          >\n            <Navbar />\n            <DashboardSidenav position=\"left\" size=\"md\">\n              <Sidebar />\n            </DashboardSidenav>\n            <DriveContentHeader />\n            <DashboardContent>\n              <FileView />\n            </DashboardContent>\n            <UploadQueue />\n            <DriveDialogsContainer />\n            <DashboardSidenav position=\"right\" size=\"lg\">\n              <DetailsSidebar />\n            </DashboardSidenav>\n          </DashboardLayout>\n        </FileEntryUrlsContext.Provider>\n        <EntryDragPreview />\n      </FileUploadProvider>\n    </Fragment>\n  );\n}\n\nfunction Navbar() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n\n  const children = isMobileMode ? null : <NavbarSearch />;\n  const searchButton = (\n    <IconButton elementType={Link} to={SearchPage.path}>\n      <SearchIcon />\n    </IconButton>\n  );\n\n  const mobileRightChildren = (\n    <Fragment>\n      {activePage !== SearchPage && searchButton}\n      <CreateNewButton isCompact />\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <DashboardNavbar\n        rightChildren={isMobileMode && mobileRightChildren}\n        menuPosition=\"drive-navbar\"\n      >\n        {children}\n      </DashboardNavbar>\n      {isMobileMode && <FloatingActionList />}\n    </Fragment>\n  );\n}\n\nfunction FloatingActionList() {\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\n  if (!entriesSelected) return null;\n  return (\n    <div className=\"fixed bg-primary w-full h-54 text-on-primary shadow-xl z-10 rounded top-0 right-0 flex items-center justify-center gap-10 px-6\">\n      <IconButton\n        onClick={() => {\n          driveState().selectEntries([]);\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Trans message=\":count selected\" values={{count: entriesSelected}} />\n      <EntryActionList className=\"ml-auto\" />\n    </div>\n  );\n}\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport React from 'react';\nimport {ShareableLinkPage} from './shareable-link/shareable-link-page/shareable-link-page';\nimport {DriveLayout} from './layout/drive-layout';\nimport {AuthRoute} from '@common/auth/guards/auth-route';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\n\nconst DriveRouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/folders/:hash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/shares',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/recent',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/starred',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/trash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/search',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {path: 's/:hash', element: <ShareableLinkPage />},\n  {path: '*', element: <NotFoundPage />},\n];\n\nexport default function DriveRoutes() {\n  return useRoutes(DriveRouteConfig);\n}\n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","pageParam","query","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_state$data","_state$data2","state","result","isFetching","isRefetching","isFetchingNextPage","isFetchingPreviousPage","hasNextPage","hasPreviousPage","useInfiniteQuery","arg1","arg2","arg3","parseQueryArgs","useBaseQuery","DriveQueryKeys","params","key","hash","entryId","id","invalidateEntryQueries","queryClient","useLinkPageStore","create","immer","set","getFromLocalStorage","value","mode","setInLocalStorage","linkPageState","fetchLinkByHash","page","order","password","apiClient","response","useShareableLinkPage","useParams","orderBy","orderDir","s","isPasswordProtected","lastResponse","currentPage","lastPage","retryCount","e","isPasswordInvalidResponse","_a","_b","p","axios","checkLinkPassword","linkHash","r","useCheckLinkPassword","useMutation","props","err","showHttpErrorToast","message","importIntoOwnDrive","linkId","useImportIntoOwnDrive","toast","ShareableLinkPageActionButtons","link","user","isLoggedIn","useAuth","downloadUrl","useFileEntryUrls","alreadyImported","u","jsx","DownloadButton","jsxs","MenuTrigger","downloadFileFromUrl","IconButton","KeyboardArrowDownIcon","Menu","MenuItem","FileDownloadIcon","Trans","ImportExportIcon","useIsMobileMediaQuery","Tooltip","Button","ShareableLinkNavbar","isMobile","Navbar","FileTypeIcon","PasswordPage","trans","useTrans","fieldLabel","setPassword","useState","checkPassword","passwordIsInvalid","SvgImage","secureFilesSvg","TextField","BaseFileGridItem","React","entry","className","isSelected","isMobileMode","footerAdornment","domProps","ref","clsx","FileThumbnail","Footer","adornment","FolderPreviewFileGrid","entries","onEntrySelected","index","stableArray","enableMapSet","initialState","getBootstrapData","useDriveStore","get","isOpen","data","activePageId","storedDescriptor","name","current","merge","driveState","useActiveDialogEntry","dialog","createShareableLink","useCreateShareableLink","addStarToEntries","entryIds","useAddStarToEntries","payload","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","shareSvg","defaultSortDescriptor","makeFolderPage","folder","makePartialFolderPage","getPathForFolder","rootFolder","RootFolderPage","RecentPage","SearchPage","isSearchingOrFiltering","SharesPage","TrashPage","StarredPage","DRIVE_PAGES","deleteEntries","useDeleteEntries","getLoaderMessage","emptyTrash","deleteForever","backendError","getAxiosErrorMessage","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","action","RemoveRedEyeIcon","activePage","PersonAddIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","DeleteIcon","RestoreIcon","useStorageSummary","useQuery","fetchStorageSummary","formatResponse","percentage","prettyBytes","EightMB","useDriveUploadQueue","uploadMultiple","useFileUploadStore","usage","workspaceId","useActiveWorkspaceId","parentId","uploads","useSettings","maxFileSize","allowedFileTypes","blockedFileTypes","useCallback","files","file","UploadedFile","sizeOfFiles","sum","currentlyUsing","availableSpace","useDrivePageActions","newFolder","useNewFolderAction","uploadFiles","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","CreateNewFolderIcon","FileUploadIcon","openUploadWindow","DriveFolderUploadIcon","DeleteForeverIcon","EntryActionMenuTrigger","children","PageMenu","EntriesMenu","actions","BaseMenu","createElement","formatFileSize","memoize","bytes","fileTableColumns","FileNameColumn","FormattedDate","ActionsColumn","isCollapsedMode","useContext","TableContext","sizeClassName","selectedRows","Checkbox","MoreVertIcon","mobileColumns","config","FolderPreviewFileTable","sortDescriptor","Table","item","buildFolderHash","folderHash","useNavigateToSubfolder","navigate","useNavigate","FolderPreviewFileView","pathname","useLocation","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","viewMode","sentinelRef","useRef","fetchNextPage","isPreviousData","useEffect","sentinelEl","observer","ProgressCircle","handlePreview","folderEntries","Fragment","AdHost","AnimatePresence","m","opacityAnimation","DialogTrigger","FilePreviewDialog","DashboardContentHeader","useFolderPath","isEnabled","fetchFolderPath","FolderPreviewBreadcrumb","content","items","parent","Breadcrumb","BreadcrumbItem","AVAILABLE_SORTS","EntriesSortButton","descriptor","onChange","isDisabled","column","direction","sort","SortIcon","MenuSection","FolderPreviewHeader","activeSort","hasEntry","GridViewIcon","FolderPreview","isFetched","showEmptyMessage","DashboardLayout","DashboardNavbar","FileUploadProvider","DashboardContent","EmptyMessage","IllustratedMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","status","NotFoundPage","FileEntryUrlsContext","Meter","ProgressBarBase","StorageMeter","isLoading","label","StorageIcon","useCreateWorkspace","form","createWorkspace","WorkspaceQueryKeys","onFormQueryError","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","FormTextField","DialogFooter","fetchWorkspaceWithMembers","useWorkspaceWithMembers","InviteMembers","other","useInviteMembers","ResendInvite","inviteId","useResendInvite","matcher","isEmail","string","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","PersonalWorkspace","LeaveWorkspaceConfirmation","ConfirmationDialog","WorkspaceMembersDialog","workspace","Manager","can","usePermissions","members","InviteChipField","GroupIcon","MemberListItem","MemberDisplayNameAppend","MemberActions","authUser","permissions","authMember","mb","permission","selectedRole","setSelectedRole","changeRole","isOwner","isCurrentUser","roleSelector","RoleMenuTrigger","roleId","RemoveMemberButton","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","useValueLists","ChipField","invalid","c","type","isConfirmed","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","size","role","newValue","ArrowDropDownIcon","ResendInviteDialogTrigger","resendInvite","updateWorkspace","useUpdateWorkspace","RenameWorkspaceDialog","deleteWorkspace","useDeleteWorkspace","WorkspaceSelector","propsTrigger","useUserWorkspaces","activeWorkspace","w","setDialog","selectorIsOpen","setSelectorIsOpen","hasPermission","defaultTrigger","ButtonBase","UnfoldMoreIcon","trigger","cloneElement","WorkspaceItem","AddIcon","DialogContainer","isActive","CheckIcon","ManageButton","DeleteWorkspaceConfirmation","EditIcon","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","h","i","d","getNestedProperty","l","countNodes","fetchUserFolders","useFolders","useMoveEntries","moveEntries","canMoveEntriesInto","targets","destination","target","destinationIsInTarget","destinationPath","part","useFolderDropAction","folderAcceptsDrop","makeFolderTreeDragId","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","TreeLabel","forwardRef","icon","expandedKeys","setExpandedKeys","selectedKeys","setSelectedKeys","isExpanded","handleExpandIconClick","newExpandedKeys","_","ArrowRightIcon","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","focusedNode","setFocusedNode","hasChildren","isFirstNode","isFocused","onKeyDown","newKeys","parentEl","childNode","createEventHandler","Tree","useControlledState","FocusScope","TreeRoot","FolderTree","tree","useMemo","folders","keys","entryHash","findHash","FolderTreeItem","isRootFolder","isDragging","draggableProps","useDraggable","droppableProps","mergeProps","BackupIcon","FolderIcon","SidebarMenu","CustomMenu","TrashMenuItem","CustomMenuItem","CreateNewButton","isCompact","button","activeFolder","UploadFileIcon","Sidebar","isSubscribed","billing","Link","WorkspaceSwitcher","fetchEntries","setActiveFolder","shallowEqual","usePaginatedEntries","searchParams","useSearchParams","isDisabledInSearch","getAllEntries","all","cache","driveSearchFilters","FILE_ENTRY_TYPE_FILTER","FilterOperator","FilterControlType","createdAtFilter","updatedAtFilter","alwaysShownFilters","f","SearchFilterList","DashboardLayoutContext","inputValue","setInputValue","SearchIcon","FilterList","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_c","_d","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","EntryActionList","selectedEntries","ActionList","removeShared","DriveContextMenu","PageContextMenu","EntriesContextMenu","position","BaseContextMenu","ContextMenu","useIsTouchDevice","useMediaQuery","useFileViewDnd","isTouchDevice","itemClassName","FileTableRow","useViewItemActionHandler","FileTable","performViewItemAction","FileGridItem","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","keyboardHandler","contextMenuHandler","FooterAdornment","FileGrid","DriveSortButton","PageBreadcrumbs","useActiveWorkspace","rootItem","useRootItem","isMenuItem","MixedText","owner","InfiniteScrollSentinel","isInitialLoading","loaderMarginTop","style","_variant","loadMoreExtraContent","loadMoreClickCount","setLoadMoreClickCount","innerVariant","DropTargetMask","isVisible","mask","FileView","containerProps","boxProps","noContentMessage","handleContextMenu","handleKeybinds","isCtrlKeyPressed","Toolbar","UploadQueueItem","memo","SizeInfo","FileStatus","fileUpload","bytesUploaded","totalBytes","uploadedBytes","statusMessage","abortUpload","errorMessage","isHovered","setIsHovered","abortButton","progressButton","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","UploadQueue","Header","UploadList","inProgressUploadsCount","completedUploadsCount","clearInactive","uploadsArray","virtualizer","useVirtualizer","virtualItem","upload","detailedExamination","DetailsSidebarHeader","entryType","entryName","setRightSidenavStatus","DetailsSidebarSectionHeader","margin","useSyncEntryTags","createComment","tags","useFileEntryTags","fetchTags","DetailsSidebarTags","TagChipField","syncTags","setValue","handleChange","newTags","Item","DetailsSidebarProperties","GroupsIcon","Avatar","PropertyList","prettySize","PropertyItem","DetailsSidebar","selectedEntry","NothingSelected","useRenameEntry","renameEntry","RenameEntryDialog","initialName","onSubmit","createFolder","useCreateFolder","NewFolderDialog","EntryPreviewDialog","defaultActiveIndex","activeIndex","setActiveIndex","DriveActions","shareEntry","useShareEntry","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","PermissionSelector","getPermissionItemForUser","edit","useChangePermission","changePermission","UserAvatar","auth","SiteConfigContext","MemberList","users","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","SharePanel","isSharing","setIsSharing","selectedPermission","setSelectedPermission","useNormalizedModels","USER_MODEL","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","randomString","length","random","possible","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","Switch","ShareableLinkInput","autoFocus","base_url","linkUrl","isCopied","setCopied","useClipboard","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showFieldDefault","showField","setShowField","FormDatePicker","showBorder","title","ShareDialog","initialEntry","focusLinkInput","fileEntry","activePanel","MainDialog","MoveEntriesDialogSearch","allFolders","onFolderSelected","searchLabel","ComboBox","folderId","MoveEntriesDialogBreadcrumbs","selectedFolder","path","fullPath","previous","ArrowBackIcon","myFilesSvg","MoveEntriesDialogFolderList","subFolders","List","ListItem","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","DeleteEntriesForeverDialog","BlockTrashFolderViewDialog","DriveDialogsContainer","activeDialog","getDialog","NavbarSearch","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","prev","EntryPreview","droppableId","itemCount","exitVariant","EntryCount","count","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","tooltip","ViewListIcon","ViewModuleIcon","InfoIcon","DriveLayout","urlsContextValue","StaticPageTitle","DashboardSidenav","searchButton","mobileRightChildren","FloatingActionList","entriesSelected","DriveRouteConfig","AuthRoute","DriveRoutes","useRoutes"],"mappings":"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","x_google_ignoreList":[0,1,62]}